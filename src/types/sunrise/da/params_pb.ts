// @generated by protoc-gen-es v2.2.2 with parameter "target=ts"
// @generated from file sunrise/da/params.proto (package sunrise.da, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_amino_amino } from "../../amino/amino_pb";
import { file_gogoproto_gogo } from "../../gogoproto/gogo_pb";
import type { Coin } from "../../cosmos/base/v1beta1/coin_pb";
import { file_cosmos_base_v1beta1_coin } from "../../cosmos/base/v1beta1/coin_pb";
import type { Duration } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_duration } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file sunrise/da/params.proto.
 */
export const file_sunrise_da_params: GenFile = /*@__PURE__*/
  fileDesc("ChdzdW5yaXNlL2RhL3BhcmFtcy5wcm90bxIKc3VucmlzZS5kYSLyBAoGUGFyYW1zEjsKDnZvdGVfdGhyZXNob2xkGAEgASgJQiPI3h8A2t4fG2Nvc21vc3Nkay5pby9tYXRoLkxlZ2FjeURlYxITCgtzbGFzaF9lcG9jaBgCIAEoBBIXCg9lcG9jaF9tYXhfZmF1bHQYAyABKAQSOwoOc2xhc2hfZnJhY3Rpb24YBCABKAlCI8jeHwDa3h8bY29zbW9zc2RrLmlvL21hdGguTGVnYWN5RGVjEj8KEnJlcGxpY2F0aW9uX2ZhY3RvchgFIAEoCUIjyN4fANreHxtjb3Ntb3NzZGsuaW8vbWF0aC5MZWdhY3lEZWMSFwoPbWluX3NoYXJkX2NvdW50GAYgASgEEhcKD21heF9zaGFyZF9jb3VudBgHIAEoBBIWCg5tYXhfc2hhcmRfc2l6ZRgIIAEoBBI9ChBjaGFsbGVuZ2VfcGVyaW9kGAkgASgLMhkuZ29vZ2xlLnByb3RvYnVmLkR1cmF0aW9uQgjI3h8AmN8fARI5Cgxwcm9vZl9wZXJpb2QYCiABKAsyGS5nb29nbGUucHJvdG9idWYuRHVyYXRpb25CCMjeHwCY3x8BEmkKFGNoYWxsZW5nZV9jb2xsYXRlcmFsGAsgAygLMhkuY29zbW9zLmJhc2UudjFiZXRhMS5Db2luQjDI3h8Aqt8fKGdpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsvdHlwZXMuQ29pbnMSFwoPemtwX3Byb3Zpbmdfa2V5GAwgASgMEhkKEXprcF92ZXJpZnlpbmdfa2V5GA0gASgMOhzooB8BiuewKhNzdW5yaXNlL3gvZGEvUGFyYW1zQpIBCg5jb20uc3VucmlzZS5kYUILUGFyYW1zUHJvdG9QAVoqZ2l0aHViLmNvbS9zdW5yaXNlbGF5ZXIvc3VucmlzZS94L2RhL3R5cGVzogIDU0RYqgIKU3VucmlzZS5EYcoCClN1bnJpc2VcRGHiAhZTdW5yaXNlXERhXEdQQk1ldGFkYXRh6gILU3VucmlzZTo6RGFiBnByb3RvMw", [file_amino_amino, file_gogoproto_gogo, file_cosmos_base_v1beta1_coin, file_google_protobuf_duration]);

/**
 * Params defines the parameters for the module.
 *
 * @generated from message sunrise.da.Params
 */
export type Params = Message<"sunrise.da.Params"> & {
  /**
   * @generated from field: string vote_threshold = 1;
   */
  voteThreshold: string;

  /**
   * @generated from field: uint64 slash_epoch = 2;
   */
  slashEpoch: bigint;

  /**
   * @generated from field: uint64 epoch_max_fault = 3;
   */
  epochMaxFault: bigint;

  /**
   * @generated from field: string slash_fraction = 4;
   */
  slashFraction: string;

  /**
   * @generated from field: string replication_factor = 5;
   */
  replicationFactor: string;

  /**
   * @generated from field: uint64 min_shard_count = 6;
   */
  minShardCount: bigint;

  /**
   * @generated from field: uint64 max_shard_count = 7;
   */
  maxShardCount: bigint;

  /**
   * @generated from field: uint64 max_shard_size = 8;
   */
  maxShardSize: bigint;

  /**
   * @generated from field: google.protobuf.Duration challenge_period = 9;
   */
  challengePeriod?: Duration;

  /**
   * @generated from field: google.protobuf.Duration proof_period = 10;
   */
  proofPeriod?: Duration;

  /**
   * @generated from field: repeated cosmos.base.v1beta1.Coin challenge_collateral = 11;
   */
  challengeCollateral: Coin[];

  /**
   * @generated from field: bytes zkp_proving_key = 12;
   */
  zkpProvingKey: Uint8Array;

  /**
   * @generated from field: bytes zkp_verifying_key = 13;
   */
  zkpVerifyingKey: Uint8Array;
};

/**
 * Describes the message sunrise.da.Params.
 * Use `create(ParamsSchema)` to create a new message.
 */
export const ParamsSchema: GenMessage<Params> = /*@__PURE__*/
  messageDesc(file_sunrise_da_params, 0);

