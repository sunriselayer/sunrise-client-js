// @generated by protoc-gen-es v2.2.2 with parameter "target=ts"
// @generated from file sunrise/da/v0/published_data.proto (package sunrise.da.v0, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_amino_amino } from "../../../amino/amino_pb";
import type { Coin } from "../../../cosmos/base/v1beta1/coin_pb";
import { file_cosmos_base_v1beta1_coin } from "../../../cosmos/base/v1beta1/coin_pb";
import { file_gogoproto_gogo } from "../../../gogoproto/gogo_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file sunrise/da/v0/published_data.proto.
 */
export const file_sunrise_da_v0_published_data: GenFile = /*@__PURE__*/
  fileDesc("CiJzdW5yaXNlL2RhL3YwL3B1Ymxpc2hlZF9kYXRhLnByb3RvEg1zdW5yaXNlLmRhLnYwIsMECg1QdWJsaXNoZWREYXRhEhQKDG1ldGFkYXRhX3VyaRgBIAEoCRIhChJwYXJpdHlfc2hhcmRfY291bnQYAiABKARCBajnsCoBEhsKE3NoYXJkX2RvdWJsZV9oYXNoZXMYAyADKAwSNwoJdGltZXN0YW1wGAQgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEIIyN4fAJDfHwESJQoGc3RhdHVzGAUgASgOMhUuc3VucmlzZS5kYS52MC5TdGF0dXMSEQoJcHVibGlzaGVyGAYgASgJEhIKCmNoYWxsZW5nZXIYByABKAkSbAoXcHVibGlzaF9kYXRhX2NvbGxhdGVyYWwYCCADKAsyGS5jb3Ntb3MuYmFzZS52MWJldGExLkNvaW5CMMjeHwCq3x8oZ2l0aHViLmNvbS9jb3Ntb3MvY29zbW9zLXNkay90eXBlcy5Db2lucxJxChxzdWJtaXRfaW52YWxpZGl0eV9jb2xsYXRlcmFsGAkgAygLMhkuY29zbW9zLmJhc2UudjFiZXRhMS5Db2luQjDI3h8Aqt8fKGdpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsvdHlwZXMuQ29pbnMSQQoTcHVibGlzaGVkX3RpbWVzdGFtcBgKIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCCMjeHwCQ3x8BEhgKEGRhdGFfc291cmNlX2luZm8YCyABKAkSFwoPdmVyaWZpZWRfaGVpZ2h0GAwgASgDIk4KBVByb29mEhQKDG1ldGFkYXRhX3VyaRgBIAEoCRIOCgZzZW5kZXIYAiABKAkSDwoHaW5kaWNlcxgDIAMoAxIOCgZwcm9vZnMYBCADKAwiQwoKSW52YWxpZGl0eRIUCgxtZXRhZGF0YV91cmkYASABKAkSDgoGc2VuZGVyGAIgASgJEg8KB2luZGljZXMYAyADKAMqfwoGU3RhdHVzEhYKElNUQVRVU19VTlNQRUNJRklFRBAAEhMKD1NUQVRVU19WRVJJRklFRBABEhMKD1NUQVRVU19SRUpFQ1RFRBACEhsKF1NUQVRVU19DSEFMTEVOR0VfUEVSSU9EEAMSFgoSU1RBVFVTX0NIQUxMRU5HSU5HEARCqQEKEWNvbS5zdW5yaXNlLmRhLnYwQhJQdWJsaXNoZWREYXRhUHJvdG9QAVoqZ2l0aHViLmNvbS9zdW5yaXNlbGF5ZXIvc3VucmlzZS94L2RhL3R5cGVzogIDU0RWqgINU3VucmlzZS5EYS5WMMoCDVN1bnJpc2VcRGFcVjDiAhlTdW5yaXNlXERhXFYwXEdQQk1ldGFkYXRh6gIPU3VucmlzZTo6RGE6OlYwYgZwcm90bzM", [file_amino_amino, file_cosmos_base_v1beta1_coin, file_gogoproto_gogo, file_google_protobuf_timestamp]);

/**
 * PublishedData
 *
 * @generated from message sunrise.da.v0.PublishedData
 */
export type PublishedData = Message<"sunrise.da.v0.PublishedData"> & {
  /**
   * @generated from field: string metadata_uri = 1;
   */
  metadataUri: string;

  /**
   * @generated from field: uint64 parity_shard_count = 2;
   */
  parityShardCount: bigint;

  /**
   * @generated from field: repeated bytes shard_double_hashes = 3;
   */
  shardDoubleHashes: Uint8Array[];

  /**
   * @generated from field: google.protobuf.Timestamp timestamp = 4;
   */
  timestamp?: Timestamp;

  /**
   * @generated from field: sunrise.da.v0.Status status = 5;
   */
  status: Status;

  /**
   * @generated from field: string publisher = 6;
   */
  publisher: string;

  /**
   * @generated from field: string challenger = 7;
   */
  challenger: string;

  /**
   * @generated from field: repeated cosmos.base.v1beta1.Coin publish_data_collateral = 8;
   */
  publishDataCollateral: Coin[];

  /**
   * @generated from field: repeated cosmos.base.v1beta1.Coin submit_invalidity_collateral = 9;
   */
  submitInvalidityCollateral: Coin[];

  /**
   * @generated from field: google.protobuf.Timestamp published_timestamp = 10;
   */
  publishedTimestamp?: Timestamp;

  /**
   * @generated from field: string data_source_info = 11;
   */
  dataSourceInfo: string;

  /**
   * @generated from field: int64 verified_height = 12;
   */
  verifiedHeight: bigint;
};

/**
 * Describes the message sunrise.da.v0.PublishedData.
 * Use `create(PublishedDataSchema)` to create a new message.
 */
export const PublishedDataSchema: GenMessage<PublishedData> = /*@__PURE__*/
  messageDesc(file_sunrise_da_v0_published_data, 0);

/**
 * Proof
 *
 * @generated from message sunrise.da.v0.Proof
 */
export type Proof = Message<"sunrise.da.v0.Proof"> & {
  /**
   * @generated from field: string metadata_uri = 1;
   */
  metadataUri: string;

  /**
   * @generated from field: string sender = 2;
   */
  sender: string;

  /**
   * @generated from field: repeated int64 indices = 3;
   */
  indices: bigint[];

  /**
   * @generated from field: repeated bytes proofs = 4;
   */
  proofs: Uint8Array[];
};

/**
 * Describes the message sunrise.da.v0.Proof.
 * Use `create(ProofSchema)` to create a new message.
 */
export const ProofSchema: GenMessage<Proof> = /*@__PURE__*/
  messageDesc(file_sunrise_da_v0_published_data, 1);

/**
 * Invalidity
 *
 * @generated from message sunrise.da.v0.Invalidity
 */
export type Invalidity = Message<"sunrise.da.v0.Invalidity"> & {
  /**
   * @generated from field: string metadata_uri = 1;
   */
  metadataUri: string;

  /**
   * @generated from field: string sender = 2;
   */
  sender: string;

  /**
   * @generated from field: repeated int64 indices = 3;
   */
  indices: bigint[];
};

/**
 * Describes the message sunrise.da.v0.Invalidity.
 * Use `create(InvaliditySchema)` to create a new message.
 */
export const InvaliditySchema: GenMessage<Invalidity> = /*@__PURE__*/
  messageDesc(file_sunrise_da_v0_published_data, 2);

/**
 * PublishedDataStatus
 *
 * @generated from enum sunrise.da.v0.Status
 */
export enum Status {
  /**
   * Default value
   *
   * @generated from enum value: STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Verified
   *
   * @generated from enum value: STATUS_VERIFIED = 1;
   */
  VERIFIED = 1,

  /**
   * Rejected
   *
   * @generated from enum value: STATUS_REJECTED = 2;
   */
  REJECTED = 2,

  /**
   * Verified the votes from the validators. Challenge can be received (after preBlocker)
   *
   * @generated from enum value: STATUS_CHALLENGE_PERIOD = 3;
   */
  CHALLENGE_PERIOD = 3,

  /**
   * A certain number of SubmitInvalidity received. Validators can send SubmitValidityProof tx.
   *
   * @generated from enum value: STATUS_CHALLENGING = 4;
   */
  CHALLENGING = 4,
}

/**
 * Describes the enum sunrise.da.v0.Status.
 */
export const StatusSchema: GenEnum<Status> = /*@__PURE__*/
  enumDesc(file_sunrise_da_v0_published_data, 0);

