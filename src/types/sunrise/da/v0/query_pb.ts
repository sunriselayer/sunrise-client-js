// @generated by protoc-gen-es v2.2.2 with parameter "target=ts"
// @generated from file sunrise/da/v0/query.proto (package sunrise.da.v0, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_amino_amino } from "../../../amino/amino_pb";
import { file_cosmos_proto_cosmos } from "../../../cosmos_proto/cosmos_pb";
import { file_gogoproto_gogo } from "../../../gogoproto/gogo_pb";
import { file_google_api_annotations } from "../../../google/api/annotations_pb";
import type { Params } from "./params_pb";
import { file_sunrise_da_v0_params } from "./params_pb";
import type { Invalidity, Proof, PublishedData } from "./published_data_pb";
import { file_sunrise_da_v0_published_data } from "./published_data_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file sunrise/da/v0/query.proto.
 */
export const file_sunrise_da_v0_query: GenFile = /*@__PURE__*/
  fileDesc("ChlzdW5yaXNlL2RhL3YwL3F1ZXJ5LnByb3RvEg1zdW5yaXNlLmRhLnYwIhQKElF1ZXJ5UGFyYW1zUmVxdWVzdCJHChNRdWVyeVBhcmFtc1Jlc3BvbnNlEjAKBnBhcmFtcxgBIAEoCzIVLnN1bnJpc2UuZGEudjAuUGFyYW1zQgnI3h8AqOewKgEiMQoZUXVlcnlQdWJsaXNoZWREYXRhUmVxdWVzdBIUCgxtZXRhZGF0YV91cmkYASABKAkiTgoaUXVlcnlQdWJsaXNoZWREYXRhUmVzcG9uc2USMAoEZGF0YRgBIAEoCzIcLnN1bnJpc2UuZGEudjAuUHVibGlzaGVkRGF0YUIEyN4fACIeChxRdWVyeUFsbFB1Ymxpc2hlZERhdGFSZXF1ZXN0IlEKHVF1ZXJ5QWxsUHVibGlzaGVkRGF0YVJlc3BvbnNlEjAKBGRhdGEYASADKAsyHC5zdW5yaXNlLmRhLnYwLlB1Ymxpc2hlZERhdGFCBMjeHwAibwoZUXVlcnlWYWxpZGl0eVByb29mUmVxdWVzdBIUCgxtZXRhZGF0YV91cmkYASABKAkSPAoRdmFsaWRhdG9yX2FkZHJlc3MYAiABKAlCIdK0LR1jb3Ntb3MuVmFsaWRhdG9yQWRkcmVzc1N0cmluZyJHChpRdWVyeVZhbGlkaXR5UHJvb2ZSZXNwb25zZRIpCgVwcm9vZhgBIAEoCzIULnN1bnJpc2UuZGEudjAuUHJvb2ZCBMjeHwAiNQodUXVlcnlBbGxWYWxpZGl0eVByb29mc1JlcXVlc3QSFAoMbWV0YWRhdGFfdXJpGAEgASgJIkwKHlF1ZXJ5QWxsVmFsaWRpdHlQcm9vZnNSZXNwb25zZRIqCgZwcm9vZnMYASADKAsyFC5zdW5yaXNlLmRhLnYwLlByb29mQgTI3h8AImAKFlF1ZXJ5SW52YWxpZGl0eVJlcXVlc3QSFAoMbWV0YWRhdGFfdXJpGAEgASgJEjAKDnNlbmRlcl9hZGRyZXNzGAIgASgJQhjStC0UY29zbW9zLkFkZHJlc3NTdHJpbmciTgoXUXVlcnlJbnZhbGlkaXR5UmVzcG9uc2USMwoKaW52YWxpZGl0eRgBIAEoCzIZLnN1bnJpc2UuZGEudjAuSW52YWxpZGl0eUIEyN4fACIxChlRdWVyeUFsbEludmFsaWRpdHlSZXF1ZXN0EhQKDG1ldGFkYXRhX3VyaRgBIAEoCSJRChpRdWVyeUFsbEludmFsaWRpdHlSZXNwb25zZRIzCgppbnZhbGlkaXR5GAEgAygLMhkuc3VucmlzZS5kYS52MC5JbnZhbGlkaXR5QgTI3h8AInYKIVF1ZXJ5VmFsaWRhdG9yU2hhcmRJbmRpY2VzUmVxdWVzdBI8ChF2YWxpZGF0b3JfYWRkcmVzcxgBIAEoCUIh0rQtHWNvc21vcy5WYWxpZGF0b3JBZGRyZXNzU3RyaW5nEhMKC3NoYXJkX2NvdW50GAIgASgEIjsKIlF1ZXJ5VmFsaWRhdG9yU2hhcmRJbmRpY2VzUmVzcG9uc2USFQoNc2hhcmRfaW5kaWNlcxgBIAMoBCI0Ch1RdWVyeVprcFByb29mVGhyZXNob2xkUmVxdWVzdBITCgtzaGFyZF9jb3VudBgBIAEoBCI6Ch5RdWVyeVprcFByb29mVGhyZXNob2xkUmVzcG9uc2USGAoJdGhyZXNob2xkGAEgASgEQgWo57AqASJXChdRdWVyeVByb29mRGVwdXR5UmVxdWVzdBI8ChF2YWxpZGF0b3JfYWRkcmVzcxgBIAEoCUIh0rQtHWNvc21vcy5WYWxpZGF0b3JBZGRyZXNzU3RyaW5nIkwKGFF1ZXJ5UHJvb2ZEZXB1dHlSZXNwb25zZRIwCg5kZXB1dHlfYWRkcmVzcxgBIAEoCUIY0rQtFGNvc21vcy5BZGRyZXNzU3RyaW5nMq8LCgVRdWVyeRJuCgZQYXJhbXMSIS5zdW5yaXNlLmRhLnYwLlF1ZXJ5UGFyYW1zUmVxdWVzdBoiLnN1bnJpc2UuZGEudjAuUXVlcnlQYXJhbXNSZXNwb25zZSIdgtPkkwIXEhUvc3VucmlzZS9kYS92MC9wYXJhbXMSiwEKDVB1Ymxpc2hlZERhdGESKC5zdW5yaXNlLmRhLnYwLlF1ZXJ5UHVibGlzaGVkRGF0YVJlcXVlc3QaKS5zdW5yaXNlLmRhLnYwLlF1ZXJ5UHVibGlzaGVkRGF0YVJlc3BvbnNlIiWC0+STAh8SHS9zdW5yaXNlL2RhL3YwL3B1Ymxpc2hlZC1kYXRhEpgBChBBbGxQdWJsaXNoZWREYXRhEisuc3VucmlzZS5kYS52MC5RdWVyeUFsbFB1Ymxpc2hlZERhdGFSZXF1ZXN0Giwuc3VucmlzZS5kYS52MC5RdWVyeUFsbFB1Ymxpc2hlZERhdGFSZXNwb25zZSIpgtPkkwIjEiEvc3VucmlzZS9kYS92MC9hbGwtcHVibGlzaGVkLWRhdGESiwEKDVZhbGlkaXR5UHJvb2YSKC5zdW5yaXNlLmRhLnYwLlF1ZXJ5VmFsaWRpdHlQcm9vZlJlcXVlc3QaKS5zdW5yaXNlLmRhLnYwLlF1ZXJ5VmFsaWRpdHlQcm9vZlJlc3BvbnNlIiWC0+STAh8SHS9zdW5yaXNlL2RhL3YwL3ZhbGlkaXR5LXByb29mEpwBChFBbGxWYWxpZGl0eVByb29mcxIsLnN1bnJpc2UuZGEudjAuUXVlcnlBbGxWYWxpZGl0eVByb29mc1JlcXVlc3QaLS5zdW5yaXNlLmRhLnYwLlF1ZXJ5QWxsVmFsaWRpdHlQcm9vZnNSZXNwb25zZSIqgtPkkwIkEiIvc3VucmlzZS9kYS92MC9hbGwtdmFsaWRpdHktcHJvb2ZzEn4KCkludmFsaWRpdHkSJS5zdW5yaXNlLmRhLnYwLlF1ZXJ5SW52YWxpZGl0eVJlcXVlc3QaJi5zdW5yaXNlLmRhLnYwLlF1ZXJ5SW52YWxpZGl0eVJlc3BvbnNlIiGC0+STAhsSGS9zdW5yaXNlL2RhL3YwL2ludmFsaWRpdHkSiwEKDUFsbEludmFsaWRpdHkSKC5zdW5yaXNlLmRhLnYwLlF1ZXJ5QWxsSW52YWxpZGl0eVJlcXVlc3QaKS5zdW5yaXNlLmRhLnYwLlF1ZXJ5QWxsSW52YWxpZGl0eVJlc3BvbnNlIiWC0+STAh8SHS9zdW5yaXNlL2RhL3YwL2FsbC1pbnZhbGlkaXR5EqwBChVWYWxpZGF0b3JTaGFyZEluZGljZXMSMC5zdW5yaXNlLmRhLnYwLlF1ZXJ5VmFsaWRhdG9yU2hhcmRJbmRpY2VzUmVxdWVzdBoxLnN1bnJpc2UuZGEudjAuUXVlcnlWYWxpZGF0b3JTaGFyZEluZGljZXNSZXNwb25zZSIugtPkkwIoEiYvc3VucmlzZS9kYS92MC92YWxpZGF0b3Itc2hhcmQtaW5kaWNlcxKcAQoRWmtwUHJvb2ZUaHJlc2hvbGQSLC5zdW5yaXNlLmRhLnYwLlF1ZXJ5WmtwUHJvb2ZUaHJlc2hvbGRSZXF1ZXN0Gi0uc3VucmlzZS5kYS52MC5RdWVyeVprcFByb29mVGhyZXNob2xkUmVzcG9uc2UiKoLT5JMCJBIiL3N1bnJpc2UvZGEvdjAvemtwLXByb29mLXRocmVzaG9sZBKDAQoLUHJvb2ZEZXB1dHkSJi5zdW5yaXNlLmRhLnYwLlF1ZXJ5UHJvb2ZEZXB1dHlSZXF1ZXN0Gicuc3VucmlzZS5kYS52MC5RdWVyeVByb29mRGVwdXR5UmVzcG9uc2UiI4LT5JMCHRIbL3N1bnJpc2UvZGEvdjAvcHJvb2YtZGVwdXR5QqEBChFjb20uc3VucmlzZS5kYS52MEIKUXVlcnlQcm90b1ABWipnaXRodWIuY29tL3N1bnJpc2VsYXllci9zdW5yaXNlL3gvZGEvdHlwZXOiAgNTRFaqAg1TdW5yaXNlLkRhLlYwygINU3VucmlzZVxEYVxWMOICGVN1bnJpc2VcRGFcVjBcR1BCTWV0YWRhdGHqAg9TdW5yaXNlOjpEYTo6VjBiBnByb3RvMw", [file_amino_amino, file_cosmos_proto_cosmos, file_gogoproto_gogo, file_google_api_annotations, file_sunrise_da_v0_params, file_sunrise_da_v0_published_data]);

/**
 * QueryParamsRequest is request type for the Query/Params RPC method.
 *
 * @generated from message sunrise.da.v0.QueryParamsRequest
 */
export type QueryParamsRequest = Message<"sunrise.da.v0.QueryParamsRequest"> & {
};

/**
 * Describes the message sunrise.da.v0.QueryParamsRequest.
 * Use `create(QueryParamsRequestSchema)` to create a new message.
 */
export const QueryParamsRequestSchema: GenMessage<QueryParamsRequest> = /*@__PURE__*/
  messageDesc(file_sunrise_da_v0_query, 0);

/**
 * QueryParamsResponse is response type for the Query/Params RPC method.
 *
 * @generated from message sunrise.da.v0.QueryParamsResponse
 */
export type QueryParamsResponse = Message<"sunrise.da.v0.QueryParamsResponse"> & {
  /**
   * params holds all the parameters of this module.
   *
   * @generated from field: sunrise.da.v0.Params params = 1;
   */
  params?: Params;
};

/**
 * Describes the message sunrise.da.v0.QueryParamsResponse.
 * Use `create(QueryParamsResponseSchema)` to create a new message.
 */
export const QueryParamsResponseSchema: GenMessage<QueryParamsResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_da_v0_query, 1);

/**
 * QueryPublishedDataRequest is request type for the Query/PublishedData RPC
 * method.
 *
 * @generated from message sunrise.da.v0.QueryPublishedDataRequest
 */
export type QueryPublishedDataRequest = Message<"sunrise.da.v0.QueryPublishedDataRequest"> & {
  /**
   * @generated from field: string metadata_uri = 1;
   */
  metadataUri: string;
};

/**
 * Describes the message sunrise.da.v0.QueryPublishedDataRequest.
 * Use `create(QueryPublishedDataRequestSchema)` to create a new message.
 */
export const QueryPublishedDataRequestSchema: GenMessage<QueryPublishedDataRequest> = /*@__PURE__*/
  messageDesc(file_sunrise_da_v0_query, 2);

/**
 * QueryPublishedDataResponse is response type for the Query/PublishedData RPC
 * method.
 *
 * @generated from message sunrise.da.v0.QueryPublishedDataResponse
 */
export type QueryPublishedDataResponse = Message<"sunrise.da.v0.QueryPublishedDataResponse"> & {
  /**
   * @generated from field: sunrise.da.v0.PublishedData data = 1;
   */
  data?: PublishedData;
};

/**
 * Describes the message sunrise.da.v0.QueryPublishedDataResponse.
 * Use `create(QueryPublishedDataResponseSchema)` to create a new message.
 */
export const QueryPublishedDataResponseSchema: GenMessage<QueryPublishedDataResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_da_v0_query, 3);

/**
 * QueryAllPublishedDataRequest is request type for the
 * Query/AllPublishedData RPC method.
 *
 * @generated from message sunrise.da.v0.QueryAllPublishedDataRequest
 */
export type QueryAllPublishedDataRequest = Message<"sunrise.da.v0.QueryAllPublishedDataRequest"> & {
};

/**
 * Describes the message sunrise.da.v0.QueryAllPublishedDataRequest.
 * Use `create(QueryAllPublishedDataRequestSchema)` to create a new message.
 */
export const QueryAllPublishedDataRequestSchema: GenMessage<QueryAllPublishedDataRequest> = /*@__PURE__*/
  messageDesc(file_sunrise_da_v0_query, 4);

/**
 * QueryAllPublishedDataResponse is response type for the
 * Query/AllPublishedData RPC method.
 *
 * @generated from message sunrise.da.v0.QueryAllPublishedDataResponse
 */
export type QueryAllPublishedDataResponse = Message<"sunrise.da.v0.QueryAllPublishedDataResponse"> & {
  /**
   * @generated from field: repeated sunrise.da.v0.PublishedData data = 1;
   */
  data: PublishedData[];
};

/**
 * Describes the message sunrise.da.v0.QueryAllPublishedDataResponse.
 * Use `create(QueryAllPublishedDataResponseSchema)` to create a new message.
 */
export const QueryAllPublishedDataResponseSchema: GenMessage<QueryAllPublishedDataResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_da_v0_query, 5);

/**
 * QueryValidityProofRequest is request type for the Query/ValidityProof RPC
 * method.
 *
 * @generated from message sunrise.da.v0.QueryValidityProofRequest
 */
export type QueryValidityProofRequest = Message<"sunrise.da.v0.QueryValidityProofRequest"> & {
  /**
   * @generated from field: string metadata_uri = 1;
   */
  metadataUri: string;

  /**
   * @generated from field: string validator_address = 2;
   */
  validatorAddress: string;
};

/**
 * Describes the message sunrise.da.v0.QueryValidityProofRequest.
 * Use `create(QueryValidityProofRequestSchema)` to create a new message.
 */
export const QueryValidityProofRequestSchema: GenMessage<QueryValidityProofRequest> = /*@__PURE__*/
  messageDesc(file_sunrise_da_v0_query, 6);

/**
 * QueryValidityProofResponse is response type for the Query/ValidityProof RPC
 * method.
 *
 * @generated from message sunrise.da.v0.QueryValidityProofResponse
 */
export type QueryValidityProofResponse = Message<"sunrise.da.v0.QueryValidityProofResponse"> & {
  /**
   * @generated from field: sunrise.da.v0.Proof proof = 1;
   */
  proof?: Proof;
};

/**
 * Describes the message sunrise.da.v0.QueryValidityProofResponse.
 * Use `create(QueryValidityProofResponseSchema)` to create a new message.
 */
export const QueryValidityProofResponseSchema: GenMessage<QueryValidityProofResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_da_v0_query, 7);

/**
 * QueryAllValidityProofsRequest is request type for the Query/AllValidityProofs RPC
 * method.
 *
 * @generated from message sunrise.da.v0.QueryAllValidityProofsRequest
 */
export type QueryAllValidityProofsRequest = Message<"sunrise.da.v0.QueryAllValidityProofsRequest"> & {
  /**
   * @generated from field: string metadata_uri = 1;
   */
  metadataUri: string;
};

/**
 * Describes the message sunrise.da.v0.QueryAllValidityProofsRequest.
 * Use `create(QueryAllValidityProofsRequestSchema)` to create a new message.
 */
export const QueryAllValidityProofsRequestSchema: GenMessage<QueryAllValidityProofsRequest> = /*@__PURE__*/
  messageDesc(file_sunrise_da_v0_query, 8);

/**
 * QueryAllValidityProofsResponse is response type for the Query/AllValidityProofs RPC
 * method.
 *
 * @generated from message sunrise.da.v0.QueryAllValidityProofsResponse
 */
export type QueryAllValidityProofsResponse = Message<"sunrise.da.v0.QueryAllValidityProofsResponse"> & {
  /**
   * @generated from field: repeated sunrise.da.v0.Proof proofs = 1;
   */
  proofs: Proof[];
};

/**
 * Describes the message sunrise.da.v0.QueryAllValidityProofsResponse.
 * Use `create(QueryAllValidityProofsResponseSchema)` to create a new message.
 */
export const QueryAllValidityProofsResponseSchema: GenMessage<QueryAllValidityProofsResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_da_v0_query, 9);

/**
 * QueryInvalidityProofRequest is request type for the Query/Invalidity RPC
 * method.
 *
 * @generated from message sunrise.da.v0.QueryInvalidityRequest
 */
export type QueryInvalidityRequest = Message<"sunrise.da.v0.QueryInvalidityRequest"> & {
  /**
   * @generated from field: string metadata_uri = 1;
   */
  metadataUri: string;

  /**
   * @generated from field: string sender_address = 2;
   */
  senderAddress: string;
};

/**
 * Describes the message sunrise.da.v0.QueryInvalidityRequest.
 * Use `create(QueryInvalidityRequestSchema)` to create a new message.
 */
export const QueryInvalidityRequestSchema: GenMessage<QueryInvalidityRequest> = /*@__PURE__*/
  messageDesc(file_sunrise_da_v0_query, 10);

/**
 * QueryInvalidityResponse is response type for the Query/Invalidity RPC
 * method.
 *
 * @generated from message sunrise.da.v0.QueryInvalidityResponse
 */
export type QueryInvalidityResponse = Message<"sunrise.da.v0.QueryInvalidityResponse"> & {
  /**
   * @generated from field: sunrise.da.v0.Invalidity invalidity = 1;
   */
  invalidity?: Invalidity;
};

/**
 * Describes the message sunrise.da.v0.QueryInvalidityResponse.
 * Use `create(QueryInvalidityResponseSchema)` to create a new message.
 */
export const QueryInvalidityResponseSchema: GenMessage<QueryInvalidityResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_da_v0_query, 11);

/**
 * QueryAllInvalidityProofRequest is request type for the Query/AllInvalidity RPC
 * method.
 *
 * @generated from message sunrise.da.v0.QueryAllInvalidityRequest
 */
export type QueryAllInvalidityRequest = Message<"sunrise.da.v0.QueryAllInvalidityRequest"> & {
  /**
   * @generated from field: string metadata_uri = 1;
   */
  metadataUri: string;
};

/**
 * Describes the message sunrise.da.v0.QueryAllInvalidityRequest.
 * Use `create(QueryAllInvalidityRequestSchema)` to create a new message.
 */
export const QueryAllInvalidityRequestSchema: GenMessage<QueryAllInvalidityRequest> = /*@__PURE__*/
  messageDesc(file_sunrise_da_v0_query, 12);

/**
 * QueryAllInvalidityResponse is response type for the Query/AllInvalidity RPC
 * method.
 *
 * @generated from message sunrise.da.v0.QueryAllInvalidityResponse
 */
export type QueryAllInvalidityResponse = Message<"sunrise.da.v0.QueryAllInvalidityResponse"> & {
  /**
   * @generated from field: repeated sunrise.da.v0.Invalidity invalidity = 1;
   */
  invalidity: Invalidity[];
};

/**
 * Describes the message sunrise.da.v0.QueryAllInvalidityResponse.
 * Use `create(QueryAllInvalidityResponseSchema)` to create a new message.
 */
export const QueryAllInvalidityResponseSchema: GenMessage<QueryAllInvalidityResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_da_v0_query, 13);

/**
 * QueryValidatorShardIndicesRequest is request type for the
 * Query/ValidatorShardIndices RPC method.
 *
 * @generated from message sunrise.da.v0.QueryValidatorShardIndicesRequest
 */
export type QueryValidatorShardIndicesRequest = Message<"sunrise.da.v0.QueryValidatorShardIndicesRequest"> & {
  /**
   * @generated from field: string validator_address = 1;
   */
  validatorAddress: string;

  /**
   * @generated from field: uint64 shard_count = 2;
   */
  shardCount: bigint;
};

/**
 * Describes the message sunrise.da.v0.QueryValidatorShardIndicesRequest.
 * Use `create(QueryValidatorShardIndicesRequestSchema)` to create a new message.
 */
export const QueryValidatorShardIndicesRequestSchema: GenMessage<QueryValidatorShardIndicesRequest> = /*@__PURE__*/
  messageDesc(file_sunrise_da_v0_query, 14);

/**
 * QueryValidatorShardIndicesResponse is response type for the
 * Query/ValidatorShardIndices RPC method.
 *
 * @generated from message sunrise.da.v0.QueryValidatorShardIndicesResponse
 */
export type QueryValidatorShardIndicesResponse = Message<"sunrise.da.v0.QueryValidatorShardIndicesResponse"> & {
  /**
   * @generated from field: repeated uint64 shard_indices = 1;
   */
  shardIndices: bigint[];
};

/**
 * Describes the message sunrise.da.v0.QueryValidatorShardIndicesResponse.
 * Use `create(QueryValidatorShardIndicesResponseSchema)` to create a new message.
 */
export const QueryValidatorShardIndicesResponseSchema: GenMessage<QueryValidatorShardIndicesResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_da_v0_query, 15);

/**
 * QueryZkpProofThresholdRequest is request type for the
 * Query/ZkpProofThreshold RPC method.
 *
 * @generated from message sunrise.da.v0.QueryZkpProofThresholdRequest
 */
export type QueryZkpProofThresholdRequest = Message<"sunrise.da.v0.QueryZkpProofThresholdRequest"> & {
  /**
   * @generated from field: uint64 shard_count = 1;
   */
  shardCount: bigint;
};

/**
 * Describes the message sunrise.da.v0.QueryZkpProofThresholdRequest.
 * Use `create(QueryZkpProofThresholdRequestSchema)` to create a new message.
 */
export const QueryZkpProofThresholdRequestSchema: GenMessage<QueryZkpProofThresholdRequest> = /*@__PURE__*/
  messageDesc(file_sunrise_da_v0_query, 16);

/**
 * QueryZkpProofThresholdResponse is response type for the
 * Query/ZkpProofThreshold RPC method.
 *
 * @generated from message sunrise.da.v0.QueryZkpProofThresholdResponse
 */
export type QueryZkpProofThresholdResponse = Message<"sunrise.da.v0.QueryZkpProofThresholdResponse"> & {
  /**
   * @generated from field: uint64 threshold = 1;
   */
  threshold: bigint;
};

/**
 * Describes the message sunrise.da.v0.QueryZkpProofThresholdResponse.
 * Use `create(QueryZkpProofThresholdResponseSchema)` to create a new message.
 */
export const QueryZkpProofThresholdResponseSchema: GenMessage<QueryZkpProofThresholdResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_da_v0_query, 17);

/**
 * QueryProofDeputyRequest is request type for the
 * Query/ProofDeputy RPC method.
 *
 * @generated from message sunrise.da.v0.QueryProofDeputyRequest
 */
export type QueryProofDeputyRequest = Message<"sunrise.da.v0.QueryProofDeputyRequest"> & {
  /**
   * @generated from field: string validator_address = 1;
   */
  validatorAddress: string;
};

/**
 * Describes the message sunrise.da.v0.QueryProofDeputyRequest.
 * Use `create(QueryProofDeputyRequestSchema)` to create a new message.
 */
export const QueryProofDeputyRequestSchema: GenMessage<QueryProofDeputyRequest> = /*@__PURE__*/
  messageDesc(file_sunrise_da_v0_query, 18);

/**
 * QueryProofDeputyResponse is response type for the
 * Query/ProofDeputy RPC method.
 *
 * @generated from message sunrise.da.v0.QueryProofDeputyResponse
 */
export type QueryProofDeputyResponse = Message<"sunrise.da.v0.QueryProofDeputyResponse"> & {
  /**
   * @generated from field: string deputy_address = 1;
   */
  deputyAddress: string;
};

/**
 * Describes the message sunrise.da.v0.QueryProofDeputyResponse.
 * Use `create(QueryProofDeputyResponseSchema)` to create a new message.
 */
export const QueryProofDeputyResponseSchema: GenMessage<QueryProofDeputyResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_da_v0_query, 19);

/**
 * Query defines the gRPC querier service.
 *
 * @generated from service sunrise.da.v0.Query
 */
export const Query: GenService<{
  /**
   * Params queries the parameters of the module.
   *
   * @generated from rpc sunrise.da.v0.Query.Params
   */
  params: {
    methodKind: "unary";
    input: typeof QueryParamsRequestSchema;
    output: typeof QueryParamsResponseSchema;
  },
  /**
   * PublishedData queries published data
   *
   * @generated from rpc sunrise.da.v0.Query.PublishedData
   */
  publishedData: {
    methodKind: "unary";
    input: typeof QueryPublishedDataRequestSchema;
    output: typeof QueryPublishedDataResponseSchema;
  },
  /**
   * AllPublishedData queries published data
   *
   * @generated from rpc sunrise.da.v0.Query.AllPublishedData
   */
  allPublishedData: {
    methodKind: "unary";
    input: typeof QueryAllPublishedDataRequestSchema;
    output: typeof QueryAllPublishedDataResponseSchema;
  },
  /**
   * ValidityProof queries validity proof from the validator
   *
   * @generated from rpc sunrise.da.v0.Query.ValidityProof
   */
  validityProof: {
    methodKind: "unary";
    input: typeof QueryValidityProofRequestSchema;
    output: typeof QueryValidityProofResponseSchema;
  },
  /**
   * AllValidityProofs queries all validity proofs
   *
   * @generated from rpc sunrise.da.v0.Query.AllValidityProofs
   */
  allValidityProofs: {
    methodKind: "unary";
    input: typeof QueryAllValidityProofsRequestSchema;
    output: typeof QueryAllValidityProofsResponseSchema;
  },
  /**
   * Invalidity queries invalidity report
   *
   * @generated from rpc sunrise.da.v0.Query.Invalidity
   */
  invalidity: {
    methodKind: "unary";
    input: typeof QueryInvalidityRequestSchema;
    output: typeof QueryInvalidityResponseSchema;
  },
  /**
   * AllInvalidity queries all invalidity reports
   *
   * @generated from rpc sunrise.da.v0.Query.AllInvalidity
   */
  allInvalidity: {
    methodKind: "unary";
    input: typeof QueryAllInvalidityRequestSchema;
    output: typeof QueryAllInvalidityResponseSchema;
  },
  /**
   * ValidatorShardIndices
   *
   * @generated from rpc sunrise.da.v0.Query.ValidatorShardIndices
   */
  validatorShardIndices: {
    methodKind: "unary";
    input: typeof QueryValidatorShardIndicesRequestSchema;
    output: typeof QueryValidatorShardIndicesResponseSchema;
  },
  /**
   * ZkpProofThreshold
   *
   * @generated from rpc sunrise.da.v0.Query.ZkpProofThreshold
   */
  zkpProofThreshold: {
    methodKind: "unary";
    input: typeof QueryZkpProofThresholdRequestSchema;
    output: typeof QueryZkpProofThresholdResponseSchema;
  },
  /**
   * ProofDeputy
   *
   * @generated from rpc sunrise.da.v0.Query.ProofDeputy
   */
  proofDeputy: {
    methodKind: "unary";
    input: typeof QueryProofDeputyRequestSchema;
    output: typeof QueryProofDeputyResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_sunrise_da_v0_query, 0);

