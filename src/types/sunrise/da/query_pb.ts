// @generated by protoc-gen-es v2.2.2 with parameter "target=ts"
// @generated from file sunrise/da/query.proto (package sunrise.da, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_amino_amino } from "../../amino/amino_pb";
import { file_gogoproto_gogo } from "../../gogoproto/gogo_pb";
import { file_google_api_annotations } from "../../google/api/annotations_pb";
import { file_cosmos_base_query_v1beta1_pagination } from "../../cosmos/base/query/v1beta1/pagination_pb";
import type { Params } from "./params_pb";
import { file_sunrise_da_params } from "./params_pb";
import type { PublishedData } from "./published_data_pb";
import { file_sunrise_da_published_data } from "./published_data_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file sunrise/da/query.proto.
 */
export const file_sunrise_da_query: GenFile = /*@__PURE__*/
  fileDesc("ChZzdW5yaXNlL2RhL3F1ZXJ5LnByb3RvEgpzdW5yaXNlLmRhIhQKElF1ZXJ5UGFyYW1zUmVxdWVzdCJEChNRdWVyeVBhcmFtc1Jlc3BvbnNlEi0KBnBhcmFtcxgBIAEoCzISLnN1bnJpc2UuZGEuUGFyYW1zQgnI3h8AqOewKgEiMQoZUXVlcnlQdWJsaXNoZWREYXRhUmVxdWVzdBIUCgxtZXRhZGF0YV91cmkYASABKAkiSwoaUXVlcnlQdWJsaXNoZWREYXRhUmVzcG9uc2USLQoEZGF0YRgBIAEoCzIZLnN1bnJpc2UuZGEuUHVibGlzaGVkRGF0YUIEyN4fACIeChxRdWVyeUFsbFB1Ymxpc2hlZERhdGFSZXF1ZXN0Ik4KHVF1ZXJ5QWxsUHVibGlzaGVkRGF0YVJlc3BvbnNlEi0KBGRhdGEYASADKAsyGS5zdW5yaXNlLmRhLlB1Ymxpc2hlZERhdGFCBMjeHwAiNAodUXVlcnlaa3BQcm9vZlRocmVzaG9sZFJlcXVlc3QSEwoLc2hhcmRfY291bnQYASABKAQiMwoeUXVlcnlaa3BQcm9vZlRocmVzaG9sZFJlc3BvbnNlEhEKCXRocmVzaG9sZBgCIAEoBDLPBAoFUXVlcnkScgoGUGFyYW1zEh4uc3VucmlzZS5kYS5RdWVyeVBhcmFtc1JlcXVlc3QaHy5zdW5yaXNlLmRhLlF1ZXJ5UGFyYW1zUmVzcG9uc2UiJ4LT5JMCIRIfL3N1bnJpc2VsYXllci9zdW5yaXNlL2RhL3BhcmFtcxKPAQoNUHVibGlzaGVkRGF0YRIlLnN1bnJpc2UuZGEuUXVlcnlQdWJsaXNoZWREYXRhUmVxdWVzdBomLnN1bnJpc2UuZGEuUXVlcnlQdWJsaXNoZWREYXRhUmVzcG9uc2UiL4LT5JMCKRInL3N1bnJpc2VsYXllci9zdW5yaXNlL2RhL3B1Ymxpc2hlZF9kYXRhEpwBChBBbGxQdWJsaXNoZWREYXRhEiguc3VucmlzZS5kYS5RdWVyeUFsbFB1Ymxpc2hlZERhdGFSZXF1ZXN0Gikuc3VucmlzZS5kYS5RdWVyeUFsbFB1Ymxpc2hlZERhdGFSZXNwb25zZSIzgtPkkwItEisvc3VucmlzZWxheWVyL3N1bnJpc2UvZGEvYWxsX3B1Ymxpc2hlZF9kYXRhEqABChFaa3BQcm9vZlRocmVzaG9sZBIpLnN1bnJpc2UuZGEuUXVlcnlaa3BQcm9vZlRocmVzaG9sZFJlcXVlc3QaKi5zdW5yaXNlLmRhLlF1ZXJ5WmtwUHJvb2ZUaHJlc2hvbGRSZXNwb25zZSI0gtPkkwIuEiwvc3VucmlzZWxheWVyL3N1bnJpc2UvZGEvemtwX3Byb29mX3RocmVzaG9sZEKRAQoOY29tLnN1bnJpc2UuZGFCClF1ZXJ5UHJvdG9QAVoqZ2l0aHViLmNvbS9zdW5yaXNlbGF5ZXIvc3VucmlzZS94L2RhL3R5cGVzogIDU0RYqgIKU3VucmlzZS5EYcoCClN1bnJpc2VcRGHiAhZTdW5yaXNlXERhXEdQQk1ldGFkYXRh6gILU3VucmlzZTo6RGFiBnByb3RvMw", [file_amino_amino, file_gogoproto_gogo, file_google_api_annotations, file_cosmos_base_query_v1beta1_pagination, file_sunrise_da_params, file_sunrise_da_published_data]);

/**
 * QueryParamsRequest is request type for the Query/Params RPC method.
 *
 * @generated from message sunrise.da.QueryParamsRequest
 */
export type QueryParamsRequest = Message<"sunrise.da.QueryParamsRequest"> & {
};

/**
 * Describes the message sunrise.da.QueryParamsRequest.
 * Use `create(QueryParamsRequestSchema)` to create a new message.
 */
export const QueryParamsRequestSchema: GenMessage<QueryParamsRequest> = /*@__PURE__*/
  messageDesc(file_sunrise_da_query, 0);

/**
 * QueryParamsResponse is response type for the Query/Params RPC method.
 *
 * @generated from message sunrise.da.QueryParamsResponse
 */
export type QueryParamsResponse = Message<"sunrise.da.QueryParamsResponse"> & {
  /**
   * params holds all the parameters of this module.
   *
   * @generated from field: sunrise.da.Params params = 1;
   */
  params?: Params;
};

/**
 * Describes the message sunrise.da.QueryParamsResponse.
 * Use `create(QueryParamsResponseSchema)` to create a new message.
 */
export const QueryParamsResponseSchema: GenMessage<QueryParamsResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_da_query, 1);

/**
 * QueryPublishedDataRequest is request type for the Query/PublishedData RPC
 * method.
 *
 * @generated from message sunrise.da.QueryPublishedDataRequest
 */
export type QueryPublishedDataRequest = Message<"sunrise.da.QueryPublishedDataRequest"> & {
  /**
   * @generated from field: string metadata_uri = 1;
   */
  metadataUri: string;
};

/**
 * Describes the message sunrise.da.QueryPublishedDataRequest.
 * Use `create(QueryPublishedDataRequestSchema)` to create a new message.
 */
export const QueryPublishedDataRequestSchema: GenMessage<QueryPublishedDataRequest> = /*@__PURE__*/
  messageDesc(file_sunrise_da_query, 2);

/**
 * QueryPublishedDataResponse is response type for the Query/PublishedData RPC
 * method.
 *
 * @generated from message sunrise.da.QueryPublishedDataResponse
 */
export type QueryPublishedDataResponse = Message<"sunrise.da.QueryPublishedDataResponse"> & {
  /**
   * @generated from field: sunrise.da.PublishedData data = 1;
   */
  data?: PublishedData;
};

/**
 * Describes the message sunrise.da.QueryPublishedDataResponse.
 * Use `create(QueryPublishedDataResponseSchema)` to create a new message.
 */
export const QueryPublishedDataResponseSchema: GenMessage<QueryPublishedDataResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_da_query, 3);

/**
 * QueryAllPublishedDataRequest is request type for the
 * Query/AllPublishedData RPC method.
 *
 * @generated from message sunrise.da.QueryAllPublishedDataRequest
 */
export type QueryAllPublishedDataRequest = Message<"sunrise.da.QueryAllPublishedDataRequest"> & {
};

/**
 * Describes the message sunrise.da.QueryAllPublishedDataRequest.
 * Use `create(QueryAllPublishedDataRequestSchema)` to create a new message.
 */
export const QueryAllPublishedDataRequestSchema: GenMessage<QueryAllPublishedDataRequest> = /*@__PURE__*/
  messageDesc(file_sunrise_da_query, 4);

/**
 * QueryAllPublishedDataResponse is response type for the
 * Query/AllPublishedData RPC method.
 *
 * @generated from message sunrise.da.QueryAllPublishedDataResponse
 */
export type QueryAllPublishedDataResponse = Message<"sunrise.da.QueryAllPublishedDataResponse"> & {
  /**
   * @generated from field: repeated sunrise.da.PublishedData data = 1;
   */
  data: PublishedData[];
};

/**
 * Describes the message sunrise.da.QueryAllPublishedDataResponse.
 * Use `create(QueryAllPublishedDataResponseSchema)` to create a new message.
 */
export const QueryAllPublishedDataResponseSchema: GenMessage<QueryAllPublishedDataResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_da_query, 5);

/**
 * QueryZkpProofThresholdRequest is request type for the
 * Query/ZkpProofThreshold RPC method.
 *
 * @generated from message sunrise.da.QueryZkpProofThresholdRequest
 */
export type QueryZkpProofThresholdRequest = Message<"sunrise.da.QueryZkpProofThresholdRequest"> & {
  /**
   * @generated from field: uint64 shard_count = 1;
   */
  shardCount: bigint;
};

/**
 * Describes the message sunrise.da.QueryZkpProofThresholdRequest.
 * Use `create(QueryZkpProofThresholdRequestSchema)` to create a new message.
 */
export const QueryZkpProofThresholdRequestSchema: GenMessage<QueryZkpProofThresholdRequest> = /*@__PURE__*/
  messageDesc(file_sunrise_da_query, 6);

/**
 * QueryZkpProofThresholdResponse is response type for the
 * Query/ZkpProofThreshold RPC method.
 *
 * @generated from message sunrise.da.QueryZkpProofThresholdResponse
 */
export type QueryZkpProofThresholdResponse = Message<"sunrise.da.QueryZkpProofThresholdResponse"> & {
  /**
   * @generated from field: uint64 threshold = 2;
   */
  threshold: bigint;
};

/**
 * Describes the message sunrise.da.QueryZkpProofThresholdResponse.
 * Use `create(QueryZkpProofThresholdResponseSchema)` to create a new message.
 */
export const QueryZkpProofThresholdResponseSchema: GenMessage<QueryZkpProofThresholdResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_da_query, 7);

/**
 * Query defines the gRPC querier service.
 *
 * @generated from service sunrise.da.Query
 */
export const Query: GenService<{
  /**
   * Params queries the parameters of the module.
   *
   * @generated from rpc sunrise.da.Query.Params
   */
  params: {
    methodKind: "unary";
    input: typeof QueryParamsRequestSchema;
    output: typeof QueryParamsResponseSchema;
  },
  /**
   * PublishedData queries published data
   *
   * @generated from rpc sunrise.da.Query.PublishedData
   */
  publishedData: {
    methodKind: "unary";
    input: typeof QueryPublishedDataRequestSchema;
    output: typeof QueryPublishedDataResponseSchema;
  },
  /**
   * AllPublishedData queries published data
   *
   * @generated from rpc sunrise.da.Query.AllPublishedData
   */
  allPublishedData: {
    methodKind: "unary";
    input: typeof QueryAllPublishedDataRequestSchema;
    output: typeof QueryAllPublishedDataResponseSchema;
  },
  /**
   * @generated from rpc sunrise.da.Query.ZkpProofThreshold
   */
  zkpProofThreshold: {
    methodKind: "unary";
    input: typeof QueryZkpProofThresholdRequestSchema;
    output: typeof QueryZkpProofThresholdResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_sunrise_da_query, 0);

