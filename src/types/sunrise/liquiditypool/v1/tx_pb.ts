// @generated by protoc-gen-es v2.2.2 with parameter "target=ts"
// @generated from file sunrise/liquiditypool/v1/tx.proto (package sunrise.liquiditypool.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_amino_amino } from "../../../amino/amino_pb";
import type { Coin } from "../../../cosmos/base/v1beta1/coin_pb";
import { file_cosmos_base_v1beta1_coin } from "../../../cosmos/base/v1beta1/coin_pb";
import { file_cosmos_msg_v1_msg } from "../../../cosmos/msg/v1/msg_pb";
import { file_cosmos_proto_cosmos } from "../../../cosmos_proto/cosmos_pb";
import { file_gogoproto_gogo } from "../../../gogoproto/gogo_pb";
import type { Params } from "./params_pb";
import { file_sunrise_liquiditypool_v1_params } from "./params_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file sunrise/liquiditypool/v1/tx.proto.
 */
export const file_sunrise_liquiditypool_v1_tx: GenFile = /*@__PURE__*/
  fileDesc("CiFzdW5yaXNlL2xpcXVpZGl0eXBvb2wvdjEvdHgucHJvdG8SGHN1bnJpc2UubGlxdWlkaXR5cG9vbC52MSKnAQoPTXNnVXBkYXRlUGFyYW1zEisKCWF1dGhvcml0eRgBIAEoCUIY0rQtFGNvc21vcy5BZGRyZXNzU3RyaW5nEjYKBnBhcmFtcxgCIAEoCzIgLnN1bnJpc2UubGlxdWlkaXR5cG9vbC52MS5QYXJhbXNCBMjeHwA6L4LnsCoJYXV0aG9yaXR5iuewKhxzdW5yaXNlL3Bvb2wvTXNnVXBkYXRlUGFyYW1zIhkKF01zZ1VwZGF0ZVBhcmFtc1Jlc3BvbnNlIsoBCg1Nc2dDcmVhdGVQb29sEigKBnNlbmRlchgBIAEoCUIY0rQtFGNvc21vcy5BZGRyZXNzU3RyaW5nEhIKCmRlbm9tX2Jhc2UYAiABKAkSEwoLZGVub21fcXVvdGUYAyABKAkSEAoIZmVlX3JhdGUYBCABKAkSEwoLcHJpY2VfcmF0aW8YBSABKAkSEwoLYmFzZV9vZmZzZXQYBiABKAk6KoLnsCoGc2VuZGVyiuewKhpzdW5yaXNlL3Bvb2wvTXNnQ3JlYXRlUG9vbCIjChVNc2dDcmVhdGVQb29sUmVzcG9uc2USCgoCaWQYASABKAQingMKEU1zZ0NyZWF0ZVBvc2l0aW9uEigKBnNlbmRlchgBIAEoCUIY0rQtFGNvc21vcy5BZGRyZXNzU3RyaW5nEg8KB3Bvb2xfaWQYAiABKAQSEgoKbG93ZXJfdGljaxgDIAEoAxISCgp1cHBlcl90aWNrGAQgASgDEjMKCnRva2VuX2Jhc2UYBSABKAsyGS5jb3Ntb3MuYmFzZS52MWJldGExLkNvaW5CBMjeHwASNAoLdG9rZW5fcXVvdGUYBiABKAsyGS5jb3Ntb3MuYmFzZS52MWJldGExLkNvaW5CBMjeHwASRAoPbWluX2Ftb3VudF9iYXNlGAcgASgJQivI3h8A2t4fFWNvc21vc3Nkay5pby9tYXRoLkludNK0LQpjb3Ntb3MuSW50EkUKEG1pbl9hbW91bnRfcXVvdGUYCCABKAlCK8jeHwDa3h8VY29zbW9zc2RrLmlvL21hdGguSW500rQtCmNvc21vcy5JbnQ6LoLnsCoGc2VuZGVyiuewKh5zdW5yaXNlL3Bvb2wvTXNnQ3JlYXRlUG9zaXRpb24izwEKGU1zZ0NyZWF0ZVBvc2l0aW9uUmVzcG9uc2USCgoCaWQYASABKAQSQAoLYW1vdW50X2Jhc2UYAiABKAlCK8jeHwDa3h8VY29zbW9zc2RrLmlvL21hdGguSW500rQtCmNvc21vcy5JbnQSQQoMYW1vdW50X3F1b3RlGAMgASgJQivI3h8A2t4fFWNvc21vc3Nkay5pby9tYXRoLkludNK0LQpjb3Ntb3MuSW50EiEKCWxpcXVpZGl0eRgEIAEoCUIO0rQtCmNvc21vcy5EZWMikQMKFE1zZ0luY3JlYXNlTGlxdWlkaXR5EigKBnNlbmRlchgBIAEoCUIY0rQtFGNvc21vcy5BZGRyZXNzU3RyaW5nEgoKAmlkGAIgASgEEkAKC2Ftb3VudF9iYXNlGAMgASgJQivI3h8A2t4fFWNvc21vc3Nkay5pby9tYXRoLkludNK0LQpjb3Ntb3MuSW50EkEKDGFtb3VudF9xdW90ZRgEIAEoCUIryN4fANreHxVjb3Ntb3NzZGsuaW8vbWF0aC5JbnTStC0KY29zbW9zLkludBJECg9taW5fYW1vdW50X2Jhc2UYBSABKAlCK8jeHwDa3h8VY29zbW9zc2RrLmlvL21hdGguSW500rQtCmNvc21vcy5JbnQSRQoQbWluX2Ftb3VudF9xdW90ZRgGIAEoCUIryN4fANreHxVjb3Ntb3NzZGsuaW8vbWF0aC5JbnTStC0KY29zbW9zLkludDoxguewKgZzZW5kZXKK57AqIXN1bnJpc2UvcG9vbC9Nc2dJbmNyZWFzZUxpcXVpZGl0eSK4AQocTXNnSW5jcmVhc2VMaXF1aWRpdHlSZXNwb25zZRITCgtwb3NpdGlvbl9pZBgBIAEoBBJACgthbW91bnRfYmFzZRgCIAEoCUIryN4fANreHxVjb3Ntb3NzZGsuaW8vbWF0aC5JbnTStC0KY29zbW9zLkludBJBCgxhbW91bnRfcXVvdGUYAyABKAlCK8jeHwDa3h8VY29zbW9zc2RrLmlvL21hdGguSW500rQtCmNvc21vcy5JbnQikgEKFE1zZ0RlY3JlYXNlTGlxdWlkaXR5EigKBnNlbmRlchgBIAEoCUIY0rQtFGNvc21vcy5BZGRyZXNzU3RyaW5nEgoKAmlkGAIgASgEEhEKCWxpcXVpZGl0eRgDIAEoCToxguewKgZzZW5kZXKK57AqIXN1bnJpc2UvcG9vbC9Nc2dEZWNyZWFzZUxpcXVpZGl0eSKjAQocTXNnRGVjcmVhc2VMaXF1aWRpdHlSZXNwb25zZRJACgthbW91bnRfYmFzZRgBIAEoCUIryN4fANreHxVjb3Ntb3NzZGsuaW8vbWF0aC5JbnTStC0KY29zbW9zLkludBJBCgxhbW91bnRfcXVvdGUYAiABKAlCK8jeHwDa3h8VY29zbW9zc2RrLmlvL21hdGguSW500rQtCmNvc21vcy5JbnQifwoPTXNnQ2xhaW1SZXdhcmRzEigKBnNlbmRlchgBIAEoCUIY0rQtFGNvc21vcy5BZGRyZXNzU3RyaW5nEhQKDHBvc2l0aW9uX2lkcxgCIAMoBDosguewKgZzZW5kZXKK57AqHHN1bnJpc2UvcG9vbC9Nc2dDbGFpbVJld2FyZHMidgoXTXNnQ2xhaW1SZXdhcmRzUmVzcG9uc2USWwoGYW1vdW50GAEgAygLMhkuY29zbW9zLmJhc2UudjFiZXRhMS5Db2luQjDI3h8Aqt8fKGdpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsvdHlwZXMuQ29pbnMyvgUKA01zZxJsCgxVcGRhdGVQYXJhbXMSKS5zdW5yaXNlLmxpcXVpZGl0eXBvb2wudjEuTXNnVXBkYXRlUGFyYW1zGjEuc3VucmlzZS5saXF1aWRpdHlwb29sLnYxLk1zZ1VwZGF0ZVBhcmFtc1Jlc3BvbnNlEmYKCkNyZWF0ZVBvb2wSJy5zdW5yaXNlLmxpcXVpZGl0eXBvb2wudjEuTXNnQ3JlYXRlUG9vbBovLnN1bnJpc2UubGlxdWlkaXR5cG9vbC52MS5Nc2dDcmVhdGVQb29sUmVzcG9uc2UScgoOQ3JlYXRlUG9zaXRpb24SKy5zdW5yaXNlLmxpcXVpZGl0eXBvb2wudjEuTXNnQ3JlYXRlUG9zaXRpb24aMy5zdW5yaXNlLmxpcXVpZGl0eXBvb2wudjEuTXNnQ3JlYXRlUG9zaXRpb25SZXNwb25zZRJ7ChFJbmNyZWFzZUxpcXVpZGl0eRIuLnN1bnJpc2UubGlxdWlkaXR5cG9vbC52MS5Nc2dJbmNyZWFzZUxpcXVpZGl0eRo2LnN1bnJpc2UubGlxdWlkaXR5cG9vbC52MS5Nc2dJbmNyZWFzZUxpcXVpZGl0eVJlc3BvbnNlEnsKEURlY3JlYXNlTGlxdWlkaXR5Ei4uc3VucmlzZS5saXF1aWRpdHlwb29sLnYxLk1zZ0RlY3JlYXNlTGlxdWlkaXR5GjYuc3VucmlzZS5saXF1aWRpdHlwb29sLnYxLk1zZ0RlY3JlYXNlTGlxdWlkaXR5UmVzcG9uc2USbAoMQ2xhaW1SZXdhcmRzEikuc3VucmlzZS5saXF1aWRpdHlwb29sLnYxLk1zZ0NsYWltUmV3YXJkcxoxLnN1bnJpc2UubGlxdWlkaXR5cG9vbC52MS5Nc2dDbGFpbVJld2FyZHNSZXNwb25zZRoFgOewKgFC4AEKHGNvbS5zdW5yaXNlLmxpcXVpZGl0eXBvb2wudjFCB1R4UHJvdG9QAVo1Z2l0aHViLmNvbS9zdW5yaXNlbGF5ZXIvc3VucmlzZS94L2xpcXVpZGl0eXBvb2wvdHlwZXOiAgNTTFiqAhhTdW5yaXNlLkxpcXVpZGl0eXBvb2wuVjHKAhhTdW5yaXNlXExpcXVpZGl0eXBvb2xcVjHiAiRTdW5yaXNlXExpcXVpZGl0eXBvb2xcVjFcR1BCTWV0YWRhdGHqAhpTdW5yaXNlOjpMaXF1aWRpdHlwb29sOjpWMWIGcHJvdG8z", [file_amino_amino, file_cosmos_base_v1beta1_coin, file_cosmos_msg_v1_msg, file_cosmos_proto_cosmos, file_gogoproto_gogo, file_sunrise_liquiditypool_v1_params]);

/**
 * MsgUpdateParams is the Msg/UpdateParams request type.
 *
 * @generated from message sunrise.liquiditypool.v1.MsgUpdateParams
 */
export type MsgUpdateParams = Message<"sunrise.liquiditypool.v1.MsgUpdateParams"> & {
  /**
   * authority is the address that controls the module (defaults to x/gov unless
   * overwritten).
   *
   * @generated from field: string authority = 1;
   */
  authority: string;

  /**
   * NOTE: All parameters must be supplied.
   *
   * @generated from field: sunrise.liquiditypool.v1.Params params = 2;
   */
  params?: Params;
};

/**
 * Describes the message sunrise.liquiditypool.v1.MsgUpdateParams.
 * Use `create(MsgUpdateParamsSchema)` to create a new message.
 */
export const MsgUpdateParamsSchema: GenMessage<MsgUpdateParams> = /*@__PURE__*/
  messageDesc(file_sunrise_liquiditypool_v1_tx, 0);

/**
 * MsgUpdateParamsResponse defines the response structure for executing a
 * MsgUpdateParams message.
 *
 * @generated from message sunrise.liquiditypool.v1.MsgUpdateParamsResponse
 */
export type MsgUpdateParamsResponse = Message<"sunrise.liquiditypool.v1.MsgUpdateParamsResponse"> & {
};

/**
 * Describes the message sunrise.liquiditypool.v1.MsgUpdateParamsResponse.
 * Use `create(MsgUpdateParamsResponseSchema)` to create a new message.
 */
export const MsgUpdateParamsResponseSchema: GenMessage<MsgUpdateParamsResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_liquiditypool_v1_tx, 1);

/**
 * MsgCreatePool
 *
 * @generated from message sunrise.liquiditypool.v1.MsgCreatePool
 */
export type MsgCreatePool = Message<"sunrise.liquiditypool.v1.MsgCreatePool"> & {
  /**
   * @generated from field: string sender = 1;
   */
  sender: string;

  /**
   * @generated from field: string denom_base = 2;
   */
  denomBase: string;

  /**
   * @generated from field: string denom_quote = 3;
   */
  denomQuote: string;

  /**
   * @generated from field: string fee_rate = 4;
   */
  feeRate: string;

  /**
   * Basically 1.0001
   *
   * @generated from field: string price_ratio = 5;
   */
  priceRatio: string;

  /**
   * basically 0 and (-1, 0]. In the 1:1 stable pair, 0.5 would work
   *
   * @generated from field: string base_offset = 6;
   */
  baseOffset: string;
};

/**
 * Describes the message sunrise.liquiditypool.v1.MsgCreatePool.
 * Use `create(MsgCreatePoolSchema)` to create a new message.
 */
export const MsgCreatePoolSchema: GenMessage<MsgCreatePool> = /*@__PURE__*/
  messageDesc(file_sunrise_liquiditypool_v1_tx, 2);

/**
 * MsgCreatePoolResponse
 *
 * @generated from message sunrise.liquiditypool.v1.MsgCreatePoolResponse
 */
export type MsgCreatePoolResponse = Message<"sunrise.liquiditypool.v1.MsgCreatePoolResponse"> & {
  /**
   * @generated from field: uint64 id = 1;
   */
  id: bigint;
};

/**
 * Describes the message sunrise.liquiditypool.v1.MsgCreatePoolResponse.
 * Use `create(MsgCreatePoolResponseSchema)` to create a new message.
 */
export const MsgCreatePoolResponseSchema: GenMessage<MsgCreatePoolResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_liquiditypool_v1_tx, 3);

/**
 * MsgCreatePosition
 *
 * @generated from message sunrise.liquiditypool.v1.MsgCreatePosition
 */
export type MsgCreatePosition = Message<"sunrise.liquiditypool.v1.MsgCreatePosition"> & {
  /**
   * @generated from field: string sender = 1;
   */
  sender: string;

  /**
   * @generated from field: uint64 pool_id = 2;
   */
  poolId: bigint;

  /**
   * @generated from field: int64 lower_tick = 3;
   */
  lowerTick: bigint;

  /**
   * @generated from field: int64 upper_tick = 4;
   */
  upperTick: bigint;

  /**
   * @generated from field: cosmos.base.v1beta1.Coin token_base = 5;
   */
  tokenBase?: Coin;

  /**
   * @generated from field: cosmos.base.v1beta1.Coin token_quote = 6;
   */
  tokenQuote?: Coin;

  /**
   * @generated from field: string min_amount_base = 7;
   */
  minAmountBase: string;

  /**
   * @generated from field: string min_amount_quote = 8;
   */
  minAmountQuote: string;
};

/**
 * Describes the message sunrise.liquiditypool.v1.MsgCreatePosition.
 * Use `create(MsgCreatePositionSchema)` to create a new message.
 */
export const MsgCreatePositionSchema: GenMessage<MsgCreatePosition> = /*@__PURE__*/
  messageDesc(file_sunrise_liquiditypool_v1_tx, 4);

/**
 * MsgCreatePositionResponse
 *
 * @generated from message sunrise.liquiditypool.v1.MsgCreatePositionResponse
 */
export type MsgCreatePositionResponse = Message<"sunrise.liquiditypool.v1.MsgCreatePositionResponse"> & {
  /**
   * @generated from field: uint64 id = 1;
   */
  id: bigint;

  /**
   * @generated from field: string amount_base = 2;
   */
  amountBase: string;

  /**
   * @generated from field: string amount_quote = 3;
   */
  amountQuote: string;

  /**
   * @generated from field: string liquidity = 4;
   */
  liquidity: string;
};

/**
 * Describes the message sunrise.liquiditypool.v1.MsgCreatePositionResponse.
 * Use `create(MsgCreatePositionResponseSchema)` to create a new message.
 */
export const MsgCreatePositionResponseSchema: GenMessage<MsgCreatePositionResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_liquiditypool_v1_tx, 5);

/**
 * MsgIncreaseLiquidity
 *
 * @generated from message sunrise.liquiditypool.v1.MsgIncreaseLiquidity
 */
export type MsgIncreaseLiquidity = Message<"sunrise.liquiditypool.v1.MsgIncreaseLiquidity"> & {
  /**
   * @generated from field: string sender = 1;
   */
  sender: string;

  /**
   * @generated from field: uint64 id = 2;
   */
  id: bigint;

  /**
   * @generated from field: string amount_base = 3;
   */
  amountBase: string;

  /**
   * @generated from field: string amount_quote = 4;
   */
  amountQuote: string;

  /**
   * @generated from field: string min_amount_base = 5;
   */
  minAmountBase: string;

  /**
   * @generated from field: string min_amount_quote = 6;
   */
  minAmountQuote: string;
};

/**
 * Describes the message sunrise.liquiditypool.v1.MsgIncreaseLiquidity.
 * Use `create(MsgIncreaseLiquiditySchema)` to create a new message.
 */
export const MsgIncreaseLiquiditySchema: GenMessage<MsgIncreaseLiquidity> = /*@__PURE__*/
  messageDesc(file_sunrise_liquiditypool_v1_tx, 6);

/**
 * MsgIncreaseLiquidityResponse
 *
 * @generated from message sunrise.liquiditypool.v1.MsgIncreaseLiquidityResponse
 */
export type MsgIncreaseLiquidityResponse = Message<"sunrise.liquiditypool.v1.MsgIncreaseLiquidityResponse"> & {
  /**
   * @generated from field: uint64 position_id = 1;
   */
  positionId: bigint;

  /**
   * @generated from field: string amount_base = 2;
   */
  amountBase: string;

  /**
   * @generated from field: string amount_quote = 3;
   */
  amountQuote: string;
};

/**
 * Describes the message sunrise.liquiditypool.v1.MsgIncreaseLiquidityResponse.
 * Use `create(MsgIncreaseLiquidityResponseSchema)` to create a new message.
 */
export const MsgIncreaseLiquidityResponseSchema: GenMessage<MsgIncreaseLiquidityResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_liquiditypool_v1_tx, 7);

/**
 * MsgDecreaseLiquidity
 *
 * @generated from message sunrise.liquiditypool.v1.MsgDecreaseLiquidity
 */
export type MsgDecreaseLiquidity = Message<"sunrise.liquiditypool.v1.MsgDecreaseLiquidity"> & {
  /**
   * @generated from field: string sender = 1;
   */
  sender: string;

  /**
   * @generated from field: uint64 id = 2;
   */
  id: bigint;

  /**
   * @generated from field: string liquidity = 3;
   */
  liquidity: string;
};

/**
 * Describes the message sunrise.liquiditypool.v1.MsgDecreaseLiquidity.
 * Use `create(MsgDecreaseLiquiditySchema)` to create a new message.
 */
export const MsgDecreaseLiquiditySchema: GenMessage<MsgDecreaseLiquidity> = /*@__PURE__*/
  messageDesc(file_sunrise_liquiditypool_v1_tx, 8);

/**
 * MsgDecreaseLiquidityResponse
 *
 * @generated from message sunrise.liquiditypool.v1.MsgDecreaseLiquidityResponse
 */
export type MsgDecreaseLiquidityResponse = Message<"sunrise.liquiditypool.v1.MsgDecreaseLiquidityResponse"> & {
  /**
   * @generated from field: string amount_base = 1;
   */
  amountBase: string;

  /**
   * @generated from field: string amount_quote = 2;
   */
  amountQuote: string;
};

/**
 * Describes the message sunrise.liquiditypool.v1.MsgDecreaseLiquidityResponse.
 * Use `create(MsgDecreaseLiquidityResponseSchema)` to create a new message.
 */
export const MsgDecreaseLiquidityResponseSchema: GenMessage<MsgDecreaseLiquidityResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_liquiditypool_v1_tx, 9);

/**
 * MsgClaimRewards
 *
 * @generated from message sunrise.liquiditypool.v1.MsgClaimRewards
 */
export type MsgClaimRewards = Message<"sunrise.liquiditypool.v1.MsgClaimRewards"> & {
  /**
   * @generated from field: string sender = 1;
   */
  sender: string;

  /**
   * @generated from field: repeated uint64 position_ids = 2;
   */
  positionIds: bigint[];
};

/**
 * Describes the message sunrise.liquiditypool.v1.MsgClaimRewards.
 * Use `create(MsgClaimRewardsSchema)` to create a new message.
 */
export const MsgClaimRewardsSchema: GenMessage<MsgClaimRewards> = /*@__PURE__*/
  messageDesc(file_sunrise_liquiditypool_v1_tx, 10);

/**
 * MsgClaimRewardsResponse
 *
 * @generated from message sunrise.liquiditypool.v1.MsgClaimRewardsResponse
 */
export type MsgClaimRewardsResponse = Message<"sunrise.liquiditypool.v1.MsgClaimRewardsResponse"> & {
  /**
   * @generated from field: repeated cosmos.base.v1beta1.Coin amount = 1;
   */
  amount: Coin[];
};

/**
 * Describes the message sunrise.liquiditypool.v1.MsgClaimRewardsResponse.
 * Use `create(MsgClaimRewardsResponseSchema)` to create a new message.
 */
export const MsgClaimRewardsResponseSchema: GenMessage<MsgClaimRewardsResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_liquiditypool_v1_tx, 11);

/**
 * Msg defines the Msg service.
 *
 * @generated from service sunrise.liquiditypool.v1.Msg
 */
export const Msg: GenService<{
  /**
   * UpdateParams defines a (governance) operation for updating the module
   * parameters. The authority defaults to the x/gov module account.
   *
   * @generated from rpc sunrise.liquiditypool.v1.Msg.UpdateParams
   */
  updateParams: {
    methodKind: "unary";
    input: typeof MsgUpdateParamsSchema;
    output: typeof MsgUpdateParamsResponseSchema;
  },
  /**
   * CreatePool
   *
   * @generated from rpc sunrise.liquiditypool.v1.Msg.CreatePool
   */
  createPool: {
    methodKind: "unary";
    input: typeof MsgCreatePoolSchema;
    output: typeof MsgCreatePoolResponseSchema;
  },
  /**
   * CreatePosition
   *
   * @generated from rpc sunrise.liquiditypool.v1.Msg.CreatePosition
   */
  createPosition: {
    methodKind: "unary";
    input: typeof MsgCreatePositionSchema;
    output: typeof MsgCreatePositionResponseSchema;
  },
  /**
   * IncreaseLiquidity
   *
   * @generated from rpc sunrise.liquiditypool.v1.Msg.IncreaseLiquidity
   */
  increaseLiquidity: {
    methodKind: "unary";
    input: typeof MsgIncreaseLiquiditySchema;
    output: typeof MsgIncreaseLiquidityResponseSchema;
  },
  /**
   * DecreaseLiquidity
   *
   * @generated from rpc sunrise.liquiditypool.v1.Msg.DecreaseLiquidity
   */
  decreaseLiquidity: {
    methodKind: "unary";
    input: typeof MsgDecreaseLiquiditySchema;
    output: typeof MsgDecreaseLiquidityResponseSchema;
  },
  /**
   * ClaimRewards
   *
   * @generated from rpc sunrise.liquiditypool.v1.Msg.ClaimRewards
   */
  claimRewards: {
    methodKind: "unary";
    input: typeof MsgClaimRewardsSchema;
    output: typeof MsgClaimRewardsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_sunrise_liquiditypool_v1_tx, 0);

