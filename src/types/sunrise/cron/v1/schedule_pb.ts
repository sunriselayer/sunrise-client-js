// @generated by protoc-gen-es v2.2.2 with parameter "target=ts"
// @generated from file sunrise/cron/v1/schedule.proto (package sunrise.cron.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_gogoproto_gogo } from "../../../gogoproto/gogo_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file sunrise/cron/v1/schedule.proto.
 */
export const file_sunrise_cron_v1_schedule: GenFile = /*@__PURE__*/
  fileDesc("Ch5zdW5yaXNlL2Nyb24vdjEvc2NoZWR1bGUucHJvdG8SD3N1bnJpc2UuY3Jvbi52MSK4AQoIU2NoZWR1bGUSDAoEbmFtZRgBIAEoCRIOCgZwZXJpb2QYAiABKAQSNwoEbXNncxgDIAMoCzIjLnN1bnJpc2UuY3Jvbi52MS5Nc2dFeGVjdXRlQ29udHJhY3RCBMjeHwASGwoTbGFzdF9leGVjdXRlX2hlaWdodBgEIAEoBBI4Cg9leGVjdXRpb25fc3RhZ2UYBSABKA4yHy5zdW5yaXNlLmNyb24udjEuRXhlY3V0aW9uU3RhZ2UiMwoSTXNnRXhlY3V0ZUNvbnRyYWN0EhAKCGNvbnRyYWN0GAEgASgJEgsKA21zZxgCIAEoCSIeCg1TY2hlZHVsZUNvdW50Eg0KBWNvdW50GAEgASgFKlQKDkV4ZWN1dGlvblN0YWdlEh8KG0VYRUNVVElPTl9TVEFHRV9FTkRfQkxPQ0tFUhAAEiEKHUVYRUNVVElPTl9TVEFHRV9CRUdJTl9CTE9DS0VSEAFCsAEKE2NvbS5zdW5yaXNlLmNyb24udjFCDVNjaGVkdWxlUHJvdG9QAVosZ2l0aHViLmNvbS9zdW5yaXNlbGF5ZXIvc3VucmlzZS94L2Nyb24vdHlwZXOiAgNTQ1iqAg9TdW5yaXNlLkNyb24uVjHKAg9TdW5yaXNlXENyb25cVjHiAhtTdW5yaXNlXENyb25cVjFcR1BCTWV0YWRhdGHqAhFTdW5yaXNlOjpDcm9uOjpWMWIGcHJvdG8z", [file_gogoproto_gogo]);

/**
 * Defines the schedule for execution
 *
 * @generated from message sunrise.cron.v1.Schedule
 */
export type Schedule = Message<"sunrise.cron.v1.Schedule"> & {
  /**
   * Name of schedule
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Period in blocks
   *
   * @generated from field: uint64 period = 2;
   */
  period: bigint;

  /**
   * Msgs that will be executed every certain number of blocks, specified in the `period` field
   *
   * @generated from field: repeated sunrise.cron.v1.MsgExecuteContract msgs = 3;
   */
  msgs: MsgExecuteContract[];

  /**
   * Last execution's block height
   *
   * @generated from field: uint64 last_execute_height = 4;
   */
  lastExecuteHeight: bigint;

  /**
   * Stage when messages will be executed
   *
   * @generated from field: sunrise.cron.v1.ExecutionStage execution_stage = 5;
   */
  executionStage: ExecutionStage;
};

/**
 * Describes the message sunrise.cron.v1.Schedule.
 * Use `create(ScheduleSchema)` to create a new message.
 */
export const ScheduleSchema: GenMessage<Schedule> = /*@__PURE__*/
  messageDesc(file_sunrise_cron_v1_schedule, 0);

/**
 * Defines the contract and the message to pass
 *
 * @generated from message sunrise.cron.v1.MsgExecuteContract
 */
export type MsgExecuteContract = Message<"sunrise.cron.v1.MsgExecuteContract"> & {
  /**
   * The address of the smart contract
   *
   * @generated from field: string contract = 1;
   */
  contract: string;

  /**
   * JSON encoded message to be passed to the contract
   *
   * @generated from field: string msg = 2;
   */
  msg: string;
};

/**
 * Describes the message sunrise.cron.v1.MsgExecuteContract.
 * Use `create(MsgExecuteContractSchema)` to create a new message.
 */
export const MsgExecuteContractSchema: GenMessage<MsgExecuteContract> = /*@__PURE__*/
  messageDesc(file_sunrise_cron_v1_schedule, 1);

/**
 * Defines the number of current schedules
 *
 * @generated from message sunrise.cron.v1.ScheduleCount
 */
export type ScheduleCount = Message<"sunrise.cron.v1.ScheduleCount"> & {
  /**
   * The number of current schedules
   *
   * @generated from field: int32 count = 1;
   */
  count: number;
};

/**
 * Describes the message sunrise.cron.v1.ScheduleCount.
 * Use `create(ScheduleCountSchema)` to create a new message.
 */
export const ScheduleCountSchema: GenMessage<ScheduleCount> = /*@__PURE__*/
  messageDesc(file_sunrise_cron_v1_schedule, 2);

/**
 * Defines when messages will be executed in the block
 *
 * @generated from enum sunrise.cron.v1.ExecutionStage
 */
export enum ExecutionStage {
  /**
   * Execution at the end of the block
   *
   * @generated from enum value: EXECUTION_STAGE_END_BLOCKER = 0;
   */
  END_BLOCKER = 0,

  /**
   * Execution at the beginning of the block
   *
   * @generated from enum value: EXECUTION_STAGE_BEGIN_BLOCKER = 1;
   */
  BEGIN_BLOCKER = 1,
}

/**
 * Describes the enum sunrise.cron.v1.ExecutionStage.
 */
export const ExecutionStageSchema: GenEnum<ExecutionStage> = /*@__PURE__*/
  enumDesc(file_sunrise_cron_v1_schedule, 0);

