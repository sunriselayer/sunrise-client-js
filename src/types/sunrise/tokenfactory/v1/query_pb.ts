// @generated by protoc-gen-es v2.2.2 with parameter "target=ts"
// @generated from file sunrise/tokenfactory/v1/query.proto (package sunrise.tokenfactory.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_gogoproto_gogo } from "../../../gogoproto/gogo_pb";
import { file_google_api_annotations } from "../../../google/api/annotations_pb";
import type { DenomAuthorityMetadata } from "./authorityMetadata_pb";
import { file_sunrise_tokenfactory_v1_authorityMetadata } from "./authorityMetadata_pb";
import type { Params } from "./params_pb";
import { file_sunrise_tokenfactory_v1_params } from "./params_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file sunrise/tokenfactory/v1/query.proto.
 */
export const file_sunrise_tokenfactory_v1_query: GenFile = /*@__PURE__*/
  fileDesc("CiNzdW5yaXNlL3Rva2VuZmFjdG9yeS92MS9xdWVyeS5wcm90bxIXc3VucmlzZS50b2tlbmZhY3RvcnkudjEiFAoSUXVlcnlQYXJhbXNSZXF1ZXN0IkwKE1F1ZXJ5UGFyYW1zUmVzcG9uc2USNQoGcGFyYW1zGAEgASgLMh8uc3VucmlzZS50b2tlbmZhY3RvcnkudjEuUGFyYW1zQgTI3h8AIkUKIlF1ZXJ5RGVub21BdXRob3JpdHlNZXRhZGF0YVJlcXVlc3QSHwoFZGVub20YASABKAlCEPLeHwx5YW1sOiJkZW5vbSIilQEKI1F1ZXJ5RGVub21BdXRob3JpdHlNZXRhZGF0YVJlc3BvbnNlEm4KEmF1dGhvcml0eV9tZXRhZGF0YRgBIAEoCzIvLnN1bnJpc2UudG9rZW5mYWN0b3J5LnYxLkRlbm9tQXV0aG9yaXR5TWV0YWRhdGFCIcjeHwDy3h8ZeWFtbDoiYXV0aG9yaXR5X21ldGFkYXRhIiJECh1RdWVyeURlbm9tc0Zyb21DcmVhdG9yUmVxdWVzdBIjCgdjcmVhdG9yGAEgASgJQhLy3h8OeWFtbDoiY3JlYXRvciIiQwoeUXVlcnlEZW5vbXNGcm9tQ3JlYXRvclJlc3BvbnNlEiEKBmRlbm9tcxgBIAMoCUIR8t4fDXlhbWw6ImRlbm9tcyIiRAohUXVlcnlCZWZvcmVTZW5kSG9va0FkZHJlc3NSZXF1ZXN0Eh8KBWRlbm9tGAEgASgJQhDy3h8MeWFtbDoiZGVub20iIlsKIlF1ZXJ5QmVmb3JlU2VuZEhvb2tBZGRyZXNzUmVzcG9uc2USNQoQY29zbXdhc21fYWRkcmVzcxgBIAEoCUIb8t4fF3lhbWw6ImNvc213YXNtX2FkZHJlc3MiIikKJ1F1ZXJ5QWxsQmVmb3JlU2VuZEhvb2tzQWRkcmVzc2VzUmVxdWVzdCKTAQooUXVlcnlBbGxCZWZvcmVTZW5kSG9va3NBZGRyZXNzZXNSZXNwb25zZRIhCgZkZW5vbXMYASADKAlCEfLeHw15YW1sOiJkZW5vbXMiEkQKGmJlZm9yZV9zZW5kX2hvb2tfYWRkcmVzc2VzGAIgAygJQiDy3h8ceWFtbDoiYmVmb3JlX3NlbmRfYWRkcmVzc2VzIjK3BAoFUXVlcnkSjAEKBlBhcmFtcxIrLnN1bnJpc2UudG9rZW5mYWN0b3J5LnYxLlF1ZXJ5UGFyYW1zUmVxdWVzdBosLnN1bnJpc2UudG9rZW5mYWN0b3J5LnYxLlF1ZXJ5UGFyYW1zUmVzcG9uc2UiJ4LT5JMCIRIfL3N1bnJpc2UvdG9rZW5mYWN0b3J5L3YxL3BhcmFtcxLXAQoWRGVub21BdXRob3JpdHlNZXRhZGF0YRI7LnN1bnJpc2UudG9rZW5mYWN0b3J5LnYxLlF1ZXJ5RGVub21BdXRob3JpdHlNZXRhZGF0YVJlcXVlc3QaPC5zdW5yaXNlLnRva2VuZmFjdG9yeS52MS5RdWVyeURlbm9tQXV0aG9yaXR5TWV0YWRhdGFSZXNwb25zZSJCgtPkkwI8Ejovc3VucmlzZS90b2tlbmZhY3RvcnkvdjEvZGVub21zL3tkZW5vbX0vYXV0aG9yaXR5X21ldGFkYXRhEsQBChFEZW5vbXNGcm9tQ3JlYXRvchI2LnN1bnJpc2UudG9rZW5mYWN0b3J5LnYxLlF1ZXJ5RGVub21zRnJvbUNyZWF0b3JSZXF1ZXN0Gjcuc3VucmlzZS50b2tlbmZhY3RvcnkudjEuUXVlcnlEZW5vbXNGcm9tQ3JlYXRvclJlc3BvbnNlIj6C0+STAjgSNi9zdW5yaXNlL3Rva2VuZmFjdG9yeS92MS9kZW5vbXNfZnJvbV9jcmVhdG9yL3tjcmVhdG9yfULdAQobY29tLnN1bnJpc2UudG9rZW5mYWN0b3J5LnYxQgpRdWVyeVByb3RvUAFaNGdpdGh1Yi5jb20vc3VucmlzZWxheWVyL3N1bnJpc2UveC90b2tlbmZhY3RvcnkvdHlwZXOiAgNTVFiqAhdTdW5yaXNlLlRva2VuZmFjdG9yeS5WMcoCF1N1bnJpc2VcVG9rZW5mYWN0b3J5XFYx4gIjU3VucmlzZVxUb2tlbmZhY3RvcnlcVjFcR1BCTWV0YWRhdGHqAhlTdW5yaXNlOjpUb2tlbmZhY3Rvcnk6OlYxYgZwcm90bzM", [file_gogoproto_gogo, file_google_api_annotations, file_sunrise_tokenfactory_v1_authorityMetadata, file_sunrise_tokenfactory_v1_params]);

/**
 * QueryParamsRequest is the request type for the Query/Params RPC method.
 *
 * @generated from message sunrise.tokenfactory.v1.QueryParamsRequest
 */
export type QueryParamsRequest = Message<"sunrise.tokenfactory.v1.QueryParamsRequest"> & {
};

/**
 * Describes the message sunrise.tokenfactory.v1.QueryParamsRequest.
 * Use `create(QueryParamsRequestSchema)` to create a new message.
 */
export const QueryParamsRequestSchema: GenMessage<QueryParamsRequest> = /*@__PURE__*/
  messageDesc(file_sunrise_tokenfactory_v1_query, 0);

/**
 * QueryParamsResponse is the response type for the Query/Params RPC method.
 *
 * @generated from message sunrise.tokenfactory.v1.QueryParamsResponse
 */
export type QueryParamsResponse = Message<"sunrise.tokenfactory.v1.QueryParamsResponse"> & {
  /**
   * params defines the parameters of the module.
   *
   * @generated from field: sunrise.tokenfactory.v1.Params params = 1;
   */
  params?: Params;
};

/**
 * Describes the message sunrise.tokenfactory.v1.QueryParamsResponse.
 * Use `create(QueryParamsResponseSchema)` to create a new message.
 */
export const QueryParamsResponseSchema: GenMessage<QueryParamsResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_tokenfactory_v1_query, 1);

/**
 * QueryDenomAuthorityMetadataRequest defines the request structure for the
 * DenomAuthorityMetadata gRPC query.
 *
 * @generated from message sunrise.tokenfactory.v1.QueryDenomAuthorityMetadataRequest
 */
export type QueryDenomAuthorityMetadataRequest = Message<"sunrise.tokenfactory.v1.QueryDenomAuthorityMetadataRequest"> & {
  /**
   * @generated from field: string denom = 1;
   */
  denom: string;
};

/**
 * Describes the message sunrise.tokenfactory.v1.QueryDenomAuthorityMetadataRequest.
 * Use `create(QueryDenomAuthorityMetadataRequestSchema)` to create a new message.
 */
export const QueryDenomAuthorityMetadataRequestSchema: GenMessage<QueryDenomAuthorityMetadataRequest> = /*@__PURE__*/
  messageDesc(file_sunrise_tokenfactory_v1_query, 2);

/**
 * QueryDenomAuthorityMetadataResponse defines the response structure for the
 * DenomAuthorityMetadata gRPC query.
 *
 * @generated from message sunrise.tokenfactory.v1.QueryDenomAuthorityMetadataResponse
 */
export type QueryDenomAuthorityMetadataResponse = Message<"sunrise.tokenfactory.v1.QueryDenomAuthorityMetadataResponse"> & {
  /**
   * @generated from field: sunrise.tokenfactory.v1.DenomAuthorityMetadata authority_metadata = 1;
   */
  authorityMetadata?: DenomAuthorityMetadata;
};

/**
 * Describes the message sunrise.tokenfactory.v1.QueryDenomAuthorityMetadataResponse.
 * Use `create(QueryDenomAuthorityMetadataResponseSchema)` to create a new message.
 */
export const QueryDenomAuthorityMetadataResponseSchema: GenMessage<QueryDenomAuthorityMetadataResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_tokenfactory_v1_query, 3);

/**
 * QueryDenomsFromCreatorRequest defines the request structure for the
 * DenomsFromCreator gRPC query.
 *
 * @generated from message sunrise.tokenfactory.v1.QueryDenomsFromCreatorRequest
 */
export type QueryDenomsFromCreatorRequest = Message<"sunrise.tokenfactory.v1.QueryDenomsFromCreatorRequest"> & {
  /**
   * @generated from field: string creator = 1;
   */
  creator: string;
};

/**
 * Describes the message sunrise.tokenfactory.v1.QueryDenomsFromCreatorRequest.
 * Use `create(QueryDenomsFromCreatorRequestSchema)` to create a new message.
 */
export const QueryDenomsFromCreatorRequestSchema: GenMessage<QueryDenomsFromCreatorRequest> = /*@__PURE__*/
  messageDesc(file_sunrise_tokenfactory_v1_query, 4);

/**
 * QueryDenomsFromCreatorRequest defines the response structure for the
 * DenomsFromCreator gRPC query.
 *
 * @generated from message sunrise.tokenfactory.v1.QueryDenomsFromCreatorResponse
 */
export type QueryDenomsFromCreatorResponse = Message<"sunrise.tokenfactory.v1.QueryDenomsFromCreatorResponse"> & {
  /**
   * @generated from field: repeated string denoms = 1;
   */
  denoms: string[];
};

/**
 * Describes the message sunrise.tokenfactory.v1.QueryDenomsFromCreatorResponse.
 * Use `create(QueryDenomsFromCreatorResponseSchema)` to create a new message.
 */
export const QueryDenomsFromCreatorResponseSchema: GenMessage<QueryDenomsFromCreatorResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_tokenfactory_v1_query, 5);

/**
 * QueryBeforeSendHookAddressRequest defines the request structure for the
 * BeforeSendHookAddress gRPC query.
 *
 * @generated from message sunrise.tokenfactory.v1.QueryBeforeSendHookAddressRequest
 */
export type QueryBeforeSendHookAddressRequest = Message<"sunrise.tokenfactory.v1.QueryBeforeSendHookAddressRequest"> & {
  /**
   * @generated from field: string denom = 1;
   */
  denom: string;
};

/**
 * Describes the message sunrise.tokenfactory.v1.QueryBeforeSendHookAddressRequest.
 * Use `create(QueryBeforeSendHookAddressRequestSchema)` to create a new message.
 */
export const QueryBeforeSendHookAddressRequestSchema: GenMessage<QueryBeforeSendHookAddressRequest> = /*@__PURE__*/
  messageDesc(file_sunrise_tokenfactory_v1_query, 6);

/**
 * QueryBeforeSendHookAddressResponse defines the response structure for the
 * DenomBeforeSendHook gRPC query.
 *
 * @generated from message sunrise.tokenfactory.v1.QueryBeforeSendHookAddressResponse
 */
export type QueryBeforeSendHookAddressResponse = Message<"sunrise.tokenfactory.v1.QueryBeforeSendHookAddressResponse"> & {
  /**
   * @generated from field: string cosmwasm_address = 1;
   */
  cosmwasmAddress: string;
};

/**
 * Describes the message sunrise.tokenfactory.v1.QueryBeforeSendHookAddressResponse.
 * Use `create(QueryBeforeSendHookAddressResponseSchema)` to create a new message.
 */
export const QueryBeforeSendHookAddressResponseSchema: GenMessage<QueryBeforeSendHookAddressResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_tokenfactory_v1_query, 7);

/**
 * QueryAllBeforeSendHooksAddressesRequest defines the request structure for the
 * AllBeforeSendHooksAddresses gRPC query.
 *
 * @generated from message sunrise.tokenfactory.v1.QueryAllBeforeSendHooksAddressesRequest
 */
export type QueryAllBeforeSendHooksAddressesRequest = Message<"sunrise.tokenfactory.v1.QueryAllBeforeSendHooksAddressesRequest"> & {
};

/**
 * Describes the message sunrise.tokenfactory.v1.QueryAllBeforeSendHooksAddressesRequest.
 * Use `create(QueryAllBeforeSendHooksAddressesRequestSchema)` to create a new message.
 */
export const QueryAllBeforeSendHooksAddressesRequestSchema: GenMessage<QueryAllBeforeSendHooksAddressesRequest> = /*@__PURE__*/
  messageDesc(file_sunrise_tokenfactory_v1_query, 8);

/**
 * QueryAllBeforeSendHooksAddressesResponse defines the response structure for
 * the AllBeforeSendHooksAddresses gRPC query.
 *
 * @generated from message sunrise.tokenfactory.v1.QueryAllBeforeSendHooksAddressesResponse
 */
export type QueryAllBeforeSendHooksAddressesResponse = Message<"sunrise.tokenfactory.v1.QueryAllBeforeSendHooksAddressesResponse"> & {
  /**
   * @generated from field: repeated string denoms = 1;
   */
  denoms: string[];

  /**
   * @generated from field: repeated string before_send_hook_addresses = 2;
   */
  beforeSendHookAddresses: string[];
};

/**
 * Describes the message sunrise.tokenfactory.v1.QueryAllBeforeSendHooksAddressesResponse.
 * Use `create(QueryAllBeforeSendHooksAddressesResponseSchema)` to create a new message.
 */
export const QueryAllBeforeSendHooksAddressesResponseSchema: GenMessage<QueryAllBeforeSendHooksAddressesResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_tokenfactory_v1_query, 9);

/**
 * Query defines the gRPC querier service.
 *
 * @generated from service sunrise.tokenfactory.v1.Query
 */
export const Query: GenService<{
  /**
   * Params defines a gRPC query method that returns the tokenfactory module's
   * parameters.
   *
   * @generated from rpc sunrise.tokenfactory.v1.Query.Params
   */
  params: {
    methodKind: "unary";
    input: typeof QueryParamsRequestSchema;
    output: typeof QueryParamsResponseSchema;
  },
  /**
   * DenomAuthorityMetadata defines a gRPC query method for fetching
   * DenomAuthorityMetadata for a particular denom.
   *
   * @generated from rpc sunrise.tokenfactory.v1.Query.DenomAuthorityMetadata
   */
  denomAuthorityMetadata: {
    methodKind: "unary";
    input: typeof QueryDenomAuthorityMetadataRequestSchema;
    output: typeof QueryDenomAuthorityMetadataResponseSchema;
  },
  /**
   * DenomsFromCreator defines a gRPC query method for fetching all
   * denominations created by a specific admin/creator.
   *
   * @generated from rpc sunrise.tokenfactory.v1.Query.DenomsFromCreator
   */
  denomsFromCreator: {
    methodKind: "unary";
    input: typeof QueryDenomsFromCreatorRequestSchema;
    output: typeof QueryDenomsFromCreatorResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_sunrise_tokenfactory_v1_query, 0);

