// @generated by protoc-gen-es v2.2.2 with parameter "target=ts"
// @generated from file sunrise/liquidityincentive/query.proto (package sunrise.liquidityincentive, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { PageRequest, PageResponse } from "../../cosmos/base/query/v1beta1/pagination_pb";
import { file_cosmos_base_query_v1beta1_pagination } from "../../cosmos/base/query/v1beta1/pagination_pb";
import { file_gogoproto_gogo } from "../../gogoproto/gogo_pb";
import { file_google_api_annotations } from "../../google/api/annotations_pb";
import type { Epoch } from "./epoch_pb";
import { file_sunrise_liquidityincentive_epoch } from "./epoch_pb";
import type { Gauge, Vote } from "./gauge_pb";
import { file_sunrise_liquidityincentive_gauge } from "./gauge_pb";
import type { Params } from "./params_pb";
import { file_sunrise_liquidityincentive_params } from "./params_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file sunrise/liquidityincentive/query.proto.
 */
export const file_sunrise_liquidityincentive_query: GenFile = /*@__PURE__*/
  fileDesc("CiZzdW5yaXNlL2xpcXVpZGl0eWluY2VudGl2ZS9xdWVyeS5wcm90bxIac3VucmlzZS5saXF1aWRpdHlpbmNlbnRpdmUiFAoSUXVlcnlQYXJhbXNSZXF1ZXN0Ik8KE1F1ZXJ5UGFyYW1zUmVzcG9uc2USOAoGcGFyYW1zGAEgASgLMiIuc3VucmlzZS5saXF1aWRpdHlpbmNlbnRpdmUuUGFyYW1zQgTI3h8AIh8KEVF1ZXJ5RXBvY2hSZXF1ZXN0EgoKAmlkGAEgASgEIkwKElF1ZXJ5RXBvY2hSZXNwb25zZRI2CgVlcG9jaBgBIAEoCzIhLnN1bnJpc2UubGlxdWlkaXR5aW5jZW50aXZlLkVwb2NoQgTI3h8AIlAKElF1ZXJ5RXBvY2hzUmVxdWVzdBI6CgpwYWdpbmF0aW9uGAEgASgLMiYuY29zbW9zLmJhc2UucXVlcnkudjFiZXRhMS5QYWdlUmVxdWVzdCKLAQoTUXVlcnlFcG9jaHNSZXNwb25zZRI3CgZlcG9jaHMYASADKAsyIS5zdW5yaXNlLmxpcXVpZGl0eWluY2VudGl2ZS5FcG9jaEIEyN4fABI7CgpwYWdpbmF0aW9uGAIgASgLMicuY29zbW9zLmJhc2UucXVlcnkudjFiZXRhMS5QYWdlUmVzcG9uc2UiPwoRUXVlcnlHYXVnZVJlcXVlc3QSGQoRcHJldmlvdXNfZXBvY2hfaWQYASABKAQSDwoHcG9vbF9pZBgCIAEoBCJMChJRdWVyeUdhdWdlUmVzcG9uc2USNgoFZ2F1Z2UYASABKAsyIS5zdW5yaXNlLmxpcXVpZGl0eWluY2VudGl2ZS5HYXVnZUIEyN4fACJrChJRdWVyeUdhdWdlc1JlcXVlc3QSGQoRcHJldmlvdXNfZXBvY2hfaWQYASABKAQSOgoKcGFnaW5hdGlvbhgCIAEoCzImLmNvc21vcy5iYXNlLnF1ZXJ5LnYxYmV0YTEuUGFnZVJlcXVlc3QiigEKE1F1ZXJ5R2F1Z2VzUmVzcG9uc2USNgoFZ2F1Z2UYASADKAsyIS5zdW5yaXNlLmxpcXVpZGl0eWluY2VudGl2ZS5HYXVnZUIEyN4fABI7CgpwYWdpbmF0aW9uGAIgASgLMicuY29zbW9zLmJhc2UucXVlcnkudjFiZXRhMS5QYWdlUmVzcG9uc2UiIwoQUXVlcnlWb3RlUmVxdWVzdBIPCgdhZGRyZXNzGAEgASgJIkkKEVF1ZXJ5Vm90ZVJlc3BvbnNlEjQKBHZvdGUYASABKAsyIC5zdW5yaXNlLmxpcXVpZGl0eWluY2VudGl2ZS5Wb3RlQgTI3h8AIk8KEVF1ZXJ5Vm90ZXNSZXF1ZXN0EjoKCnBhZ2luYXRpb24YASABKAsyJi5jb3Ntb3MuYmFzZS5xdWVyeS52MWJldGExLlBhZ2VSZXF1ZXN0IogBChJRdWVyeVZvdGVzUmVzcG9uc2USNQoFdm90ZXMYASADKAsyIC5zdW5yaXNlLmxpcXVpZGl0eWluY2VudGl2ZS5Wb3RlQgTI3h8AEjsKCnBhZ2luYXRpb24YAiABKAsyJy5jb3Ntb3MuYmFzZS5xdWVyeS52MWJldGExLlBhZ2VSZXNwb25zZTLtCAoFUXVlcnkSlQEKBlBhcmFtcxIuLnN1bnJpc2UubGlxdWlkaXR5aW5jZW50aXZlLlF1ZXJ5UGFyYW1zUmVxdWVzdBovLnN1bnJpc2UubGlxdWlkaXR5aW5jZW50aXZlLlF1ZXJ5UGFyYW1zUmVzcG9uc2UiKoLT5JMCJBIiL3N1bnJpc2UvbGlxdWlkaXR5aW5jZW50aXZlL3BhcmFtcxKXAQoFRXBvY2gSLS5zdW5yaXNlLmxpcXVpZGl0eWluY2VudGl2ZS5RdWVyeUVwb2NoUmVxdWVzdBouLnN1bnJpc2UubGlxdWlkaXR5aW5jZW50aXZlLlF1ZXJ5RXBvY2hSZXNwb25zZSIvgtPkkwIpEicvc3VucmlzZS9saXF1aWRpdHlpbmNlbnRpdmUvZXBvY2hzL3tpZH0SlQEKBkVwb2NocxIuLnN1bnJpc2UubGlxdWlkaXR5aW5jZW50aXZlLlF1ZXJ5RXBvY2hzUmVxdWVzdBovLnN1bnJpc2UubGlxdWlkaXR5aW5jZW50aXZlLlF1ZXJ5RXBvY2hzUmVzcG9uc2UiKoLT5JMCJBIiL3N1bnJpc2UvbGlxdWlkaXR5aW5jZW50aXZlL2Vwb2NocxK3AQoFR2F1Z2USLS5zdW5yaXNlLmxpcXVpZGl0eWluY2VudGl2ZS5RdWVyeUdhdWdlUmVxdWVzdBouLnN1bnJpc2UubGlxdWlkaXR5aW5jZW50aXZlLlF1ZXJ5R2F1Z2VSZXNwb25zZSJPgtPkkwJJEkcvc3VucmlzZS9saXF1aWRpdHlpbmNlbnRpdmUvZXBvY2hzL3twcmV2aW91c19lcG9jaF9pZH0vZ2F1Z2VzL3twb29sX2lkfRKwAQoGR2F1Z2VzEi4uc3VucmlzZS5saXF1aWRpdHlpbmNlbnRpdmUuUXVlcnlHYXVnZXNSZXF1ZXN0Gi8uc3VucmlzZS5saXF1aWRpdHlpbmNlbnRpdmUuUXVlcnlHYXVnZXNSZXNwb25zZSJFgtPkkwI/Ej0vc3VucmlzZS9saXF1aWRpdHlpbmNlbnRpdmUvZXBvY2hzL3twcmV2aW91c19lcG9jaF9pZH0vZ2F1Z2VzEpgBCgRWb3RlEiwuc3VucmlzZS5saXF1aWRpdHlpbmNlbnRpdmUuUXVlcnlWb3RlUmVxdWVzdBotLnN1bnJpc2UubGlxdWlkaXR5aW5jZW50aXZlLlF1ZXJ5Vm90ZVJlc3BvbnNlIjOC0+STAi0SKy9zdW5yaXNlL2xpcXVpZGl0eWluY2VudGl2ZS92b3Rlcy97YWRkcmVzc30SkQEKBVZvdGVzEi0uc3VucmlzZS5saXF1aWRpdHlpbmNlbnRpdmUuUXVlcnlWb3Rlc1JlcXVlc3QaLi5zdW5yaXNlLmxpcXVpZGl0eWluY2VudGl2ZS5RdWVyeVZvdGVzUmVzcG9uc2UiKYLT5JMCIxIhL3N1bnJpc2UvbGlxdWlkaXR5aW5jZW50aXZlL3ZvdGVzQvEBCh5jb20uc3VucmlzZS5saXF1aWRpdHlpbmNlbnRpdmVCClF1ZXJ5UHJvdG9QAVo6Z2l0aHViLmNvbS9zdW5yaXNlbGF5ZXIvc3VucmlzZS94L2xpcXVpZGl0eWluY2VudGl2ZS90eXBlc6ICA1NMWKoCGlN1bnJpc2UuTGlxdWlkaXR5aW5jZW50aXZlygIaU3VucmlzZVxMaXF1aWRpdHlpbmNlbnRpdmXiAiZTdW5yaXNlXExpcXVpZGl0eWluY2VudGl2ZVxHUEJNZXRhZGF0YeoCG1N1bnJpc2U6OkxpcXVpZGl0eWluY2VudGl2ZWIGcHJvdG8z", [file_cosmos_base_query_v1beta1_pagination, file_gogoproto_gogo, file_google_api_annotations, file_sunrise_liquidityincentive_epoch, file_sunrise_liquidityincentive_gauge, file_sunrise_liquidityincentive_params]);

/**
 * QueryParamsRequest is request type for the Query/Params RPC method.
 *
 * @generated from message sunrise.liquidityincentive.QueryParamsRequest
 */
export type QueryParamsRequest = Message<"sunrise.liquidityincentive.QueryParamsRequest"> & {
};

/**
 * Describes the message sunrise.liquidityincentive.QueryParamsRequest.
 * Use `create(QueryParamsRequestSchema)` to create a new message.
 */
export const QueryParamsRequestSchema: GenMessage<QueryParamsRequest> = /*@__PURE__*/
  messageDesc(file_sunrise_liquidityincentive_query, 0);

/**
 * QueryParamsResponse is response type for the Query/Params RPC method.
 *
 * @generated from message sunrise.liquidityincentive.QueryParamsResponse
 */
export type QueryParamsResponse = Message<"sunrise.liquidityincentive.QueryParamsResponse"> & {
  /**
   * params holds all the parameters of this module.
   *
   * @generated from field: sunrise.liquidityincentive.Params params = 1;
   */
  params?: Params;
};

/**
 * Describes the message sunrise.liquidityincentive.QueryParamsResponse.
 * Use `create(QueryParamsResponseSchema)` to create a new message.
 */
export const QueryParamsResponseSchema: GenMessage<QueryParamsResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_liquidityincentive_query, 1);

/**
 * QueryEpochRequest
 *
 * @generated from message sunrise.liquidityincentive.QueryEpochRequest
 */
export type QueryEpochRequest = Message<"sunrise.liquidityincentive.QueryEpochRequest"> & {
  /**
   * @generated from field: uint64 id = 1;
   */
  id: bigint;
};

/**
 * Describes the message sunrise.liquidityincentive.QueryEpochRequest.
 * Use `create(QueryEpochRequestSchema)` to create a new message.
 */
export const QueryEpochRequestSchema: GenMessage<QueryEpochRequest> = /*@__PURE__*/
  messageDesc(file_sunrise_liquidityincentive_query, 2);

/**
 * QueryEpochResponse
 *
 * @generated from message sunrise.liquidityincentive.QueryEpochResponse
 */
export type QueryEpochResponse = Message<"sunrise.liquidityincentive.QueryEpochResponse"> & {
  /**
   * @generated from field: sunrise.liquidityincentive.Epoch epoch = 1;
   */
  epoch?: Epoch;
};

/**
 * Describes the message sunrise.liquidityincentive.QueryEpochResponse.
 * Use `create(QueryEpochResponseSchema)` to create a new message.
 */
export const QueryEpochResponseSchema: GenMessage<QueryEpochResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_liquidityincentive_query, 3);

/**
 * QueryEpochsRequest
 *
 * @generated from message sunrise.liquidityincentive.QueryEpochsRequest
 */
export type QueryEpochsRequest = Message<"sunrise.liquidityincentive.QueryEpochsRequest"> & {
  /**
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
   */
  pagination?: PageRequest;
};

/**
 * Describes the message sunrise.liquidityincentive.QueryEpochsRequest.
 * Use `create(QueryEpochsRequestSchema)` to create a new message.
 */
export const QueryEpochsRequestSchema: GenMessage<QueryEpochsRequest> = /*@__PURE__*/
  messageDesc(file_sunrise_liquidityincentive_query, 4);

/**
 * QueryEpochsResponse
 *
 * @generated from message sunrise.liquidityincentive.QueryEpochsResponse
 */
export type QueryEpochsResponse = Message<"sunrise.liquidityincentive.QueryEpochsResponse"> & {
  /**
   * @generated from field: repeated sunrise.liquidityincentive.Epoch epochs = 1;
   */
  epochs: Epoch[];

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;
};

/**
 * Describes the message sunrise.liquidityincentive.QueryEpochsResponse.
 * Use `create(QueryEpochsResponseSchema)` to create a new message.
 */
export const QueryEpochsResponseSchema: GenMessage<QueryEpochsResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_liquidityincentive_query, 5);

/**
 * QueryGaugeRequest
 *
 * @generated from message sunrise.liquidityincentive.QueryGaugeRequest
 */
export type QueryGaugeRequest = Message<"sunrise.liquidityincentive.QueryGaugeRequest"> & {
  /**
   * @generated from field: uint64 previous_epoch_id = 1;
   */
  previousEpochId: bigint;

  /**
   * @generated from field: uint64 pool_id = 2;
   */
  poolId: bigint;
};

/**
 * Describes the message sunrise.liquidityincentive.QueryGaugeRequest.
 * Use `create(QueryGaugeRequestSchema)` to create a new message.
 */
export const QueryGaugeRequestSchema: GenMessage<QueryGaugeRequest> = /*@__PURE__*/
  messageDesc(file_sunrise_liquidityincentive_query, 6);

/**
 * QueryGaugeResponse
 *
 * @generated from message sunrise.liquidityincentive.QueryGaugeResponse
 */
export type QueryGaugeResponse = Message<"sunrise.liquidityincentive.QueryGaugeResponse"> & {
  /**
   * @generated from field: sunrise.liquidityincentive.Gauge gauge = 1;
   */
  gauge?: Gauge;
};

/**
 * Describes the message sunrise.liquidityincentive.QueryGaugeResponse.
 * Use `create(QueryGaugeResponseSchema)` to create a new message.
 */
export const QueryGaugeResponseSchema: GenMessage<QueryGaugeResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_liquidityincentive_query, 7);

/**
 * QueryGaugesRequest
 *
 * @generated from message sunrise.liquidityincentive.QueryGaugesRequest
 */
export type QueryGaugesRequest = Message<"sunrise.liquidityincentive.QueryGaugesRequest"> & {
  /**
   * @generated from field: uint64 previous_epoch_id = 1;
   */
  previousEpochId: bigint;

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 2;
   */
  pagination?: PageRequest;
};

/**
 * Describes the message sunrise.liquidityincentive.QueryGaugesRequest.
 * Use `create(QueryGaugesRequestSchema)` to create a new message.
 */
export const QueryGaugesRequestSchema: GenMessage<QueryGaugesRequest> = /*@__PURE__*/
  messageDesc(file_sunrise_liquidityincentive_query, 8);

/**
 * QueryGaugesResponse
 *
 * @generated from message sunrise.liquidityincentive.QueryGaugesResponse
 */
export type QueryGaugesResponse = Message<"sunrise.liquidityincentive.QueryGaugesResponse"> & {
  /**
   * @generated from field: repeated sunrise.liquidityincentive.Gauge gauge = 1;
   */
  gauge: Gauge[];

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;
};

/**
 * Describes the message sunrise.liquidityincentive.QueryGaugesResponse.
 * Use `create(QueryGaugesResponseSchema)` to create a new message.
 */
export const QueryGaugesResponseSchema: GenMessage<QueryGaugesResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_liquidityincentive_query, 9);

/**
 * QueryVoteRequest
 *
 * @generated from message sunrise.liquidityincentive.QueryVoteRequest
 */
export type QueryVoteRequest = Message<"sunrise.liquidityincentive.QueryVoteRequest"> & {
  /**
   * @generated from field: string address = 1;
   */
  address: string;
};

/**
 * Describes the message sunrise.liquidityincentive.QueryVoteRequest.
 * Use `create(QueryVoteRequestSchema)` to create a new message.
 */
export const QueryVoteRequestSchema: GenMessage<QueryVoteRequest> = /*@__PURE__*/
  messageDesc(file_sunrise_liquidityincentive_query, 10);

/**
 * QueryVoteResponse
 *
 * @generated from message sunrise.liquidityincentive.QueryVoteResponse
 */
export type QueryVoteResponse = Message<"sunrise.liquidityincentive.QueryVoteResponse"> & {
  /**
   * @generated from field: sunrise.liquidityincentive.Vote vote = 1;
   */
  vote?: Vote;
};

/**
 * Describes the message sunrise.liquidityincentive.QueryVoteResponse.
 * Use `create(QueryVoteResponseSchema)` to create a new message.
 */
export const QueryVoteResponseSchema: GenMessage<QueryVoteResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_liquidityincentive_query, 11);

/**
 * QueryVotesRequest
 *
 * @generated from message sunrise.liquidityincentive.QueryVotesRequest
 */
export type QueryVotesRequest = Message<"sunrise.liquidityincentive.QueryVotesRequest"> & {
  /**
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
   */
  pagination?: PageRequest;
};

/**
 * Describes the message sunrise.liquidityincentive.QueryVotesRequest.
 * Use `create(QueryVotesRequestSchema)` to create a new message.
 */
export const QueryVotesRequestSchema: GenMessage<QueryVotesRequest> = /*@__PURE__*/
  messageDesc(file_sunrise_liquidityincentive_query, 12);

/**
 * QueryVotesResponse
 *
 * @generated from message sunrise.liquidityincentive.QueryVotesResponse
 */
export type QueryVotesResponse = Message<"sunrise.liquidityincentive.QueryVotesResponse"> & {
  /**
   * @generated from field: repeated sunrise.liquidityincentive.Vote votes = 1;
   */
  votes: Vote[];

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;
};

/**
 * Describes the message sunrise.liquidityincentive.QueryVotesResponse.
 * Use `create(QueryVotesResponseSchema)` to create a new message.
 */
export const QueryVotesResponseSchema: GenMessage<QueryVotesResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_liquidityincentive_query, 13);

/**
 * Query defines the gRPC querier service.
 *
 * @generated from service sunrise.liquidityincentive.Query
 */
export const Query: GenService<{
  /**
   * Parameters queries the parameters of the module.
   *
   * @generated from rpc sunrise.liquidityincentive.Query.Params
   */
  params: {
    methodKind: "unary";
    input: typeof QueryParamsRequestSchema;
    output: typeof QueryParamsResponseSchema;
  },
  /**
   * Epoch
   *
   * @generated from rpc sunrise.liquidityincentive.Query.Epoch
   */
  epoch: {
    methodKind: "unary";
    input: typeof QueryEpochRequestSchema;
    output: typeof QueryEpochResponseSchema;
  },
  /**
   * Epochs
   *
   * @generated from rpc sunrise.liquidityincentive.Query.Epochs
   */
  epochs: {
    methodKind: "unary";
    input: typeof QueryEpochsRequestSchema;
    output: typeof QueryEpochsResponseSchema;
  },
  /**
   * Gauge
   *
   * @generated from rpc sunrise.liquidityincentive.Query.Gauge
   */
  gauge: {
    methodKind: "unary";
    input: typeof QueryGaugeRequestSchema;
    output: typeof QueryGaugeResponseSchema;
  },
  /**
   * Gauges
   *
   * @generated from rpc sunrise.liquidityincentive.Query.Gauges
   */
  gauges: {
    methodKind: "unary";
    input: typeof QueryGaugesRequestSchema;
    output: typeof QueryGaugesResponseSchema;
  },
  /**
   * Vote
   *
   * @generated from rpc sunrise.liquidityincentive.Query.Vote
   */
  vote: {
    methodKind: "unary";
    input: typeof QueryVoteRequestSchema;
    output: typeof QueryVoteResponseSchema;
  },
  /**
   * Votes
   *
   * @generated from rpc sunrise.liquidityincentive.Query.Votes
   */
  votes: {
    methodKind: "unary";
    input: typeof QueryVotesRequestSchema;
    output: typeof QueryVotesResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_sunrise_liquidityincentive_query, 0);

