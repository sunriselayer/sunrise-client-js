// @generated by protoc-gen-es v2.2.2 with parameter "target=ts"
// @generated from file sunrise/liquidityincentive/tx.proto (package sunrise.liquidityincentive, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_amino_amino } from "../../amino/amino_pb";
import { file_cosmos_msg_v1_msg } from "../../cosmos/msg/v1/msg_pb";
import { file_cosmos_proto_cosmos } from "../../cosmos_proto/cosmos_pb";
import { file_gogoproto_gogo } from "../../gogoproto/gogo_pb";
import type { Params } from "./params_pb";
import { file_sunrise_liquidityincentive_params } from "./params_pb";
import type { PoolWeight } from "./gauge_pb";
import { file_sunrise_liquidityincentive_gauge } from "./gauge_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file sunrise/liquidityincentive/tx.proto.
 */
export const file_sunrise_liquidityincentive_tx: GenFile = /*@__PURE__*/
  fileDesc("CiNzdW5yaXNlL2xpcXVpZGl0eWluY2VudGl2ZS90eC5wcm90bxIac3VucmlzZS5saXF1aWRpdHlpbmNlbnRpdmUivgEKD01zZ1VwZGF0ZVBhcmFtcxIrCglhdXRob3JpdHkYASABKAlCGNK0LRRjb3Ntb3MuQWRkcmVzc1N0cmluZxI9CgZwYXJhbXMYAiABKAsyIi5zdW5yaXNlLmxpcXVpZGl0eWluY2VudGl2ZS5QYXJhbXNCCcjeHwCo57AqATo/guewKglhdXRob3JpdHmK57AqLHN1bnJpc2UveC9saXF1aWRpdHlpbmNlbnRpdmUvTXNnVXBkYXRlUGFyYW1zIhkKF01zZ1VwZGF0ZVBhcmFtc1Jlc3BvbnNlImoKDE1zZ1ZvdGVHYXVnZRIOCgZzZW5kZXIYASABKAkSPQoHd2VpZ2h0cxgCIAMoCzImLnN1bnJpc2UubGlxdWlkaXR5aW5jZW50aXZlLlBvb2xXZWlnaHRCBMjeHwA6C4LnsCoGc2VuZGVyIhYKFE1zZ1ZvdGVHYXVnZVJlc3BvbnNlIjQKFU1zZ0NvbGxlY3RWb3RlUmV3YXJkcxIOCgZzZW5kZXIYASABKAk6C4LnsCoGc2VuZGVyIh8KHU1zZ0NvbGxlY3RWb3RlUmV3YXJkc1Jlc3BvbnNlMuwCCgNNc2cScAoMVXBkYXRlUGFyYW1zEisuc3VucmlzZS5saXF1aWRpdHlpbmNlbnRpdmUuTXNnVXBkYXRlUGFyYW1zGjMuc3VucmlzZS5saXF1aWRpdHlpbmNlbnRpdmUuTXNnVXBkYXRlUGFyYW1zUmVzcG9uc2USZwoJVm90ZUdhdWdlEiguc3VucmlzZS5saXF1aWRpdHlpbmNlbnRpdmUuTXNnVm90ZUdhdWdlGjAuc3VucmlzZS5saXF1aWRpdHlpbmNlbnRpdmUuTXNnVm90ZUdhdWdlUmVzcG9uc2USggEKEkNvbGxlY3RWb3RlUmV3YXJkcxIxLnN1bnJpc2UubGlxdWlkaXR5aW5jZW50aXZlLk1zZ0NvbGxlY3RWb3RlUmV3YXJkcxo5LnN1bnJpc2UubGlxdWlkaXR5aW5jZW50aXZlLk1zZ0NvbGxlY3RWb3RlUmV3YXJkc1Jlc3BvbnNlGgWA57AqAULuAQoeY29tLnN1bnJpc2UubGlxdWlkaXR5aW5jZW50aXZlQgdUeFByb3RvUAFaOmdpdGh1Yi5jb20vc3VucmlzZWxheWVyL3N1bnJpc2UveC9saXF1aWRpdHlpbmNlbnRpdmUvdHlwZXOiAgNTTFiqAhpTdW5yaXNlLkxpcXVpZGl0eWluY2VudGl2ZcoCGlN1bnJpc2VcTGlxdWlkaXR5aW5jZW50aXZl4gImU3VucmlzZVxMaXF1aWRpdHlpbmNlbnRpdmVcR1BCTWV0YWRhdGHqAhtTdW5yaXNlOjpMaXF1aWRpdHlpbmNlbnRpdmViBnByb3RvMw", [file_amino_amino, file_cosmos_msg_v1_msg, file_cosmos_proto_cosmos, file_gogoproto_gogo, file_sunrise_liquidityincentive_params, file_sunrise_liquidityincentive_gauge]);

/**
 * MsgUpdateParams is the Msg/UpdateParams request type.
 *
 * @generated from message sunrise.liquidityincentive.MsgUpdateParams
 */
export type MsgUpdateParams = Message<"sunrise.liquidityincentive.MsgUpdateParams"> & {
  /**
   * authority is the address that controls the module (defaults to x/gov unless
   * overwritten).
   *
   * @generated from field: string authority = 1;
   */
  authority: string;

  /**
   * NOTE: All parameters must be supplied.
   *
   * @generated from field: sunrise.liquidityincentive.Params params = 2;
   */
  params?: Params;
};

/**
 * Describes the message sunrise.liquidityincentive.MsgUpdateParams.
 * Use `create(MsgUpdateParamsSchema)` to create a new message.
 */
export const MsgUpdateParamsSchema: GenMessage<MsgUpdateParams> = /*@__PURE__*/
  messageDesc(file_sunrise_liquidityincentive_tx, 0);

/**
 * MsgUpdateParamsResponse defines the response structure for executing a
 * MsgUpdateParams message.
 *
 * @generated from message sunrise.liquidityincentive.MsgUpdateParamsResponse
 */
export type MsgUpdateParamsResponse = Message<"sunrise.liquidityincentive.MsgUpdateParamsResponse"> & {
};

/**
 * Describes the message sunrise.liquidityincentive.MsgUpdateParamsResponse.
 * Use `create(MsgUpdateParamsResponseSchema)` to create a new message.
 */
export const MsgUpdateParamsResponseSchema: GenMessage<MsgUpdateParamsResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_liquidityincentive_tx, 1);

/**
 * @generated from message sunrise.liquidityincentive.MsgVoteGauge
 */
export type MsgVoteGauge = Message<"sunrise.liquidityincentive.MsgVoteGauge"> & {
  /**
   * @generated from field: string sender = 1;
   */
  sender: string;

  /**
   * @generated from field: repeated sunrise.liquidityincentive.PoolWeight weights = 2;
   */
  weights: PoolWeight[];
};

/**
 * Describes the message sunrise.liquidityincentive.MsgVoteGauge.
 * Use `create(MsgVoteGaugeSchema)` to create a new message.
 */
export const MsgVoteGaugeSchema: GenMessage<MsgVoteGauge> = /*@__PURE__*/
  messageDesc(file_sunrise_liquidityincentive_tx, 2);

/**
 * @generated from message sunrise.liquidityincentive.MsgVoteGaugeResponse
 */
export type MsgVoteGaugeResponse = Message<"sunrise.liquidityincentive.MsgVoteGaugeResponse"> & {
};

/**
 * Describes the message sunrise.liquidityincentive.MsgVoteGaugeResponse.
 * Use `create(MsgVoteGaugeResponseSchema)` to create a new message.
 */
export const MsgVoteGaugeResponseSchema: GenMessage<MsgVoteGaugeResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_liquidityincentive_tx, 3);

/**
 * @generated from message sunrise.liquidityincentive.MsgCollectVoteRewards
 */
export type MsgCollectVoteRewards = Message<"sunrise.liquidityincentive.MsgCollectVoteRewards"> & {
  /**
   * @generated from field: string sender = 1;
   */
  sender: string;
};

/**
 * Describes the message sunrise.liquidityincentive.MsgCollectVoteRewards.
 * Use `create(MsgCollectVoteRewardsSchema)` to create a new message.
 */
export const MsgCollectVoteRewardsSchema: GenMessage<MsgCollectVoteRewards> = /*@__PURE__*/
  messageDesc(file_sunrise_liquidityincentive_tx, 4);

/**
 * @generated from message sunrise.liquidityincentive.MsgCollectVoteRewardsResponse
 */
export type MsgCollectVoteRewardsResponse = Message<"sunrise.liquidityincentive.MsgCollectVoteRewardsResponse"> & {
};

/**
 * Describes the message sunrise.liquidityincentive.MsgCollectVoteRewardsResponse.
 * Use `create(MsgCollectVoteRewardsResponseSchema)` to create a new message.
 */
export const MsgCollectVoteRewardsResponseSchema: GenMessage<MsgCollectVoteRewardsResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_liquidityincentive_tx, 5);

/**
 * Msg defines the Msg service.
 *
 * @generated from service sunrise.liquidityincentive.Msg
 */
export const Msg: GenService<{
  /**
   * UpdateParams defines a (governance) operation for updating the module
   * parameters. The authority defaults to the x/gov module account.
   *
   * @generated from rpc sunrise.liquidityincentive.Msg.UpdateParams
   */
  updateParams: {
    methodKind: "unary";
    input: typeof MsgUpdateParamsSchema;
    output: typeof MsgUpdateParamsResponseSchema;
  },
  /**
   * @generated from rpc sunrise.liquidityincentive.Msg.VoteGauge
   */
  voteGauge: {
    methodKind: "unary";
    input: typeof MsgVoteGaugeSchema;
    output: typeof MsgVoteGaugeResponseSchema;
  },
  /**
   * @generated from rpc sunrise.liquidityincentive.Msg.CollectVoteRewards
   */
  collectVoteRewards: {
    methodKind: "unary";
    input: typeof MsgCollectVoteRewardsSchema;
    output: typeof MsgCollectVoteRewardsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_sunrise_liquidityincentive_tx, 0);

