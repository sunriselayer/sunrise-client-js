// @generated by protoc-gen-es v2.2.2 with parameter "target=ts"
// @generated from file sunrise/liquidityincentive/tx.proto (package sunrise.liquidityincentive, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_cosmos_msg_v1_msg } from "../../cosmos/msg/v1/msg_pb";
import { file_cosmos_proto_cosmos } from "../../cosmos_proto/cosmos_pb";
import { file_gogoproto_gogo } from "../../gogoproto/gogo_pb";
import type { PoolWeight } from "./gauge_pb";
import { file_sunrise_liquidityincentive_gauge } from "./gauge_pb";
import type { Params } from "./params_pb";
import { file_sunrise_liquidityincentive_params } from "./params_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file sunrise/liquidityincentive/tx.proto.
 */
export const file_sunrise_liquidityincentive_tx: GenFile = /*@__PURE__*/
  fileDesc("CiNzdW5yaXNlL2xpcXVpZGl0eWluY2VudGl2ZS90eC5wcm90bxIac3VucmlzZS5saXF1aWRpdHlpbmNlbnRpdmUiiAEKD01zZ1VwZGF0ZVBhcmFtcxIrCglhdXRob3JpdHkYASABKAlCGNK0LRRjb3Ntb3MuQWRkcmVzc1N0cmluZxI4CgZwYXJhbXMYAiABKAsyIi5zdW5yaXNlLmxpcXVpZGl0eWluY2VudGl2ZS5QYXJhbXNCBMjeHwA6DoLnsCoJYXV0aG9yaXR5IhkKF01zZ1VwZGF0ZVBhcmFtc1Jlc3BvbnNlIokBCgxNc2dWb3RlR2F1Z2USKAoGc2VuZGVyGAEgASgJQhjStC0UY29zbW9zLkFkZHJlc3NTdHJpbmcSQgoMcG9vbF93ZWlnaHRzGAIgAygLMiYuc3VucmlzZS5saXF1aWRpdHlpbmNlbnRpdmUuUG9vbFdlaWdodEIEyN4fADoLguewKgZzZW5kZXIiFgoUTXNnVm90ZUdhdWdlUmVzcG9uc2UiTgoVTXNnQ29sbGVjdFZvdGVSZXdhcmRzEigKBnNlbmRlchgBIAEoCUIY0rQtFGNvc21vcy5BZGRyZXNzU3RyaW5nOguC57AqBnNlbmRlciIfCh1Nc2dDb2xsZWN0Vm90ZVJld2FyZHNSZXNwb25zZTLsAgoDTXNnEnAKDFVwZGF0ZVBhcmFtcxIrLnN1bnJpc2UubGlxdWlkaXR5aW5jZW50aXZlLk1zZ1VwZGF0ZVBhcmFtcxozLnN1bnJpc2UubGlxdWlkaXR5aW5jZW50aXZlLk1zZ1VwZGF0ZVBhcmFtc1Jlc3BvbnNlEmcKCVZvdGVHYXVnZRIoLnN1bnJpc2UubGlxdWlkaXR5aW5jZW50aXZlLk1zZ1ZvdGVHYXVnZRowLnN1bnJpc2UubGlxdWlkaXR5aW5jZW50aXZlLk1zZ1ZvdGVHYXVnZVJlc3BvbnNlEoIBChJDb2xsZWN0Vm90ZVJld2FyZHMSMS5zdW5yaXNlLmxpcXVpZGl0eWluY2VudGl2ZS5Nc2dDb2xsZWN0Vm90ZVJld2FyZHMaOS5zdW5yaXNlLmxpcXVpZGl0eWluY2VudGl2ZS5Nc2dDb2xsZWN0Vm90ZVJld2FyZHNSZXNwb25zZRoFgOewKgFC7gEKHmNvbS5zdW5yaXNlLmxpcXVpZGl0eWluY2VudGl2ZUIHVHhQcm90b1ABWjpnaXRodWIuY29tL3N1bnJpc2VsYXllci9zdW5yaXNlL3gvbGlxdWlkaXR5aW5jZW50aXZlL3R5cGVzogIDU0xYqgIaU3VucmlzZS5MaXF1aWRpdHlpbmNlbnRpdmXKAhpTdW5yaXNlXExpcXVpZGl0eWluY2VudGl2ZeICJlN1bnJpc2VcTGlxdWlkaXR5aW5jZW50aXZlXEdQQk1ldGFkYXRh6gIbU3VucmlzZTo6TGlxdWlkaXR5aW5jZW50aXZlYgZwcm90bzM", [file_cosmos_msg_v1_msg, file_cosmos_proto_cosmos, file_gogoproto_gogo, file_sunrise_liquidityincentive_gauge, file_sunrise_liquidityincentive_params]);

/**
 * MsgUpdateParams is the Msg/UpdateParams request type.
 *
 * @generated from message sunrise.liquidityincentive.MsgUpdateParams
 */
export type MsgUpdateParams = Message<"sunrise.liquidityincentive.MsgUpdateParams"> & {
  /**
   * authority is the address that controls the module (defaults to x/gov unless
   * overwritten).
   *
   * @generated from field: string authority = 1;
   */
  authority: string;

  /**
   * NOTE: All parameters must be supplied.
   *
   * @generated from field: sunrise.liquidityincentive.Params params = 2;
   */
  params?: Params;
};

/**
 * Describes the message sunrise.liquidityincentive.MsgUpdateParams.
 * Use `create(MsgUpdateParamsSchema)` to create a new message.
 */
export const MsgUpdateParamsSchema: GenMessage<MsgUpdateParams> = /*@__PURE__*/
  messageDesc(file_sunrise_liquidityincentive_tx, 0);

/**
 * MsgUpdateParamsResponse defines the response structure for executing a
 * MsgUpdateParams message.
 *
 * @generated from message sunrise.liquidityincentive.MsgUpdateParamsResponse
 */
export type MsgUpdateParamsResponse = Message<"sunrise.liquidityincentive.MsgUpdateParamsResponse"> & {
};

/**
 * Describes the message sunrise.liquidityincentive.MsgUpdateParamsResponse.
 * Use `create(MsgUpdateParamsResponseSchema)` to create a new message.
 */
export const MsgUpdateParamsResponseSchema: GenMessage<MsgUpdateParamsResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_liquidityincentive_tx, 1);

/**
 * MsgVoteGauge
 *
 * @generated from message sunrise.liquidityincentive.MsgVoteGauge
 */
export type MsgVoteGauge = Message<"sunrise.liquidityincentive.MsgVoteGauge"> & {
  /**
   * @generated from field: string sender = 1;
   */
  sender: string;

  /**
   * @generated from field: repeated sunrise.liquidityincentive.PoolWeight pool_weights = 2;
   */
  poolWeights: PoolWeight[];
};

/**
 * Describes the message sunrise.liquidityincentive.MsgVoteGauge.
 * Use `create(MsgVoteGaugeSchema)` to create a new message.
 */
export const MsgVoteGaugeSchema: GenMessage<MsgVoteGauge> = /*@__PURE__*/
  messageDesc(file_sunrise_liquidityincentive_tx, 2);

/**
 * MsgVoteGaugeResponse
 *
 * @generated from message sunrise.liquidityincentive.MsgVoteGaugeResponse
 */
export type MsgVoteGaugeResponse = Message<"sunrise.liquidityincentive.MsgVoteGaugeResponse"> & {
};

/**
 * Describes the message sunrise.liquidityincentive.MsgVoteGaugeResponse.
 * Use `create(MsgVoteGaugeResponseSchema)` to create a new message.
 */
export const MsgVoteGaugeResponseSchema: GenMessage<MsgVoteGaugeResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_liquidityincentive_tx, 3);

/**
 * MsgCollectVoteRewards
 *
 * @generated from message sunrise.liquidityincentive.MsgCollectVoteRewards
 */
export type MsgCollectVoteRewards = Message<"sunrise.liquidityincentive.MsgCollectVoteRewards"> & {
  /**
   * @generated from field: string sender = 1;
   */
  sender: string;
};

/**
 * Describes the message sunrise.liquidityincentive.MsgCollectVoteRewards.
 * Use `create(MsgCollectVoteRewardsSchema)` to create a new message.
 */
export const MsgCollectVoteRewardsSchema: GenMessage<MsgCollectVoteRewards> = /*@__PURE__*/
  messageDesc(file_sunrise_liquidityincentive_tx, 4);

/**
 * MsgCollectVoteRewardsResponse
 *
 * @generated from message sunrise.liquidityincentive.MsgCollectVoteRewardsResponse
 */
export type MsgCollectVoteRewardsResponse = Message<"sunrise.liquidityincentive.MsgCollectVoteRewardsResponse"> & {
};

/**
 * Describes the message sunrise.liquidityincentive.MsgCollectVoteRewardsResponse.
 * Use `create(MsgCollectVoteRewardsResponseSchema)` to create a new message.
 */
export const MsgCollectVoteRewardsResponseSchema: GenMessage<MsgCollectVoteRewardsResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_liquidityincentive_tx, 5);

/**
 * Msg defines the Msg service.
 *
 * @generated from service sunrise.liquidityincentive.Msg
 */
export const Msg: GenService<{
  /**
   * UpdateParams defines a (governance) operation for updating the module
   * parameters. The authority defaults to the x/gov module account.
   *
   * @generated from rpc sunrise.liquidityincentive.Msg.UpdateParams
   */
  updateParams: {
    methodKind: "unary";
    input: typeof MsgUpdateParamsSchema;
    output: typeof MsgUpdateParamsResponseSchema;
  },
  /**
   * VoteGauge
   *
   * @generated from rpc sunrise.liquidityincentive.Msg.VoteGauge
   */
  voteGauge: {
    methodKind: "unary";
    input: typeof MsgVoteGaugeSchema;
    output: typeof MsgVoteGaugeResponseSchema;
  },
  /**
   * CollectVoteRewards
   *
   * @generated from rpc sunrise.liquidityincentive.Msg.CollectVoteRewards
   */
  collectVoteRewards: {
    methodKind: "unary";
    input: typeof MsgCollectVoteRewardsSchema;
    output: typeof MsgCollectVoteRewardsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_sunrise_liquidityincentive_tx, 0);

