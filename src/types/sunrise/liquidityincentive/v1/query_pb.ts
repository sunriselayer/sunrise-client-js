// @generated by protoc-gen-es v2.2.2 with parameter "target=ts"
// @generated from file sunrise/liquidityincentive/v1/query.proto (package sunrise.liquidityincentive.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { PageRequest, PageResponse } from "../../../cosmos/base/query/v1beta1/pagination_pb";
import { file_cosmos_base_query_v1beta1_pagination } from "../../../cosmos/base/query/v1beta1/pagination_pb";
import { file_gogoproto_gogo } from "../../../gogoproto/gogo_pb";
import { file_google_api_annotations } from "../../../google/api/annotations_pb";
import type { Epoch } from "./epoch_pb";
import { file_sunrise_liquidityincentive_v1_epoch } from "./epoch_pb";
import type { Gauge, Vote } from "./gauge_pb";
import { file_sunrise_liquidityincentive_v1_gauge } from "./gauge_pb";
import type { Params } from "./params_pb";
import { file_sunrise_liquidityincentive_v1_params } from "./params_pb";
import type { Bribe, BribeAllocation } from "./bribe_pb";
import { file_sunrise_liquidityincentive_v1_bribe } from "./bribe_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file sunrise/liquidityincentive/v1/query.proto.
 */
export const file_sunrise_liquidityincentive_v1_query: GenFile = /*@__PURE__*/
  fileDesc("CilzdW5yaXNlL2xpcXVpZGl0eWluY2VudGl2ZS92MS9xdWVyeS5wcm90bxIdc3VucmlzZS5saXF1aWRpdHlpbmNlbnRpdmUudjEiFAoSUXVlcnlQYXJhbXNSZXF1ZXN0IlIKE1F1ZXJ5UGFyYW1zUmVzcG9uc2USOwoGcGFyYW1zGAEgASgLMiUuc3VucmlzZS5saXF1aWRpdHlpbmNlbnRpdmUudjEuUGFyYW1zQgTI3h8AIh8KEVF1ZXJ5RXBvY2hSZXF1ZXN0EgoKAmlkGAEgASgEIk8KElF1ZXJ5RXBvY2hSZXNwb25zZRI5CgVlcG9jaBgBIAEoCzIkLnN1bnJpc2UubGlxdWlkaXR5aW5jZW50aXZlLnYxLkVwb2NoQgTI3h8AIlAKElF1ZXJ5RXBvY2hzUmVxdWVzdBI6CgpwYWdpbmF0aW9uGAEgASgLMiYuY29zbW9zLmJhc2UucXVlcnkudjFiZXRhMS5QYWdlUmVxdWVzdCKOAQoTUXVlcnlFcG9jaHNSZXNwb25zZRI6CgZlcG9jaHMYASADKAsyJC5zdW5yaXNlLmxpcXVpZGl0eWluY2VudGl2ZS52MS5FcG9jaEIEyN4fABI7CgpwYWdpbmF0aW9uGAIgASgLMicuY29zbW9zLmJhc2UucXVlcnkudjFiZXRhMS5QYWdlUmVzcG9uc2UiPwoRUXVlcnlHYXVnZVJlcXVlc3QSGQoRcHJldmlvdXNfZXBvY2hfaWQYASABKAQSDwoHcG9vbF9pZBgCIAEoBCJPChJRdWVyeUdhdWdlUmVzcG9uc2USOQoFZ2F1Z2UYASABKAsyJC5zdW5yaXNlLmxpcXVpZGl0eWluY2VudGl2ZS52MS5HYXVnZUIEyN4fACJrChJRdWVyeUdhdWdlc1JlcXVlc3QSGQoRcHJldmlvdXNfZXBvY2hfaWQYASABKAQSOgoKcGFnaW5hdGlvbhgCIAEoCzImLmNvc21vcy5iYXNlLnF1ZXJ5LnYxYmV0YTEuUGFnZVJlcXVlc3QijQEKE1F1ZXJ5R2F1Z2VzUmVzcG9uc2USOQoFZ2F1Z2UYASADKAsyJC5zdW5yaXNlLmxpcXVpZGl0eWluY2VudGl2ZS52MS5HYXVnZUIEyN4fABI7CgpwYWdpbmF0aW9uGAIgASgLMicuY29zbW9zLmJhc2UucXVlcnkudjFiZXRhMS5QYWdlUmVzcG9uc2UiIwoQUXVlcnlWb3RlUmVxdWVzdBIPCgdhZGRyZXNzGAEgASgJIkwKEVF1ZXJ5Vm90ZVJlc3BvbnNlEjcKBHZvdGUYASABKAsyIy5zdW5yaXNlLmxpcXVpZGl0eWluY2VudGl2ZS52MS5Wb3RlQgTI3h8AIk8KEVF1ZXJ5Vm90ZXNSZXF1ZXN0EjoKCnBhZ2luYXRpb24YASABKAsyJi5jb3Ntb3MuYmFzZS5xdWVyeS52MWJldGExLlBhZ2VSZXF1ZXN0IosBChJRdWVyeVZvdGVzUmVzcG9uc2USOAoFdm90ZXMYASADKAsyIy5zdW5yaXNlLmxpcXVpZGl0eWluY2VudGl2ZS52MS5Wb3RlQgTI3h8AEjsKCnBhZ2luYXRpb24YAiABKAsyJy5jb3Ntb3MuYmFzZS5xdWVyeS52MWJldGExLlBhZ2VSZXNwb25zZSJQChJRdWVyeUJyaWJlc1JlcXVlc3QSOgoKcGFnaW5hdGlvbhgBIAEoCzImLmNvc21vcy5iYXNlLnF1ZXJ5LnYxYmV0YTEuUGFnZVJlcXVlc3QijgEKE1F1ZXJ5QnJpYmVzUmVzcG9uc2USOgoGYnJpYmVzGAEgAygLMiQuc3VucmlzZS5saXF1aWRpdHlpbmNlbnRpdmUudjEuQnJpYmVCBMjeHwASOwoKcGFnaW5hdGlvbhgCIAEoCzInLmNvc21vcy5iYXNlLnF1ZXJ5LnYxYmV0YTEuUGFnZVJlc3BvbnNlIh8KEVF1ZXJ5QnJpYmVSZXF1ZXN0EgoKAmlkGAEgASgEIk8KElF1ZXJ5QnJpYmVSZXNwb25zZRI5CgVicmliZRgBIAEoCzIkLnN1bnJpc2UubGlxdWlkaXR5aW5jZW50aXZlLnYxLkJyaWJlQgTI3h8AIi8KG1F1ZXJ5QnJpYmVzQnlFcG9jaElkUmVxdWVzdBIQCghlcG9jaF9pZBgBIAEoBCKXAQocUXVlcnlCcmliZXNCeUVwb2NoSWRSZXNwb25zZRI6CgZicmliZXMYASADKAsyJC5zdW5yaXNlLmxpcXVpZGl0eWluY2VudGl2ZS52MS5CcmliZUIEyN4fABI7CgpwYWdpbmF0aW9uGAIgASgLMicuY29zbW9zLmJhc2UucXVlcnkudjFiZXRhMS5QYWdlUmVzcG9uc2UiLQoaUXVlcnlCcmliZXNCeVBvb2xJZFJlcXVlc3QSDwoHcG9vbF9pZBgBIAEoBCKWAQobUXVlcnlCcmliZXNCeVBvb2xJZFJlc3BvbnNlEjoKBmJyaWJlcxgBIAMoCzIkLnN1bnJpc2UubGlxdWlkaXR5aW5jZW50aXZlLnYxLkJyaWJlQgTI3h8AEjsKCnBhZ2luYXRpb24YAiABKAsyJy5jb3Ntb3MuYmFzZS5xdWVyeS52MWJldGExLlBhZ2VSZXNwb25zZSJHCiJRdWVyeUJyaWJlc0J5RXBvY2hBbmRQb29sSWRSZXF1ZXN0EhAKCGVwb2NoX2lkGAEgASgEEg8KB3Bvb2xfaWQYAiABKAQingEKI1F1ZXJ5QnJpYmVzQnlFcG9jaEFuZFBvb2xJZFJlc3BvbnNlEjoKBmJyaWJlcxgBIAMoCzIkLnN1bnJpc2UubGlxdWlkaXR5aW5jZW50aXZlLnYxLkJyaWJlQgTI3h8AEjsKCnBhZ2luYXRpb24YAiABKAsyJy5jb3Ntb3MuYmFzZS5xdWVyeS52MWJldGExLlBhZ2VSZXNwb25zZSJaChxRdWVyeUJyaWJlQWxsb2NhdGlvbnNSZXF1ZXN0EjoKCnBhZ2luYXRpb24YASABKAsyJi5jb3Ntb3MuYmFzZS5xdWVyeS52MWJldGExLlBhZ2VSZXF1ZXN0Iq0BCh1RdWVyeUJyaWJlQWxsb2NhdGlvbnNSZXNwb25zZRJPChFicmliZV9hbGxvY2F0aW9ucxgBIAMoCzIuLnN1bnJpc2UubGlxdWlkaXR5aW5jZW50aXZlLnYxLkJyaWJlQWxsb2NhdGlvbkIEyN4fABI7CgpwYWdpbmF0aW9uGAIgASgLMicuY29zbW9zLmJhc2UucXVlcnkudjFiZXRhMS5QYWdlUmVzcG9uc2UiOAolUXVlcnlCcmliZUFsbG9jYXRpb25zQnlBZGRyZXNzUmVxdWVzdBIPCgdhZGRyZXNzGAEgASgJInkKJlF1ZXJ5QnJpYmVBbGxvY2F0aW9uc0J5QWRkcmVzc1Jlc3BvbnNlEk8KEWJyaWJlX2FsbG9jYXRpb25zGAEgAygLMi4uc3VucmlzZS5saXF1aWRpdHlpbmNlbnRpdmUudjEuQnJpYmVBbGxvY2F0aW9uQgTI3h8AIlEKG1F1ZXJ5QnJpYmVBbGxvY2F0aW9uUmVxdWVzdBIPCgdhZGRyZXNzGAEgASgJEhAKCGVwb2NoX2lkGAIgASgEEg8KB3Bvb2xfaWQYAyABKAQibgocUXVlcnlCcmliZUFsbG9jYXRpb25SZXNwb25zZRJOChBicmliZV9hbGxvY2F0aW9uGAEgASgLMi4uc3VucmlzZS5saXF1aWRpdHlpbmNlbnRpdmUudjEuQnJpYmVBbGxvY2F0aW9uQgTI3h8AMpUWCgVRdWVyeRKeAQoGUGFyYW1zEjEuc3VucmlzZS5saXF1aWRpdHlpbmNlbnRpdmUudjEuUXVlcnlQYXJhbXNSZXF1ZXN0GjIuc3VucmlzZS5saXF1aWRpdHlpbmNlbnRpdmUudjEuUXVlcnlQYXJhbXNSZXNwb25zZSItgtPkkwInEiUvc3VucmlzZS9saXF1aWRpdHlpbmNlbnRpdmUvdjEvcGFyYW1zEqABCgVFcG9jaBIwLnN1bnJpc2UubGlxdWlkaXR5aW5jZW50aXZlLnYxLlF1ZXJ5RXBvY2hSZXF1ZXN0GjEuc3VucmlzZS5saXF1aWRpdHlpbmNlbnRpdmUudjEuUXVlcnlFcG9jaFJlc3BvbnNlIjKC0+STAiwSKi9zdW5yaXNlL2xpcXVpZGl0eWluY2VudGl2ZS92MS9lcG9jaHMve2lkfRKeAQoGRXBvY2hzEjEuc3VucmlzZS5saXF1aWRpdHlpbmNlbnRpdmUudjEuUXVlcnlFcG9jaHNSZXF1ZXN0GjIuc3VucmlzZS5saXF1aWRpdHlpbmNlbnRpdmUudjEuUXVlcnlFcG9jaHNSZXNwb25zZSItgtPkkwInEiUvc3VucmlzZS9saXF1aWRpdHlpbmNlbnRpdmUvdjEvZXBvY2hzEsABCgVHYXVnZRIwLnN1bnJpc2UubGlxdWlkaXR5aW5jZW50aXZlLnYxLlF1ZXJ5R2F1Z2VSZXF1ZXN0GjEuc3VucmlzZS5saXF1aWRpdHlpbmNlbnRpdmUudjEuUXVlcnlHYXVnZVJlc3BvbnNlIlKC0+STAkwSSi9zdW5yaXNlL2xpcXVpZGl0eWluY2VudGl2ZS92MS9lcG9jaHMve3ByZXZpb3VzX2Vwb2NoX2lkfS9nYXVnZXMve3Bvb2xfaWR9ErkBCgZHYXVnZXMSMS5zdW5yaXNlLmxpcXVpZGl0eWluY2VudGl2ZS52MS5RdWVyeUdhdWdlc1JlcXVlc3QaMi5zdW5yaXNlLmxpcXVpZGl0eWluY2VudGl2ZS52MS5RdWVyeUdhdWdlc1Jlc3BvbnNlIkiC0+STAkISQC9zdW5yaXNlL2xpcXVpZGl0eWluY2VudGl2ZS92MS9lcG9jaHMve3ByZXZpb3VzX2Vwb2NoX2lkfS9nYXVnZXMSoQEKBFZvdGUSLy5zdW5yaXNlLmxpcXVpZGl0eWluY2VudGl2ZS52MS5RdWVyeVZvdGVSZXF1ZXN0GjAuc3VucmlzZS5saXF1aWRpdHlpbmNlbnRpdmUudjEuUXVlcnlWb3RlUmVzcG9uc2UiNoLT5JMCMBIuL3N1bnJpc2UvbGlxdWlkaXR5aW5jZW50aXZlL3YxL3ZvdGVzL3thZGRyZXNzfRKaAQoFVm90ZXMSMC5zdW5yaXNlLmxpcXVpZGl0eWluY2VudGl2ZS52MS5RdWVyeVZvdGVzUmVxdWVzdBoxLnN1bnJpc2UubGlxdWlkaXR5aW5jZW50aXZlLnYxLlF1ZXJ5Vm90ZXNSZXNwb25zZSIsgtPkkwImEiQvc3VucmlzZS9saXF1aWRpdHlpbmNlbnRpdmUvdjEvdm90ZXMSngEKBkJyaWJlcxIxLnN1bnJpc2UubGlxdWlkaXR5aW5jZW50aXZlLnYxLlF1ZXJ5QnJpYmVzUmVxdWVzdBoyLnN1bnJpc2UubGlxdWlkaXR5aW5jZW50aXZlLnYxLlF1ZXJ5QnJpYmVzUmVzcG9uc2UiLYLT5JMCJxIlL3N1bnJpc2UvbGlxdWlkaXR5aW5jZW50aXZlL3YxL2JyaWJlcxKgAQoFQnJpYmUSMC5zdW5yaXNlLmxpcXVpZGl0eWluY2VudGl2ZS52MS5RdWVyeUJyaWJlUmVxdWVzdBoxLnN1bnJpc2UubGlxdWlkaXR5aW5jZW50aXZlLnYxLlF1ZXJ5QnJpYmVSZXNwb25zZSIygtPkkwIsEiovc3VucmlzZS9saXF1aWRpdHlpbmNlbnRpdmUvdjEvYnJpYmVzL3tpZH0SygEKD0JyaWJlc0J5RXBvY2hJZBI6LnN1bnJpc2UubGlxdWlkaXR5aW5jZW50aXZlLnYxLlF1ZXJ5QnJpYmVzQnlFcG9jaElkUmVxdWVzdBo7LnN1bnJpc2UubGlxdWlkaXR5aW5jZW50aXZlLnYxLlF1ZXJ5QnJpYmVzQnlFcG9jaElkUmVzcG9uc2UiPoLT5JMCOBI2L3N1bnJpc2UvbGlxdWlkaXR5aW5jZW50aXZlL3YxL2JyaWJlcy9lcG9jaC97ZXBvY2hfaWR9EsUBCg5CcmliZXNCeVBvb2xJZBI5LnN1bnJpc2UubGlxdWlkaXR5aW5jZW50aXZlLnYxLlF1ZXJ5QnJpYmVzQnlQb29sSWRSZXF1ZXN0Gjouc3VucmlzZS5saXF1aWRpdHlpbmNlbnRpdmUudjEuUXVlcnlCcmliZXNCeVBvb2xJZFJlc3BvbnNlIjyC0+STAjYSNC9zdW5yaXNlL2xpcXVpZGl0eWluY2VudGl2ZS92MS9icmliZXMvcG9vbC97cG9vbF9pZH0S7gEKFkJyaWJlc0J5RXBvY2hBbmRQb29sSWQSQS5zdW5yaXNlLmxpcXVpZGl0eWluY2VudGl2ZS52MS5RdWVyeUJyaWJlc0J5RXBvY2hBbmRQb29sSWRSZXF1ZXN0GkIuc3VucmlzZS5saXF1aWRpdHlpbmNlbnRpdmUudjEuUXVlcnlCcmliZXNCeUVwb2NoQW5kUG9vbElkUmVzcG9uc2UiTYLT5JMCRxJFL3N1bnJpc2UvbGlxdWlkaXR5aW5jZW50aXZlL3YxL2JyaWJlcy9lcG9jaC97ZXBvY2hfaWR9L3Bvb2wve3Bvb2xfaWR9EscBChBCcmliZUFsbG9jYXRpb25zEjsuc3VucmlzZS5saXF1aWRpdHlpbmNlbnRpdmUudjEuUXVlcnlCcmliZUFsbG9jYXRpb25zUmVxdWVzdBo8LnN1bnJpc2UubGlxdWlkaXR5aW5jZW50aXZlLnYxLlF1ZXJ5QnJpYmVBbGxvY2F0aW9uc1Jlc3BvbnNlIjiC0+STAjISMC9zdW5yaXNlL2xpcXVpZGl0eWluY2VudGl2ZS92MS9icmliZS1hbGxvY2F0aW9ucxLsAQoZQnJpYmVBbGxvY2F0aW9uc0J5QWRkcmVzcxJELnN1bnJpc2UubGlxdWlkaXR5aW5jZW50aXZlLnYxLlF1ZXJ5QnJpYmVBbGxvY2F0aW9uc0J5QWRkcmVzc1JlcXVlc3QaRS5zdW5yaXNlLmxpcXVpZGl0eWluY2VudGl2ZS52MS5RdWVyeUJyaWJlQWxsb2NhdGlvbnNCeUFkZHJlc3NSZXNwb25zZSJCgtPkkwI8Ejovc3VucmlzZS9saXF1aWRpdHlpbmNlbnRpdmUvdjEvYnJpYmVfYWxsb2NhdGlvbnMve2FkZHJlc3N9EuMBCg9CcmliZUFsbG9jYXRpb24SOi5zdW5yaXNlLmxpcXVpZGl0eWluY2VudGl2ZS52MS5RdWVyeUJyaWJlQWxsb2NhdGlvblJlcXVlc3QaOy5zdW5yaXNlLmxpcXVpZGl0eWluY2VudGl2ZS52MS5RdWVyeUJyaWJlQWxsb2NhdGlvblJlc3BvbnNlIleC0+STAlESTy9zdW5yaXNlL2xpcXVpZGl0eWluY2VudGl2ZS92MS9icmliZS1hbGxvY2F0aW9ucy97YWRkcmVzc30ve2Vwb2NoX2lkfS97cG9vbF9pZH1CgQIKIWNvbS5zdW5yaXNlLmxpcXVpZGl0eWluY2VudGl2ZS52MUIKUXVlcnlQcm90b1ABWjpnaXRodWIuY29tL3N1bnJpc2VsYXllci9zdW5yaXNlL3gvbGlxdWlkaXR5aW5jZW50aXZlL3R5cGVzogIDU0xYqgIdU3VucmlzZS5MaXF1aWRpdHlpbmNlbnRpdmUuVjHKAh1TdW5yaXNlXExpcXVpZGl0eWluY2VudGl2ZVxWMeICKVN1bnJpc2VcTGlxdWlkaXR5aW5jZW50aXZlXFYxXEdQQk1ldGFkYXRh6gIfU3VucmlzZTo6TGlxdWlkaXR5aW5jZW50aXZlOjpWMWIGcHJvdG8z", [file_cosmos_base_query_v1beta1_pagination, file_gogoproto_gogo, file_google_api_annotations, file_sunrise_liquidityincentive_v1_epoch, file_sunrise_liquidityincentive_v1_gauge, file_sunrise_liquidityincentive_v1_params, file_sunrise_liquidityincentive_v1_bribe]);

/**
 * QueryParamsRequest is request type for the Query/Params RPC method.
 *
 * @generated from message sunrise.liquidityincentive.v1.QueryParamsRequest
 */
export type QueryParamsRequest = Message<"sunrise.liquidityincentive.v1.QueryParamsRequest"> & {
};

/**
 * Describes the message sunrise.liquidityincentive.v1.QueryParamsRequest.
 * Use `create(QueryParamsRequestSchema)` to create a new message.
 */
export const QueryParamsRequestSchema: GenMessage<QueryParamsRequest> = /*@__PURE__*/
  messageDesc(file_sunrise_liquidityincentive_v1_query, 0);

/**
 * QueryParamsResponse is response type for the Query/Params RPC method.
 *
 * @generated from message sunrise.liquidityincentive.v1.QueryParamsResponse
 */
export type QueryParamsResponse = Message<"sunrise.liquidityincentive.v1.QueryParamsResponse"> & {
  /**
   * params holds all the parameters of this module.
   *
   * @generated from field: sunrise.liquidityincentive.v1.Params params = 1;
   */
  params?: Params;
};

/**
 * Describes the message sunrise.liquidityincentive.v1.QueryParamsResponse.
 * Use `create(QueryParamsResponseSchema)` to create a new message.
 */
export const QueryParamsResponseSchema: GenMessage<QueryParamsResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_liquidityincentive_v1_query, 1);

/**
 * QueryEpochRequest
 *
 * @generated from message sunrise.liquidityincentive.v1.QueryEpochRequest
 */
export type QueryEpochRequest = Message<"sunrise.liquidityincentive.v1.QueryEpochRequest"> & {
  /**
   * @generated from field: uint64 id = 1;
   */
  id: bigint;
};

/**
 * Describes the message sunrise.liquidityincentive.v1.QueryEpochRequest.
 * Use `create(QueryEpochRequestSchema)` to create a new message.
 */
export const QueryEpochRequestSchema: GenMessage<QueryEpochRequest> = /*@__PURE__*/
  messageDesc(file_sunrise_liquidityincentive_v1_query, 2);

/**
 * QueryEpochResponse
 *
 * @generated from message sunrise.liquidityincentive.v1.QueryEpochResponse
 */
export type QueryEpochResponse = Message<"sunrise.liquidityincentive.v1.QueryEpochResponse"> & {
  /**
   * @generated from field: sunrise.liquidityincentive.v1.Epoch epoch = 1;
   */
  epoch?: Epoch;
};

/**
 * Describes the message sunrise.liquidityincentive.v1.QueryEpochResponse.
 * Use `create(QueryEpochResponseSchema)` to create a new message.
 */
export const QueryEpochResponseSchema: GenMessage<QueryEpochResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_liquidityincentive_v1_query, 3);

/**
 * QueryEpochsRequest
 *
 * @generated from message sunrise.liquidityincentive.v1.QueryEpochsRequest
 */
export type QueryEpochsRequest = Message<"sunrise.liquidityincentive.v1.QueryEpochsRequest"> & {
  /**
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
   */
  pagination?: PageRequest;
};

/**
 * Describes the message sunrise.liquidityincentive.v1.QueryEpochsRequest.
 * Use `create(QueryEpochsRequestSchema)` to create a new message.
 */
export const QueryEpochsRequestSchema: GenMessage<QueryEpochsRequest> = /*@__PURE__*/
  messageDesc(file_sunrise_liquidityincentive_v1_query, 4);

/**
 * QueryEpochsResponse
 *
 * @generated from message sunrise.liquidityincentive.v1.QueryEpochsResponse
 */
export type QueryEpochsResponse = Message<"sunrise.liquidityincentive.v1.QueryEpochsResponse"> & {
  /**
   * @generated from field: repeated sunrise.liquidityincentive.v1.Epoch epochs = 1;
   */
  epochs: Epoch[];

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;
};

/**
 * Describes the message sunrise.liquidityincentive.v1.QueryEpochsResponse.
 * Use `create(QueryEpochsResponseSchema)` to create a new message.
 */
export const QueryEpochsResponseSchema: GenMessage<QueryEpochsResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_liquidityincentive_v1_query, 5);

/**
 * QueryGaugeRequest
 *
 * @generated from message sunrise.liquidityincentive.v1.QueryGaugeRequest
 */
export type QueryGaugeRequest = Message<"sunrise.liquidityincentive.v1.QueryGaugeRequest"> & {
  /**
   * @generated from field: uint64 previous_epoch_id = 1;
   */
  previousEpochId: bigint;

  /**
   * @generated from field: uint64 pool_id = 2;
   */
  poolId: bigint;
};

/**
 * Describes the message sunrise.liquidityincentive.v1.QueryGaugeRequest.
 * Use `create(QueryGaugeRequestSchema)` to create a new message.
 */
export const QueryGaugeRequestSchema: GenMessage<QueryGaugeRequest> = /*@__PURE__*/
  messageDesc(file_sunrise_liquidityincentive_v1_query, 6);

/**
 * QueryGaugeResponse
 *
 * @generated from message sunrise.liquidityincentive.v1.QueryGaugeResponse
 */
export type QueryGaugeResponse = Message<"sunrise.liquidityincentive.v1.QueryGaugeResponse"> & {
  /**
   * @generated from field: sunrise.liquidityincentive.v1.Gauge gauge = 1;
   */
  gauge?: Gauge;
};

/**
 * Describes the message sunrise.liquidityincentive.v1.QueryGaugeResponse.
 * Use `create(QueryGaugeResponseSchema)` to create a new message.
 */
export const QueryGaugeResponseSchema: GenMessage<QueryGaugeResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_liquidityincentive_v1_query, 7);

/**
 * QueryGaugesRequest
 *
 * @generated from message sunrise.liquidityincentive.v1.QueryGaugesRequest
 */
export type QueryGaugesRequest = Message<"sunrise.liquidityincentive.v1.QueryGaugesRequest"> & {
  /**
   * @generated from field: uint64 previous_epoch_id = 1;
   */
  previousEpochId: bigint;

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 2;
   */
  pagination?: PageRequest;
};

/**
 * Describes the message sunrise.liquidityincentive.v1.QueryGaugesRequest.
 * Use `create(QueryGaugesRequestSchema)` to create a new message.
 */
export const QueryGaugesRequestSchema: GenMessage<QueryGaugesRequest> = /*@__PURE__*/
  messageDesc(file_sunrise_liquidityincentive_v1_query, 8);

/**
 * QueryGaugesResponse
 *
 * @generated from message sunrise.liquidityincentive.v1.QueryGaugesResponse
 */
export type QueryGaugesResponse = Message<"sunrise.liquidityincentive.v1.QueryGaugesResponse"> & {
  /**
   * @generated from field: repeated sunrise.liquidityincentive.v1.Gauge gauge = 1;
   */
  gauge: Gauge[];

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;
};

/**
 * Describes the message sunrise.liquidityincentive.v1.QueryGaugesResponse.
 * Use `create(QueryGaugesResponseSchema)` to create a new message.
 */
export const QueryGaugesResponseSchema: GenMessage<QueryGaugesResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_liquidityincentive_v1_query, 9);

/**
 * QueryVoteRequest
 *
 * @generated from message sunrise.liquidityincentive.v1.QueryVoteRequest
 */
export type QueryVoteRequest = Message<"sunrise.liquidityincentive.v1.QueryVoteRequest"> & {
  /**
   * @generated from field: string address = 1;
   */
  address: string;
};

/**
 * Describes the message sunrise.liquidityincentive.v1.QueryVoteRequest.
 * Use `create(QueryVoteRequestSchema)` to create a new message.
 */
export const QueryVoteRequestSchema: GenMessage<QueryVoteRequest> = /*@__PURE__*/
  messageDesc(file_sunrise_liquidityincentive_v1_query, 10);

/**
 * QueryVoteResponse
 *
 * @generated from message sunrise.liquidityincentive.v1.QueryVoteResponse
 */
export type QueryVoteResponse = Message<"sunrise.liquidityincentive.v1.QueryVoteResponse"> & {
  /**
   * @generated from field: sunrise.liquidityincentive.v1.Vote vote = 1;
   */
  vote?: Vote;
};

/**
 * Describes the message sunrise.liquidityincentive.v1.QueryVoteResponse.
 * Use `create(QueryVoteResponseSchema)` to create a new message.
 */
export const QueryVoteResponseSchema: GenMessage<QueryVoteResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_liquidityincentive_v1_query, 11);

/**
 * QueryVotesRequest
 *
 * @generated from message sunrise.liquidityincentive.v1.QueryVotesRequest
 */
export type QueryVotesRequest = Message<"sunrise.liquidityincentive.v1.QueryVotesRequest"> & {
  /**
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
   */
  pagination?: PageRequest;
};

/**
 * Describes the message sunrise.liquidityincentive.v1.QueryVotesRequest.
 * Use `create(QueryVotesRequestSchema)` to create a new message.
 */
export const QueryVotesRequestSchema: GenMessage<QueryVotesRequest> = /*@__PURE__*/
  messageDesc(file_sunrise_liquidityincentive_v1_query, 12);

/**
 * QueryVotesResponse
 *
 * @generated from message sunrise.liquidityincentive.v1.QueryVotesResponse
 */
export type QueryVotesResponse = Message<"sunrise.liquidityincentive.v1.QueryVotesResponse"> & {
  /**
   * @generated from field: repeated sunrise.liquidityincentive.v1.Vote votes = 1;
   */
  votes: Vote[];

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;
};

/**
 * Describes the message sunrise.liquidityincentive.v1.QueryVotesResponse.
 * Use `create(QueryVotesResponseSchema)` to create a new message.
 */
export const QueryVotesResponseSchema: GenMessage<QueryVotesResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_liquidityincentive_v1_query, 13);

/**
 * QueryBribesRequest
 *
 * @generated from message sunrise.liquidityincentive.v1.QueryBribesRequest
 */
export type QueryBribesRequest = Message<"sunrise.liquidityincentive.v1.QueryBribesRequest"> & {
  /**
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
   */
  pagination?: PageRequest;
};

/**
 * Describes the message sunrise.liquidityincentive.v1.QueryBribesRequest.
 * Use `create(QueryBribesRequestSchema)` to create a new message.
 */
export const QueryBribesRequestSchema: GenMessage<QueryBribesRequest> = /*@__PURE__*/
  messageDesc(file_sunrise_liquidityincentive_v1_query, 14);

/**
 * QueryBribesResponse
 *
 * @generated from message sunrise.liquidityincentive.v1.QueryBribesResponse
 */
export type QueryBribesResponse = Message<"sunrise.liquidityincentive.v1.QueryBribesResponse"> & {
  /**
   * @generated from field: repeated sunrise.liquidityincentive.v1.Bribe bribes = 1;
   */
  bribes: Bribe[];

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;
};

/**
 * Describes the message sunrise.liquidityincentive.v1.QueryBribesResponse.
 * Use `create(QueryBribesResponseSchema)` to create a new message.
 */
export const QueryBribesResponseSchema: GenMessage<QueryBribesResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_liquidityincentive_v1_query, 15);

/**
 * QueryBribeRequest
 *
 * @generated from message sunrise.liquidityincentive.v1.QueryBribeRequest
 */
export type QueryBribeRequest = Message<"sunrise.liquidityincentive.v1.QueryBribeRequest"> & {
  /**
   * @generated from field: uint64 id = 1;
   */
  id: bigint;
};

/**
 * Describes the message sunrise.liquidityincentive.v1.QueryBribeRequest.
 * Use `create(QueryBribeRequestSchema)` to create a new message.
 */
export const QueryBribeRequestSchema: GenMessage<QueryBribeRequest> = /*@__PURE__*/
  messageDesc(file_sunrise_liquidityincentive_v1_query, 16);

/**
 * QueryBribeResponse
 *
 * @generated from message sunrise.liquidityincentive.v1.QueryBribeResponse
 */
export type QueryBribeResponse = Message<"sunrise.liquidityincentive.v1.QueryBribeResponse"> & {
  /**
   * @generated from field: sunrise.liquidityincentive.v1.Bribe bribe = 1;
   */
  bribe?: Bribe;
};

/**
 * Describes the message sunrise.liquidityincentive.v1.QueryBribeResponse.
 * Use `create(QueryBribeResponseSchema)` to create a new message.
 */
export const QueryBribeResponseSchema: GenMessage<QueryBribeResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_liquidityincentive_v1_query, 17);

/**
 * QueryBribesByEpochIdRequest
 *
 * @generated from message sunrise.liquidityincentive.v1.QueryBribesByEpochIdRequest
 */
export type QueryBribesByEpochIdRequest = Message<"sunrise.liquidityincentive.v1.QueryBribesByEpochIdRequest"> & {
  /**
   * @generated from field: uint64 epoch_id = 1;
   */
  epochId: bigint;
};

/**
 * Describes the message sunrise.liquidityincentive.v1.QueryBribesByEpochIdRequest.
 * Use `create(QueryBribesByEpochIdRequestSchema)` to create a new message.
 */
export const QueryBribesByEpochIdRequestSchema: GenMessage<QueryBribesByEpochIdRequest> = /*@__PURE__*/
  messageDesc(file_sunrise_liquidityincentive_v1_query, 18);

/**
 * QueryBribesByEpochIdResponse
 *
 * @generated from message sunrise.liquidityincentive.v1.QueryBribesByEpochIdResponse
 */
export type QueryBribesByEpochIdResponse = Message<"sunrise.liquidityincentive.v1.QueryBribesByEpochIdResponse"> & {
  /**
   * @generated from field: repeated sunrise.liquidityincentive.v1.Bribe bribes = 1;
   */
  bribes: Bribe[];

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;
};

/**
 * Describes the message sunrise.liquidityincentive.v1.QueryBribesByEpochIdResponse.
 * Use `create(QueryBribesByEpochIdResponseSchema)` to create a new message.
 */
export const QueryBribesByEpochIdResponseSchema: GenMessage<QueryBribesByEpochIdResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_liquidityincentive_v1_query, 19);

/**
 * QueryBribesByPoolIdRequest
 *
 * @generated from message sunrise.liquidityincentive.v1.QueryBribesByPoolIdRequest
 */
export type QueryBribesByPoolIdRequest = Message<"sunrise.liquidityincentive.v1.QueryBribesByPoolIdRequest"> & {
  /**
   * @generated from field: uint64 pool_id = 1;
   */
  poolId: bigint;
};

/**
 * Describes the message sunrise.liquidityincentive.v1.QueryBribesByPoolIdRequest.
 * Use `create(QueryBribesByPoolIdRequestSchema)` to create a new message.
 */
export const QueryBribesByPoolIdRequestSchema: GenMessage<QueryBribesByPoolIdRequest> = /*@__PURE__*/
  messageDesc(file_sunrise_liquidityincentive_v1_query, 20);

/**
 * QueryBribesByPoolIdResponse
 *
 * @generated from message sunrise.liquidityincentive.v1.QueryBribesByPoolIdResponse
 */
export type QueryBribesByPoolIdResponse = Message<"sunrise.liquidityincentive.v1.QueryBribesByPoolIdResponse"> & {
  /**
   * @generated from field: repeated sunrise.liquidityincentive.v1.Bribe bribes = 1;
   */
  bribes: Bribe[];

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;
};

/**
 * Describes the message sunrise.liquidityincentive.v1.QueryBribesByPoolIdResponse.
 * Use `create(QueryBribesByPoolIdResponseSchema)` to create a new message.
 */
export const QueryBribesByPoolIdResponseSchema: GenMessage<QueryBribesByPoolIdResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_liquidityincentive_v1_query, 21);

/**
 * QueryBribesByEpochAndPoolIdRequest
 *
 * @generated from message sunrise.liquidityincentive.v1.QueryBribesByEpochAndPoolIdRequest
 */
export type QueryBribesByEpochAndPoolIdRequest = Message<"sunrise.liquidityincentive.v1.QueryBribesByEpochAndPoolIdRequest"> & {
  /**
   * @generated from field: uint64 epoch_id = 1;
   */
  epochId: bigint;

  /**
   * @generated from field: uint64 pool_id = 2;
   */
  poolId: bigint;
};

/**
 * Describes the message sunrise.liquidityincentive.v1.QueryBribesByEpochAndPoolIdRequest.
 * Use `create(QueryBribesByEpochAndPoolIdRequestSchema)` to create a new message.
 */
export const QueryBribesByEpochAndPoolIdRequestSchema: GenMessage<QueryBribesByEpochAndPoolIdRequest> = /*@__PURE__*/
  messageDesc(file_sunrise_liquidityincentive_v1_query, 22);

/**
 * QueryBribesByEpochAndPoolIdResponse
 *
 * @generated from message sunrise.liquidityincentive.v1.QueryBribesByEpochAndPoolIdResponse
 */
export type QueryBribesByEpochAndPoolIdResponse = Message<"sunrise.liquidityincentive.v1.QueryBribesByEpochAndPoolIdResponse"> & {
  /**
   * @generated from field: repeated sunrise.liquidityincentive.v1.Bribe bribes = 1;
   */
  bribes: Bribe[];

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;
};

/**
 * Describes the message sunrise.liquidityincentive.v1.QueryBribesByEpochAndPoolIdResponse.
 * Use `create(QueryBribesByEpochAndPoolIdResponseSchema)` to create a new message.
 */
export const QueryBribesByEpochAndPoolIdResponseSchema: GenMessage<QueryBribesByEpochAndPoolIdResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_liquidityincentive_v1_query, 23);

/**
 * QueryBribeAllocationsRequest
 *
 * @generated from message sunrise.liquidityincentive.v1.QueryBribeAllocationsRequest
 */
export type QueryBribeAllocationsRequest = Message<"sunrise.liquidityincentive.v1.QueryBribeAllocationsRequest"> & {
  /**
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
   */
  pagination?: PageRequest;
};

/**
 * Describes the message sunrise.liquidityincentive.v1.QueryBribeAllocationsRequest.
 * Use `create(QueryBribeAllocationsRequestSchema)` to create a new message.
 */
export const QueryBribeAllocationsRequestSchema: GenMessage<QueryBribeAllocationsRequest> = /*@__PURE__*/
  messageDesc(file_sunrise_liquidityincentive_v1_query, 24);

/**
 * QueryBribeAllocationsResponse
 *
 * @generated from message sunrise.liquidityincentive.v1.QueryBribeAllocationsResponse
 */
export type QueryBribeAllocationsResponse = Message<"sunrise.liquidityincentive.v1.QueryBribeAllocationsResponse"> & {
  /**
   * @generated from field: repeated sunrise.liquidityincentive.v1.BribeAllocation bribe_allocations = 1;
   */
  bribeAllocations: BribeAllocation[];

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;
};

/**
 * Describes the message sunrise.liquidityincentive.v1.QueryBribeAllocationsResponse.
 * Use `create(QueryBribeAllocationsResponseSchema)` to create a new message.
 */
export const QueryBribeAllocationsResponseSchema: GenMessage<QueryBribeAllocationsResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_liquidityincentive_v1_query, 25);

/**
 * QueryBribeAllocationsByAddressRequest
 *
 * @generated from message sunrise.liquidityincentive.v1.QueryBribeAllocationsByAddressRequest
 */
export type QueryBribeAllocationsByAddressRequest = Message<"sunrise.liquidityincentive.v1.QueryBribeAllocationsByAddressRequest"> & {
  /**
   * @generated from field: string address = 1;
   */
  address: string;
};

/**
 * Describes the message sunrise.liquidityincentive.v1.QueryBribeAllocationsByAddressRequest.
 * Use `create(QueryBribeAllocationsByAddressRequestSchema)` to create a new message.
 */
export const QueryBribeAllocationsByAddressRequestSchema: GenMessage<QueryBribeAllocationsByAddressRequest> = /*@__PURE__*/
  messageDesc(file_sunrise_liquidityincentive_v1_query, 26);

/**
 * QueryBribeAllocationsByAddressResponse
 *
 * @generated from message sunrise.liquidityincentive.v1.QueryBribeAllocationsByAddressResponse
 */
export type QueryBribeAllocationsByAddressResponse = Message<"sunrise.liquidityincentive.v1.QueryBribeAllocationsByAddressResponse"> & {
  /**
   * @generated from field: repeated sunrise.liquidityincentive.v1.BribeAllocation bribe_allocations = 1;
   */
  bribeAllocations: BribeAllocation[];
};

/**
 * Describes the message sunrise.liquidityincentive.v1.QueryBribeAllocationsByAddressResponse.
 * Use `create(QueryBribeAllocationsByAddressResponseSchema)` to create a new message.
 */
export const QueryBribeAllocationsByAddressResponseSchema: GenMessage<QueryBribeAllocationsByAddressResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_liquidityincentive_v1_query, 27);

/**
 * QueryBribeAllocationRequest
 *
 * @generated from message sunrise.liquidityincentive.v1.QueryBribeAllocationRequest
 */
export type QueryBribeAllocationRequest = Message<"sunrise.liquidityincentive.v1.QueryBribeAllocationRequest"> & {
  /**
   * @generated from field: string address = 1;
   */
  address: string;

  /**
   * @generated from field: uint64 epoch_id = 2;
   */
  epochId: bigint;

  /**
   * @generated from field: uint64 pool_id = 3;
   */
  poolId: bigint;
};

/**
 * Describes the message sunrise.liquidityincentive.v1.QueryBribeAllocationRequest.
 * Use `create(QueryBribeAllocationRequestSchema)` to create a new message.
 */
export const QueryBribeAllocationRequestSchema: GenMessage<QueryBribeAllocationRequest> = /*@__PURE__*/
  messageDesc(file_sunrise_liquidityincentive_v1_query, 28);

/**
 * QueryBribeAllocationResponse
 *
 * @generated from message sunrise.liquidityincentive.v1.QueryBribeAllocationResponse
 */
export type QueryBribeAllocationResponse = Message<"sunrise.liquidityincentive.v1.QueryBribeAllocationResponse"> & {
  /**
   * @generated from field: sunrise.liquidityincentive.v1.BribeAllocation bribe_allocation = 1;
   */
  bribeAllocation?: BribeAllocation;
};

/**
 * Describes the message sunrise.liquidityincentive.v1.QueryBribeAllocationResponse.
 * Use `create(QueryBribeAllocationResponseSchema)` to create a new message.
 */
export const QueryBribeAllocationResponseSchema: GenMessage<QueryBribeAllocationResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_liquidityincentive_v1_query, 29);

/**
 * Query defines the gRPC querier service.
 *
 * @generated from service sunrise.liquidityincentive.v1.Query
 */
export const Query: GenService<{
  /**
   * Parameters queries the parameters of the module.
   *
   * @generated from rpc sunrise.liquidityincentive.v1.Query.Params
   */
  params: {
    methodKind: "unary";
    input: typeof QueryParamsRequestSchema;
    output: typeof QueryParamsResponseSchema;
  },
  /**
   * Epoch
   *
   * @generated from rpc sunrise.liquidityincentive.v1.Query.Epoch
   */
  epoch: {
    methodKind: "unary";
    input: typeof QueryEpochRequestSchema;
    output: typeof QueryEpochResponseSchema;
  },
  /**
   * Epochs
   *
   * @generated from rpc sunrise.liquidityincentive.v1.Query.Epochs
   */
  epochs: {
    methodKind: "unary";
    input: typeof QueryEpochsRequestSchema;
    output: typeof QueryEpochsResponseSchema;
  },
  /**
   * Gauge
   *
   * @generated from rpc sunrise.liquidityincentive.v1.Query.Gauge
   */
  gauge: {
    methodKind: "unary";
    input: typeof QueryGaugeRequestSchema;
    output: typeof QueryGaugeResponseSchema;
  },
  /**
   * Gauges
   *
   * @generated from rpc sunrise.liquidityincentive.v1.Query.Gauges
   */
  gauges: {
    methodKind: "unary";
    input: typeof QueryGaugesRequestSchema;
    output: typeof QueryGaugesResponseSchema;
  },
  /**
   * Vote
   *
   * @generated from rpc sunrise.liquidityincentive.v1.Query.Vote
   */
  vote: {
    methodKind: "unary";
    input: typeof QueryVoteRequestSchema;
    output: typeof QueryVoteResponseSchema;
  },
  /**
   * Votes
   *
   * @generated from rpc sunrise.liquidityincentive.v1.Query.Votes
   */
  votes: {
    methodKind: "unary";
    input: typeof QueryVotesRequestSchema;
    output: typeof QueryVotesResponseSchema;
  },
  /**
   * Bribes
   *
   * @generated from rpc sunrise.liquidityincentive.v1.Query.Bribes
   */
  bribes: {
    methodKind: "unary";
    input: typeof QueryBribesRequestSchema;
    output: typeof QueryBribesResponseSchema;
  },
  /**
   * Bribe
   *
   * @generated from rpc sunrise.liquidityincentive.v1.Query.Bribe
   */
  bribe: {
    methodKind: "unary";
    input: typeof QueryBribeRequestSchema;
    output: typeof QueryBribeResponseSchema;
  },
  /**
   * BribesByEpochId
   *
   * @generated from rpc sunrise.liquidityincentive.v1.Query.BribesByEpochId
   */
  bribesByEpochId: {
    methodKind: "unary";
    input: typeof QueryBribesByEpochIdRequestSchema;
    output: typeof QueryBribesByEpochIdResponseSchema;
  },
  /**
   * BribesByPoolId
   *
   * @generated from rpc sunrise.liquidityincentive.v1.Query.BribesByPoolId
   */
  bribesByPoolId: {
    methodKind: "unary";
    input: typeof QueryBribesByPoolIdRequestSchema;
    output: typeof QueryBribesByPoolIdResponseSchema;
  },
  /**
   * BribesByEpochAndPoolId
   *
   * @generated from rpc sunrise.liquidityincentive.v1.Query.BribesByEpochAndPoolId
   */
  bribesByEpochAndPoolId: {
    methodKind: "unary";
    input: typeof QueryBribesByEpochAndPoolIdRequestSchema;
    output: typeof QueryBribesByEpochAndPoolIdResponseSchema;
  },
  /**
   * BribeAllocations
   *
   * @generated from rpc sunrise.liquidityincentive.v1.Query.BribeAllocations
   */
  bribeAllocations: {
    methodKind: "unary";
    input: typeof QueryBribeAllocationsRequestSchema;
    output: typeof QueryBribeAllocationsResponseSchema;
  },
  /**
   * BribeAllocationsByAddress
   *
   * @generated from rpc sunrise.liquidityincentive.v1.Query.BribeAllocationsByAddress
   */
  bribeAllocationsByAddress: {
    methodKind: "unary";
    input: typeof QueryBribeAllocationsByAddressRequestSchema;
    output: typeof QueryBribeAllocationsByAddressResponseSchema;
  },
  /**
   * BribeAllocation
   *
   * @generated from rpc sunrise.liquidityincentive.v1.Query.BribeAllocation
   */
  bribeAllocation: {
    methodKind: "unary";
    input: typeof QueryBribeAllocationRequestSchema;
    output: typeof QueryBribeAllocationResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_sunrise_liquidityincentive_v1_query, 0);

