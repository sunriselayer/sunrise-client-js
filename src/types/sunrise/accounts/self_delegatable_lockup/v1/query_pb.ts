// @generated by protoc-gen-es v2.2.2 with parameter "target=ts"
// @generated from file sunrise/accounts/self_delegatable_lockup/v1/query.proto (package sunrise.accounts.self_delegatable_lockup.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Coin } from "../../../../cosmos/base/v1beta1/coin_pb";
import { file_cosmos_base_v1beta1_coin } from "../../../../cosmos/base/v1beta1/coin_pb";
import { file_cosmos_proto_cosmos } from "../../../../cosmos_proto/cosmos_pb";
import { file_gogoproto_gogo } from "../../../../gogoproto/gogo_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Period, UnbondingEntry } from "./lockup_pb";
import { file_sunrise_accounts_self_delegatable_lockup_v1_lockup } from "./lockup_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file sunrise/accounts/self_delegatable_lockup/v1/query.proto.
 */
export const file_sunrise_accounts_self_delegatable_lockup_v1_query: GenFile = /*@__PURE__*/
  fileDesc("CjdzdW5yaXNlL2FjY291bnRzL3NlbGZfZGVsZWdhdGFibGVfbG9ja3VwL3YxL3F1ZXJ5LnByb3RvEitzdW5yaXNlLmFjY291bnRzLnNlbGZfZGVsZWdhdGFibGVfbG9ja3VwLnYxIh8KHVF1ZXJ5TG9ja3VwQWNjb3VudEluZm9SZXF1ZXN0IpUFCh5RdWVyeUxvY2t1cEFjY291bnRJbmZvUmVzcG9uc2USZQoQb3JpZ2luYWxfbG9ja2luZxgBIAMoCzIZLmNvc21vcy5iYXNlLnYxYmV0YTEuQ29pbkIwyN4fAKrfHyhnaXRodWIuY29tL2Nvc21vcy9jb3Ntb3Mtc2RrL3R5cGVzLkNvaW5zEmMKDmRlbGVnYXRlZF9mcmVlGAIgAygLMhkuY29zbW9zLmJhc2UudjFiZXRhMS5Db2luQjDI3h8Aqt8fKGdpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsvdHlwZXMuQ29pbnMSZgoRZGVsZWdhdGVkX2xvY2tpbmcYAyADKAsyGS5jb3Ntb3MuYmFzZS52MWJldGExLkNvaW5CMMjeHwCq3x8oZ2l0aHViLmNvbS9jb3Ntb3MvY29zbW9zLXNkay90eXBlcy5Db2lucxI0CgpzdGFydF90aW1lGAQgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEIEkN8fARIyCghlbmRfdGltZRgFIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCBJDfHwESYQoMbG9ja2VkX2NvaW5zGAYgAygLMhkuY29zbW9zLmJhc2UudjFiZXRhMS5Db2luQjDI3h8Aqt8fKGdpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsvdHlwZXMuQ29pbnMSYwoOdW5sb2NrZWRfY29pbnMYByADKAsyGS5jb3Ntb3MuYmFzZS52MWJldGExLkNvaW5CMMjeHwCq3x8oZ2l0aHViLmNvbS9jb3Ntb3MvY29zbW9zLXNkay90eXBlcy5Db2lucxINCgVvd25lchgIIAEoCSJcChxRdWVyeVVuYm9uZGluZ0VudHJpZXNSZXF1ZXN0EjwKEXZhbGlkYXRvcl9hZGRyZXNzGAEgASgJQiHStC0dY29zbW9zLlZhbGlkYXRvckFkZHJlc3NTdHJpbmcidwodUXVlcnlVbmJvbmRpbmdFbnRyaWVzUmVzcG9uc2USVgoRdW5ib25kaW5nX2VudHJpZXMYASADKAsyOy5zdW5yaXNlLmFjY291bnRzLnNlbGZfZGVsZWdhdGFibGVfbG9ja3VwLnYxLlVuYm9uZGluZ0VudHJ5IhwKGlF1ZXJ5TG9ja2luZ1BlcmlvZHNSZXF1ZXN0ImsKG1F1ZXJ5TG9ja2luZ1BlcmlvZHNSZXNwb25zZRJMCg9sb2NraW5nX3BlcmlvZHMYASADKAsyMy5zdW5yaXNlLmFjY291bnRzLnNlbGZfZGVsZWdhdGFibGVfbG9ja3VwLnYxLlBlcmlvZCIdChtRdWVyeVNwZW5kYWJsZUFtb3VudFJlcXVlc3QihQEKHFF1ZXJ5U3BlbmRhYmxlQW1vdW50UmVzcG9uc2USZQoQc3BlbmRhYmxlX3Rva2VucxgBIAMoCzIZLmNvc21vcy5iYXNlLnYxYmV0YTEuQ29pbkIwyN4fAKrfHyhnaXRodWIuY29tL2Nvc21vcy9jb3Ntb3Mtc2RrL3R5cGVzLkNvaW5zQssCCi9jb20uc3VucmlzZS5hY2NvdW50cy5zZWxmX2RlbGVnYXRhYmxlX2xvY2t1cC52MUIKUXVlcnlQcm90b1ABWkVnaXRodWIuY29tL3N1bnJpc2VsYXllci9zdW5yaXNlL3gvYWNjb3VudHMvc2VsZl9kZWxlZ2F0YWJsZV9sb2NrdXAvdjGiAgNTQVOqAilTdW5yaXNlLkFjY291bnRzLlNlbGZEZWxlZ2F0YWJsZUxvY2t1cC5WMcoCKVN1bnJpc2VcQWNjb3VudHNcU2VsZkRlbGVnYXRhYmxlTG9ja3VwXFYx4gI1U3VucmlzZVxBY2NvdW50c1xTZWxmRGVsZWdhdGFibGVMb2NrdXBcVjFcR1BCTWV0YWRhdGHqAixTdW5yaXNlOjpBY2NvdW50czo6U2VsZkRlbGVnYXRhYmxlTG9ja3VwOjpWMWIGcHJvdG8z", [file_cosmos_base_v1beta1_coin, file_cosmos_proto_cosmos, file_gogoproto_gogo, file_google_protobuf_timestamp, file_sunrise_accounts_self_delegatable_lockup_v1_lockup]);

/**
 * QueryLockupAccountInfoRequest get lockup account info
 *
 * @generated from message sunrise.accounts.self_delegatable_lockup.v1.QueryLockupAccountInfoRequest
 */
export type QueryLockupAccountInfoRequest = Message<"sunrise.accounts.self_delegatable_lockup.v1.QueryLockupAccountInfoRequest"> & {
};

/**
 * Describes the message sunrise.accounts.self_delegatable_lockup.v1.QueryLockupAccountInfoRequest.
 * Use `create(QueryLockupAccountInfoRequestSchema)` to create a new message.
 */
export const QueryLockupAccountInfoRequestSchema: GenMessage<QueryLockupAccountInfoRequest> = /*@__PURE__*/
  messageDesc(file_sunrise_accounts_self_delegatable_lockup_v1_query, 0);

/**
 * QueryLockupAccountInfoResponse return lockup account info
 *
 * @generated from message sunrise.accounts.self_delegatable_lockup.v1.QueryLockupAccountInfoResponse
 */
export type QueryLockupAccountInfoResponse = Message<"sunrise.accounts.self_delegatable_lockup.v1.QueryLockupAccountInfoResponse"> & {
  /**
   * original_locking defines the value of the account original locking coins.
   *
   * @generated from field: repeated cosmos.base.v1beta1.Coin original_locking = 1;
   */
  originalLocking: Coin[];

  /**
   * delegated_free defines the value of the account free delegated amount.
   *
   * @generated from field: repeated cosmos.base.v1beta1.Coin delegated_free = 2;
   */
  delegatedFree: Coin[];

  /**
   * delegated_locking defines the value of the account locking delegated amount.
   *
   * @generated from field: repeated cosmos.base.v1beta1.Coin delegated_locking = 3;
   */
  delegatedLocking: Coin[];

  /**
   * end_time defines the value of the account lockup start time.
   *
   * @generated from field: google.protobuf.Timestamp start_time = 4;
   */
  startTime?: Timestamp;

  /**
   * end_time defines the value of the account lockup end time.
   *
   * @generated from field: google.protobuf.Timestamp end_time = 5;
   */
  endTime?: Timestamp;

  /**
   * locked_coins defines the value of the account locking coins.
   *
   * @generated from field: repeated cosmos.base.v1beta1.Coin locked_coins = 6;
   */
  lockedCoins: Coin[];

  /**
   * unlocked_coins defines the value of the account released coins from lockup.
   *
   * @generated from field: repeated cosmos.base.v1beta1.Coin unlocked_coins = 7;
   */
  unlockedCoins: Coin[];

  /**
   * owner defines the value of the owner of the lockup account.
   *
   * @generated from field: string owner = 8;
   */
  owner: string;
};

/**
 * Describes the message sunrise.accounts.self_delegatable_lockup.v1.QueryLockupAccountInfoResponse.
 * Use `create(QueryLockupAccountInfoResponseSchema)` to create a new message.
 */
export const QueryLockupAccountInfoResponseSchema: GenMessage<QueryLockupAccountInfoResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_accounts_self_delegatable_lockup_v1_query, 1);

/**
 * QueryUnbondingEntriesRequest is used to query the lockup account unbonding entries.
 *
 * @generated from message sunrise.accounts.self_delegatable_lockup.v1.QueryUnbondingEntriesRequest
 */
export type QueryUnbondingEntriesRequest = Message<"sunrise.accounts.self_delegatable_lockup.v1.QueryUnbondingEntriesRequest"> & {
  /**
   * @generated from field: string validator_address = 1;
   */
  validatorAddress: string;
};

/**
 * Describes the message sunrise.accounts.self_delegatable_lockup.v1.QueryUnbondingEntriesRequest.
 * Use `create(QueryUnbondingEntriesRequestSchema)` to create a new message.
 */
export const QueryUnbondingEntriesRequestSchema: GenMessage<QueryUnbondingEntriesRequest> = /*@__PURE__*/
  messageDesc(file_sunrise_accounts_self_delegatable_lockup_v1_query, 2);

/**
 * QueryUnbondingEntriesResponse returns the lockup account unbonding entries.
 *
 * @generated from message sunrise.accounts.self_delegatable_lockup.v1.QueryUnbondingEntriesResponse
 */
export type QueryUnbondingEntriesResponse = Message<"sunrise.accounts.self_delegatable_lockup.v1.QueryUnbondingEntriesResponse"> & {
  /**
   * UnbondingEntry defines the list of unbonding entries.
   *
   * @generated from field: repeated sunrise.accounts.self_delegatable_lockup.v1.UnbondingEntry unbonding_entries = 1;
   */
  unbondingEntries: UnbondingEntry[];
};

/**
 * Describes the message sunrise.accounts.self_delegatable_lockup.v1.QueryUnbondingEntriesResponse.
 * Use `create(QueryUnbondingEntriesResponseSchema)` to create a new message.
 */
export const QueryUnbondingEntriesResponseSchema: GenMessage<QueryUnbondingEntriesResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_accounts_self_delegatable_lockup_v1_query, 3);

/**
 * QueryLockingPeriodsRequest is used to query the periodic lockup account locking periods.
 *
 * @generated from message sunrise.accounts.self_delegatable_lockup.v1.QueryLockingPeriodsRequest
 */
export type QueryLockingPeriodsRequest = Message<"sunrise.accounts.self_delegatable_lockup.v1.QueryLockingPeriodsRequest"> & {
};

/**
 * Describes the message sunrise.accounts.self_delegatable_lockup.v1.QueryLockingPeriodsRequest.
 * Use `create(QueryLockingPeriodsRequestSchema)` to create a new message.
 */
export const QueryLockingPeriodsRequestSchema: GenMessage<QueryLockingPeriodsRequest> = /*@__PURE__*/
  messageDesc(file_sunrise_accounts_self_delegatable_lockup_v1_query, 4);

/**
 * QueryLockingPeriodsResponse returns the periodic lockup account locking periods.
 *
 * @generated from message sunrise.accounts.self_delegatable_lockup.v1.QueryLockingPeriodsResponse
 */
export type QueryLockingPeriodsResponse = Message<"sunrise.accounts.self_delegatable_lockup.v1.QueryLockingPeriodsResponse"> & {
  /**
   * lockup_periods defines the value of the periodic lockup account locking periods.
   *
   * @generated from field: repeated sunrise.accounts.self_delegatable_lockup.v1.Period locking_periods = 1;
   */
  lockingPeriods: Period[];
};

/**
 * Describes the message sunrise.accounts.self_delegatable_lockup.v1.QueryLockingPeriodsResponse.
 * Use `create(QueryLockingPeriodsResponseSchema)` to create a new message.
 */
export const QueryLockingPeriodsResponseSchema: GenMessage<QueryLockingPeriodsResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_accounts_self_delegatable_lockup_v1_query, 5);

/**
 * QuerySpendableAmountRequest is used to query the lockup account total spendable tokens.
 *
 * @generated from message sunrise.accounts.self_delegatable_lockup.v1.QuerySpendableAmountRequest
 */
export type QuerySpendableAmountRequest = Message<"sunrise.accounts.self_delegatable_lockup.v1.QuerySpendableAmountRequest"> & {
};

/**
 * Describes the message sunrise.accounts.self_delegatable_lockup.v1.QuerySpendableAmountRequest.
 * Use `create(QuerySpendableAmountRequestSchema)` to create a new message.
 */
export const QuerySpendableAmountRequestSchema: GenMessage<QuerySpendableAmountRequest> = /*@__PURE__*/
  messageDesc(file_sunrise_accounts_self_delegatable_lockup_v1_query, 6);

/**
 * QuerySpendableAmountResponse returns lockup account total spendable tokens.
 *
 * @generated from message sunrise.accounts.self_delegatable_lockup.v1.QuerySpendableAmountResponse
 */
export type QuerySpendableAmountResponse = Message<"sunrise.accounts.self_delegatable_lockup.v1.QuerySpendableAmountResponse"> & {
  /**
   * @generated from field: repeated cosmos.base.v1beta1.Coin spendable_tokens = 1;
   */
  spendableTokens: Coin[];
};

/**
 * Describes the message sunrise.accounts.self_delegatable_lockup.v1.QuerySpendableAmountResponse.
 * Use `create(QuerySpendableAmountResponseSchema)` to create a new message.
 */
export const QuerySpendableAmountResponseSchema: GenMessage<QuerySpendableAmountResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_accounts_self_delegatable_lockup_v1_query, 7);

