// @generated by protoc-gen-es v2.2.2 with parameter "target=ts"
// @generated from file sunrise/swap/route.proto (package sunrise.swap, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import { file_amino_amino } from "../../amino/amino_pb";
import { file_cosmos_msg_v1_msg } from "../../cosmos/msg/v1/msg_pb";
import { file_cosmos_proto_cosmos } from "../../cosmos_proto/cosmos_pb";
import { file_gogoproto_gogo } from "../../gogoproto/gogo_pb";
import type { Coin } from "../../cosmos/base/v1beta1/coin_pb";
import { file_cosmos_base_v1beta1_coin } from "../../cosmos/base/v1beta1/coin_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file sunrise/swap/route.proto.
 */
export const file_sunrise_swap_route: GenFile = /*@__PURE__*/
  fileDesc("ChhzdW5yaXNlL3N3YXAvcm91dGUucHJvdG8SDHN1bnJpc2Uuc3dhcCIcCglSb3V0ZVBvb2wSDwoHcG9vbF9pZBgBIAEoBCI9CgtSb3V0ZVNlcmllcxIuCgZyb3V0ZXMYASADKAsyEy5zdW5yaXNlLnN3YXAuUm91dGVCCcjeHwCo57AqASKIAQoNUm91dGVQYXJhbGxlbBIuCgZyb3V0ZXMYASADKAsyEy5zdW5yaXNlLnN3YXAuUm91dGVCCcjeHwCo57AqARJHCgd3ZWlnaHRzGAIgAygJQjbI3h8A2t4fG2Nvc21vc3Nkay5pby9tYXRoLkxlZ2FjeURlY9K0LQpjb3Ntb3MuRGVjqOewKgEivwEKBVJvdXRlEhAKCGRlbm9tX2luGAEgASgJEhEKCWRlbm9tX291dBgCIAEoCRInCgRwb29sGAMgASgLMhcuc3VucmlzZS5zd2FwLlJvdXRlUG9vbEgAEisKBnNlcmllcxgEIAEoCzIZLnN1bnJpc2Uuc3dhcC5Sb3V0ZVNlcmllc0gAEi8KCHBhcmFsbGVsGAUgASgLMhsuc3VucmlzZS5zd2FwLlJvdXRlUGFyYWxsZWxIAEIKCghzdHJhdGVneSIiCg9Sb3V0ZVJlc3VsdFBvb2wSDwoHcG9vbF9pZBgBIAEoBCJQChFSb3V0ZVJlc3VsdFNlcmllcxI7Cg1yb3V0ZV9yZXN1bHRzGAEgAygLMhkuc3VucmlzZS5zd2FwLlJvdXRlUmVzdWx0QgnI3h8AqOewKgEiUgoTUm91dGVSZXN1bHRQYXJhbGxlbBI7Cg1yb3V0ZV9yZXN1bHRzGAEgAygLMhkuc3VucmlzZS5zd2FwLlJvdXRlUmVzdWx0QgnI3h8AqOewKgEimQIKC1JvdXRlUmVzdWx0EjEKCHRva2VuX2luGAEgASgLMhkuY29zbW9zLmJhc2UudjFiZXRhMS5Db2luQgTI3h8AEjIKCXRva2VuX291dBgCIAEoCzIZLmNvc21vcy5iYXNlLnYxYmV0YTEuQ29pbkIEyN4fABItCgRwb29sGAMgASgLMh0uc3VucmlzZS5zd2FwLlJvdXRlUmVzdWx0UG9vbEgAEjEKBnNlcmllcxgEIAEoCzIfLnN1bnJpc2Uuc3dhcC5Sb3V0ZVJlc3VsdFNlcmllc0gAEjUKCHBhcmFsbGVsGAUgASgLMiEuc3VucmlzZS5zd2FwLlJvdXRlUmVzdWx0UGFyYWxsZWxIAEIKCghzdHJhdGVneUKdAQoQY29tLnN1bnJpc2Uuc3dhcEIKUm91dGVQcm90b1ABWixnaXRodWIuY29tL3N1bnJpc2VsYXllci9zdW5yaXNlL3gvc3dhcC90eXBlc6ICA1NTWKoCDFN1bnJpc2UuU3dhcMoCDFN1bnJpc2VcU3dhcOICGFN1bnJpc2VcU3dhcFxHUEJNZXRhZGF0YeoCDVN1bnJpc2U6OlN3YXBiBnByb3RvMw", [file_amino_amino, file_cosmos_msg_v1_msg, file_cosmos_proto_cosmos, file_gogoproto_gogo, file_cosmos_base_v1beta1_coin]);

/**
 * @generated from message sunrise.swap.RoutePool
 */
export type RoutePool = Message<"sunrise.swap.RoutePool"> & {
  /**
   * @generated from field: uint64 pool_id = 1;
   */
  poolId: bigint;
};

/**
 * Describes the message sunrise.swap.RoutePool.
 * Use `create(RoutePoolSchema)` to create a new message.
 */
export const RoutePoolSchema: GenMessage<RoutePool> = /*@__PURE__*/
  messageDesc(file_sunrise_swap_route, 0);

/**
 * @generated from message sunrise.swap.RouteSeries
 */
export type RouteSeries = Message<"sunrise.swap.RouteSeries"> & {
  /**
   * @generated from field: repeated sunrise.swap.Route routes = 1;
   */
  routes: Route[];
};

/**
 * Describes the message sunrise.swap.RouteSeries.
 * Use `create(RouteSeriesSchema)` to create a new message.
 */
export const RouteSeriesSchema: GenMessage<RouteSeries> = /*@__PURE__*/
  messageDesc(file_sunrise_swap_route, 1);

/**
 * @generated from message sunrise.swap.RouteParallel
 */
export type RouteParallel = Message<"sunrise.swap.RouteParallel"> & {
  /**
   * @generated from field: repeated sunrise.swap.Route routes = 1;
   */
  routes: Route[];

  /**
   * @generated from field: repeated string weights = 2;
   */
  weights: string[];
};

/**
 * Describes the message sunrise.swap.RouteParallel.
 * Use `create(RouteParallelSchema)` to create a new message.
 */
export const RouteParallelSchema: GenMessage<RouteParallel> = /*@__PURE__*/
  messageDesc(file_sunrise_swap_route, 2);

/**
 * @generated from message sunrise.swap.Route
 */
export type Route = Message<"sunrise.swap.Route"> & {
  /**
   * @generated from field: string denom_in = 1;
   */
  denomIn: string;

  /**
   * @generated from field: string denom_out = 2;
   */
  denomOut: string;

  /**
   * @generated from oneof sunrise.swap.Route.strategy
   */
  strategy: {
    /**
     * @generated from field: sunrise.swap.RoutePool pool = 3;
     */
    value: RoutePool;
    case: "pool";
  } | {
    /**
     * @generated from field: sunrise.swap.RouteSeries series = 4;
     */
    value: RouteSeries;
    case: "series";
  } | {
    /**
     * @generated from field: sunrise.swap.RouteParallel parallel = 5;
     */
    value: RouteParallel;
    case: "parallel";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message sunrise.swap.Route.
 * Use `create(RouteSchema)` to create a new message.
 */
export const RouteSchema: GenMessage<Route> = /*@__PURE__*/
  messageDesc(file_sunrise_swap_route, 3);

/**
 * @generated from message sunrise.swap.RouteResultPool
 */
export type RouteResultPool = Message<"sunrise.swap.RouteResultPool"> & {
  /**
   * @generated from field: uint64 pool_id = 1;
   */
  poolId: bigint;
};

/**
 * Describes the message sunrise.swap.RouteResultPool.
 * Use `create(RouteResultPoolSchema)` to create a new message.
 */
export const RouteResultPoolSchema: GenMessage<RouteResultPool> = /*@__PURE__*/
  messageDesc(file_sunrise_swap_route, 4);

/**
 * @generated from message sunrise.swap.RouteResultSeries
 */
export type RouteResultSeries = Message<"sunrise.swap.RouteResultSeries"> & {
  /**
   * @generated from field: repeated sunrise.swap.RouteResult route_results = 1;
   */
  routeResults: RouteResult[];
};

/**
 * Describes the message sunrise.swap.RouteResultSeries.
 * Use `create(RouteResultSeriesSchema)` to create a new message.
 */
export const RouteResultSeriesSchema: GenMessage<RouteResultSeries> = /*@__PURE__*/
  messageDesc(file_sunrise_swap_route, 5);

/**
 * @generated from message sunrise.swap.RouteResultParallel
 */
export type RouteResultParallel = Message<"sunrise.swap.RouteResultParallel"> & {
  /**
   * @generated from field: repeated sunrise.swap.RouteResult route_results = 1;
   */
  routeResults: RouteResult[];
};

/**
 * Describes the message sunrise.swap.RouteResultParallel.
 * Use `create(RouteResultParallelSchema)` to create a new message.
 */
export const RouteResultParallelSchema: GenMessage<RouteResultParallel> = /*@__PURE__*/
  messageDesc(file_sunrise_swap_route, 6);

/**
 * @generated from message sunrise.swap.RouteResult
 */
export type RouteResult = Message<"sunrise.swap.RouteResult"> & {
  /**
   * @generated from field: cosmos.base.v1beta1.Coin token_in = 1;
   */
  tokenIn?: Coin;

  /**
   * @generated from field: cosmos.base.v1beta1.Coin token_out = 2;
   */
  tokenOut?: Coin;

  /**
   * @generated from oneof sunrise.swap.RouteResult.strategy
   */
  strategy: {
    /**
     * @generated from field: sunrise.swap.RouteResultPool pool = 3;
     */
    value: RouteResultPool;
    case: "pool";
  } | {
    /**
     * @generated from field: sunrise.swap.RouteResultSeries series = 4;
     */
    value: RouteResultSeries;
    case: "series";
  } | {
    /**
     * @generated from field: sunrise.swap.RouteResultParallel parallel = 5;
     */
    value: RouteResultParallel;
    case: "parallel";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message sunrise.swap.RouteResult.
 * Use `create(RouteResultSchema)` to create a new message.
 */
export const RouteResultSchema: GenMessage<RouteResult> = /*@__PURE__*/
  messageDesc(file_sunrise_swap_route, 7);

