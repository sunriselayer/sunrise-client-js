// @generated by protoc-gen-es v2.2.2 with parameter "target=ts"
// @generated from file sunrise/swap/v1/route.proto (package sunrise.swap.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Coin } from "../../../cosmos/base/v1beta1/coin_pb";
import { file_cosmos_base_v1beta1_coin } from "../../../cosmos/base/v1beta1/coin_pb";
import { file_cosmos_proto_cosmos } from "../../../cosmos_proto/cosmos_pb";
import { file_gogoproto_gogo } from "../../../gogoproto/gogo_pb";
import { file_amino_amino } from "../../../amino/amino_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file sunrise/swap/v1/route.proto.
 */
export const file_sunrise_swap_v1_route: GenFile = /*@__PURE__*/
  fileDesc("ChtzdW5yaXNlL3N3YXAvdjEvcm91dGUucHJvdG8SD3N1bnJpc2Uuc3dhcC52MSIcCglSb3V0ZVBvb2wSDwoHcG9vbF9pZBgBIAEoBCI7CgtSb3V0ZVNlcmllcxIsCgZyb3V0ZXMYASADKAsyFi5zdW5yaXNlLnN3YXAudjEuUm91dGVCBMjeHwAiXgoNUm91dGVQYXJhbGxlbBIsCgZyb3V0ZXMYASADKAsyFi5zdW5yaXNlLnN3YXAudjEuUm91dGVCBMjeHwASHwoHd2VpZ2h0cxgCIAMoCUIO0rQtCmNvc21vcy5EZWMivgIKBVJvdXRlEhAKCGRlbm9tX2luGAEgASgJEhEKCWRlbm9tX291dBgCIAEoCRJHCgRwb29sGAMgASgLMhouc3VucmlzZS5zd2FwLnYxLlJvdXRlUG9vbEIbsuewKhZzdW5yaXNlL3N3YXAvUm91dGVQb29sSAASTQoGc2VyaWVzGAQgASgLMhwuc3VucmlzZS5zd2FwLnYxLlJvdXRlU2VyaWVzQh2y57AqGHN1bnJpc2Uvc3dhcC9Sb3V0ZVNlcmllc0gAElMKCHBhcmFsbGVsGAUgASgLMh4uc3VucmlzZS5zd2FwLnYxLlJvdXRlUGFyYWxsZWxCH7LnsCoac3VucmlzZS9zd2FwL1JvdXRlUGFyYWxsZWxIADoXiuewKhJzdW5yaXNlL3N3YXAvUm91dGVCCgoIc3RyYXRlZ3kiIgoPUm91dGVSZXN1bHRQb29sEg8KB3Bvb2xfaWQYASABKAQiTgoRUm91dGVSZXN1bHRTZXJpZXMSOQoNcm91dGVfcmVzdWx0cxgBIAMoCzIcLnN1bnJpc2Uuc3dhcC52MS5Sb3V0ZVJlc3VsdEIEyN4fACJQChNSb3V0ZVJlc3VsdFBhcmFsbGVsEjkKDXJvdXRlX3Jlc3VsdHMYASADKAsyHC5zdW5yaXNlLnN3YXAudjEuUm91dGVSZXN1bHRCBMjeHwAiogIKC1JvdXRlUmVzdWx0EjEKCHRva2VuX2luGAEgASgLMhkuY29zbW9zLmJhc2UudjFiZXRhMS5Db2luQgTI3h8AEjIKCXRva2VuX291dBgCIAEoCzIZLmNvc21vcy5iYXNlLnYxYmV0YTEuQ29pbkIEyN4fABIwCgRwb29sGAMgASgLMiAuc3VucmlzZS5zd2FwLnYxLlJvdXRlUmVzdWx0UG9vbEgAEjQKBnNlcmllcxgEIAEoCzIiLnN1bnJpc2Uuc3dhcC52MS5Sb3V0ZVJlc3VsdFNlcmllc0gAEjgKCHBhcmFsbGVsGAUgASgLMiQuc3VucmlzZS5zd2FwLnYxLlJvdXRlUmVzdWx0UGFyYWxsZWxIAEIKCghzdHJhdGVneUKtAQoTY29tLnN1bnJpc2Uuc3dhcC52MUIKUm91dGVQcm90b1ABWixnaXRodWIuY29tL3N1bnJpc2VsYXllci9zdW5yaXNlL3gvc3dhcC90eXBlc6ICA1NTWKoCD1N1bnJpc2UuU3dhcC5WMcoCD1N1bnJpc2VcU3dhcFxWMeICG1N1bnJpc2VcU3dhcFxWMVxHUEJNZXRhZGF0YeoCEVN1bnJpc2U6OlN3YXA6OlYxYgZwcm90bzM", [file_cosmos_base_v1beta1_coin, file_cosmos_proto_cosmos, file_gogoproto_gogo, file_amino_amino]);

/**
 * RoutePool
 *
 * @generated from message sunrise.swap.v1.RoutePool
 */
export type RoutePool = Message<"sunrise.swap.v1.RoutePool"> & {
  /**
   * @generated from field: uint64 pool_id = 1;
   */
  poolId: bigint;
};

/**
 * Describes the message sunrise.swap.v1.RoutePool.
 * Use `create(RoutePoolSchema)` to create a new message.
 */
export const RoutePoolSchema: GenMessage<RoutePool> = /*@__PURE__*/
  messageDesc(file_sunrise_swap_v1_route, 0);

/**
 * RouteSeries
 *
 * @generated from message sunrise.swap.v1.RouteSeries
 */
export type RouteSeries = Message<"sunrise.swap.v1.RouteSeries"> & {
  /**
   * @generated from field: repeated sunrise.swap.v1.Route routes = 1;
   */
  routes: Route[];
};

/**
 * Describes the message sunrise.swap.v1.RouteSeries.
 * Use `create(RouteSeriesSchema)` to create a new message.
 */
export const RouteSeriesSchema: GenMessage<RouteSeries> = /*@__PURE__*/
  messageDesc(file_sunrise_swap_v1_route, 1);

/**
 * RouteParallel
 *
 * @generated from message sunrise.swap.v1.RouteParallel
 */
export type RouteParallel = Message<"sunrise.swap.v1.RouteParallel"> & {
  /**
   * @generated from field: repeated sunrise.swap.v1.Route routes = 1;
   */
  routes: Route[];

  /**
   * @generated from field: repeated string weights = 2;
   */
  weights: string[];
};

/**
 * Describes the message sunrise.swap.v1.RouteParallel.
 * Use `create(RouteParallelSchema)` to create a new message.
 */
export const RouteParallelSchema: GenMessage<RouteParallel> = /*@__PURE__*/
  messageDesc(file_sunrise_swap_v1_route, 2);

/**
 * Route
 *
 * @generated from message sunrise.swap.v1.Route
 */
export type Route = Message<"sunrise.swap.v1.Route"> & {
  /**
   * @generated from field: string denom_in = 1;
   */
  denomIn: string;

  /**
   * @generated from field: string denom_out = 2;
   */
  denomOut: string;

  /**
   * strategy
   *
   * @generated from oneof sunrise.swap.v1.Route.strategy
   */
  strategy: {
    /**
     * @generated from field: sunrise.swap.v1.RoutePool pool = 3;
     */
    value: RoutePool;
    case: "pool";
  } | {
    /**
     * @generated from field: sunrise.swap.v1.RouteSeries series = 4;
     */
    value: RouteSeries;
    case: "series";
  } | {
    /**
     * @generated from field: sunrise.swap.v1.RouteParallel parallel = 5;
     */
    value: RouteParallel;
    case: "parallel";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message sunrise.swap.v1.Route.
 * Use `create(RouteSchema)` to create a new message.
 */
export const RouteSchema: GenMessage<Route> = /*@__PURE__*/
  messageDesc(file_sunrise_swap_v1_route, 3);

/**
 * RouteResultPool
 *
 * @generated from message sunrise.swap.v1.RouteResultPool
 */
export type RouteResultPool = Message<"sunrise.swap.v1.RouteResultPool"> & {
  /**
   * @generated from field: uint64 pool_id = 1;
   */
  poolId: bigint;
};

/**
 * Describes the message sunrise.swap.v1.RouteResultPool.
 * Use `create(RouteResultPoolSchema)` to create a new message.
 */
export const RouteResultPoolSchema: GenMessage<RouteResultPool> = /*@__PURE__*/
  messageDesc(file_sunrise_swap_v1_route, 4);

/**
 * RouteResultSeries
 *
 * @generated from message sunrise.swap.v1.RouteResultSeries
 */
export type RouteResultSeries = Message<"sunrise.swap.v1.RouteResultSeries"> & {
  /**
   * @generated from field: repeated sunrise.swap.v1.RouteResult route_results = 1;
   */
  routeResults: RouteResult[];
};

/**
 * Describes the message sunrise.swap.v1.RouteResultSeries.
 * Use `create(RouteResultSeriesSchema)` to create a new message.
 */
export const RouteResultSeriesSchema: GenMessage<RouteResultSeries> = /*@__PURE__*/
  messageDesc(file_sunrise_swap_v1_route, 5);

/**
 * RouteResultParallel
 *
 * @generated from message sunrise.swap.v1.RouteResultParallel
 */
export type RouteResultParallel = Message<"sunrise.swap.v1.RouteResultParallel"> & {
  /**
   * @generated from field: repeated sunrise.swap.v1.RouteResult route_results = 1;
   */
  routeResults: RouteResult[];
};

/**
 * Describes the message sunrise.swap.v1.RouteResultParallel.
 * Use `create(RouteResultParallelSchema)` to create a new message.
 */
export const RouteResultParallelSchema: GenMessage<RouteResultParallel> = /*@__PURE__*/
  messageDesc(file_sunrise_swap_v1_route, 6);

/**
 * RouteResult
 *
 * @generated from message sunrise.swap.v1.RouteResult
 */
export type RouteResult = Message<"sunrise.swap.v1.RouteResult"> & {
  /**
   * @generated from field: cosmos.base.v1beta1.Coin token_in = 1;
   */
  tokenIn?: Coin;

  /**
   * @generated from field: cosmos.base.v1beta1.Coin token_out = 2;
   */
  tokenOut?: Coin;

  /**
   * strategy
   *
   * @generated from oneof sunrise.swap.v1.RouteResult.strategy
   */
  strategy: {
    /**
     * @generated from field: sunrise.swap.v1.RouteResultPool pool = 3;
     */
    value: RouteResultPool;
    case: "pool";
  } | {
    /**
     * @generated from field: sunrise.swap.v1.RouteResultSeries series = 4;
     */
    value: RouteResultSeries;
    case: "series";
  } | {
    /**
     * @generated from field: sunrise.swap.v1.RouteResultParallel parallel = 5;
     */
    value: RouteResultParallel;
    case: "parallel";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message sunrise.swap.v1.RouteResult.
 * Use `create(RouteResultSchema)` to create a new message.
 */
export const RouteResultSchema: GenMessage<RouteResult> = /*@__PURE__*/
  messageDesc(file_sunrise_swap_v1_route, 7);

