// @generated by protoc-gen-es v2.2.2 with parameter "target=ts"
// @generated from file sunrise/swap/v1/query.proto (package sunrise.swap.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { PageRequest, PageResponse } from "../../../cosmos/base/query/v1beta1/pagination_pb";
import { file_cosmos_base_query_v1beta1_pagination } from "../../../cosmos/base/query/v1beta1/pagination_pb";
import { file_cosmos_proto_cosmos } from "../../../cosmos_proto/cosmos_pb";
import { file_gogoproto_gogo } from "../../../gogoproto/gogo_pb";
import { file_google_api_annotations } from "../../../google/api/annotations_pb";
import type { IncomingInFlightPacket, OutgoingInFlightPacket } from "./in_flight_packet_pb";
import { file_sunrise_swap_v1_in_flight_packet } from "./in_flight_packet_pb";
import type { Params } from "./params_pb";
import { file_sunrise_swap_v1_params } from "./params_pb";
import type { Route, RouteResult } from "./route_pb";
import { file_sunrise_swap_v1_route } from "./route_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file sunrise/swap/v1/query.proto.
 */
export const file_sunrise_swap_v1_query: GenFile = /*@__PURE__*/
  fileDesc("ChtzdW5yaXNlL3N3YXAvdjEvcXVlcnkucHJvdG8SD3N1bnJpc2Uuc3dhcC52MSIUChJRdWVyeVBhcmFtc1JlcXVlc3QiRAoTUXVlcnlQYXJhbXNSZXNwb25zZRItCgZwYXJhbXMYASABKAsyFy5zdW5yaXNlLnN3YXAudjEuUGFyYW1zQgTI3h8AImMKIlF1ZXJ5SW5jb21pbmdJbkZsaWdodFBhY2tldFJlcXVlc3QSEwoLc3JjX3BvcnRfaWQYASABKAkSFgoOc3JjX2NoYW5uZWxfaWQYAiABKAkSEAoIc2VxdWVuY2UYAyABKAQiZAojUXVlcnlJbmNvbWluZ0luRmxpZ2h0UGFja2V0UmVzcG9uc2USPQoGcGFja2V0GAEgASgLMicuc3VucmlzZS5zd2FwLnYxLkluY29taW5nSW5GbGlnaHRQYWNrZXRCBMjeHwAiYQojUXVlcnlJbmNvbWluZ0luRmxpZ2h0UGFja2V0c1JlcXVlc3QSOgoKcGFnaW5hdGlvbhgBIAEoCzImLmNvc21vcy5iYXNlLnF1ZXJ5LnYxYmV0YTEuUGFnZVJlcXVlc3QiowEKJFF1ZXJ5SW5jb21pbmdJbkZsaWdodFBhY2tldHNSZXNwb25zZRI+CgdwYWNrZXRzGAEgAygLMicuc3VucmlzZS5zd2FwLnYxLkluY29taW5nSW5GbGlnaHRQYWNrZXRCBMjeHwASOwoKcGFnaW5hdGlvbhgCIAEoCzInLmNvc21vcy5iYXNlLnF1ZXJ5LnYxYmV0YTEuUGFnZVJlc3BvbnNlImMKIlF1ZXJ5T3V0Z29pbmdJbkZsaWdodFBhY2tldFJlcXVlc3QSEwoLc3JjX3BvcnRfaWQYASABKAkSFgoOc3JjX2NoYW5uZWxfaWQYAiABKAkSEAoIc2VxdWVuY2UYAyABKAQiZAojUXVlcnlPdXRnb2luZ0luRmxpZ2h0UGFja2V0UmVzcG9uc2USPQoGcGFja2V0GAEgASgLMicuc3VucmlzZS5zd2FwLnYxLk91dGdvaW5nSW5GbGlnaHRQYWNrZXRCBMjeHwAiYQojUXVlcnlPdXRnb2luZ0luRmxpZ2h0UGFja2V0c1JlcXVlc3QSOgoKcGFnaW5hdGlvbhgBIAEoCzImLmNvc21vcy5iYXNlLnF1ZXJ5LnYxYmV0YTEuUGFnZVJlcXVlc3QiowEKJFF1ZXJ5T3V0Z29pbmdJbkZsaWdodFBhY2tldHNSZXNwb25zZRI+CgdwYWNrZXRzGAEgAygLMicuc3VucmlzZS5zd2FwLnYxLk91dGdvaW5nSW5GbGlnaHRQYWNrZXRCBMjeHwASOwoKcGFnaW5hdGlvbhgCIAEoCzInLmNvc21vcy5iYXNlLnF1ZXJ5LnYxYmV0YTEuUGFnZVJlc3BvbnNlIn8KKFF1ZXJ5Q2FsY3VsYXRpb25Td2FwRXhhY3RBbW91bnRJblJlcXVlc3QSGQoRaGFzX2ludGVyZmFjZV9mZWUYASABKAgSJQoFcm91dGUYAiABKAsyFi5zdW5yaXNlLnN3YXAudjEuUm91dGUSEQoJYW1vdW50X2luGAMgASgJIu0BCilRdWVyeUNhbGN1bGF0aW9uU3dhcEV4YWN0QW1vdW50SW5SZXNwb25zZRIyCgZyZXN1bHQYASABKAsyHC5zdW5yaXNlLnN3YXAudjEuUm91dGVSZXN1bHRCBMjeHwASSwoWaW50ZXJmYWNlX3Byb3ZpZGVyX2ZlZRgCIAEoCUIryN4fANreHxVjb3Ntb3NzZGsuaW8vbWF0aC5JbnTStC0KY29zbW9zLkludBI/CgphbW91bnRfb3V0GAMgASgJQivI3h8A2t4fFWNvc21vc3Nkay5pby9tYXRoLkludNK0LQpjb3Ntb3MuSW50IoEBCilRdWVyeUNhbGN1bGF0aW9uU3dhcEV4YWN0QW1vdW50T3V0UmVxdWVzdBIZChFoYXNfaW50ZXJmYWNlX2ZlZRgBIAEoCBIlCgVyb3V0ZRgCIAEoCzIWLnN1bnJpc2Uuc3dhcC52MS5Sb3V0ZRISCgphbW91bnRfb3V0GAMgASgJIu0BCipRdWVyeUNhbGN1bGF0aW9uU3dhcEV4YWN0QW1vdW50T3V0UmVzcG9uc2USMgoGcmVzdWx0GAEgASgLMhwuc3VucmlzZS5zd2FwLnYxLlJvdXRlUmVzdWx0QgTI3h8AEksKFmludGVyZmFjZV9wcm92aWRlcl9mZWUYAiABKAlCK8jeHwDa3h8VY29zbW9zc2RrLmlvL21hdGguSW500rQtCmNvc21vcy5JbnQSPgoJYW1vdW50X2luGAMgASgJQivI3h8A2t4fFWNvc21vc3Nkay5pby9tYXRoLkludNK0LQpjb3Ntb3MuSW50MvUKCgVRdWVyeRJ0CgZQYXJhbXMSIy5zdW5yaXNlLnN3YXAudjEuUXVlcnlQYXJhbXNSZXF1ZXN0GiQuc3VucmlzZS5zd2FwLnYxLlF1ZXJ5UGFyYW1zUmVzcG9uc2UiH4LT5JMCGRIXL3N1bnJpc2Uvc3dhcC92MS9wYXJhbXMS4gEKFkluY29taW5nSW5GbGlnaHRQYWNrZXQSMy5zdW5yaXNlLnN3YXAudjEuUXVlcnlJbmNvbWluZ0luRmxpZ2h0UGFja2V0UmVxdWVzdBo0LnN1bnJpc2Uuc3dhcC52MS5RdWVyeUluY29taW5nSW5GbGlnaHRQYWNrZXRSZXNwb25zZSJdgtPkkwJXElUvc3VucmlzZS9zd2FwL3YxL2luLWZsaWdodC1wYWNrZXRzL2luY29taW5nL3tzcmNfcG9ydF9pZH0ve3NyY19jaGFubmVsX2lkfS97c2VxdWVuY2V9ErsBChdJbmNvbWluZ0luRmxpZ2h0UGFja2V0cxI0LnN1bnJpc2Uuc3dhcC52MS5RdWVyeUluY29taW5nSW5GbGlnaHRQYWNrZXRzUmVxdWVzdBo1LnN1bnJpc2Uuc3dhcC52MS5RdWVyeUluY29taW5nSW5GbGlnaHRQYWNrZXRzUmVzcG9uc2UiM4LT5JMCLRIrL3N1bnJpc2Uvc3dhcC92MS9pbi1mbGlnaHQtcGFja2V0cy9pbmNvbWluZxLiAQoWT3V0Z29pbmdJbkZsaWdodFBhY2tldBIzLnN1bnJpc2Uuc3dhcC52MS5RdWVyeU91dGdvaW5nSW5GbGlnaHRQYWNrZXRSZXF1ZXN0GjQuc3VucmlzZS5zd2FwLnYxLlF1ZXJ5T3V0Z29pbmdJbkZsaWdodFBhY2tldFJlc3BvbnNlIl2C0+STAlcSVS9zdW5yaXNlL3N3YXAvdjEvaW4tZmxpZ2h0LXBhY2tldHMvb3V0Z29pbmcve3NyY19wb3J0X2lkfS97c3JjX2NoYW5uZWxfaWR9L3tzZXF1ZW5jZX0SuwEKF091dGdvaW5nSW5GbGlnaHRQYWNrZXRzEjQuc3VucmlzZS5zd2FwLnYxLlF1ZXJ5T3V0Z29pbmdJbkZsaWdodFBhY2tldHNSZXF1ZXN0GjUuc3VucmlzZS5zd2FwLnYxLlF1ZXJ5T3V0Z29pbmdJbkZsaWdodFBhY2tldHNSZXNwb25zZSIzgtPkkwItEisvc3VucmlzZS9zd2FwL3YxL2luLWZsaWdodC1wYWNrZXRzL291dGdvaW5nEtQBChxDYWxjdWxhdGlvblN3YXBFeGFjdEFtb3VudEluEjkuc3VucmlzZS5zd2FwLnYxLlF1ZXJ5Q2FsY3VsYXRpb25Td2FwRXhhY3RBbW91bnRJblJlcXVlc3QaOi5zdW5yaXNlLnN3YXAudjEuUXVlcnlDYWxjdWxhdGlvblN3YXBFeGFjdEFtb3VudEluUmVzcG9uc2UiPYLT5JMCNzoBKiIyL3N1bnJpc2Uvc3dhcC92MS9jYWxjdWxhdGlvbnMvc3dhcC1leGFjdC1hbW91bnQtaW4S2AEKHUNhbGN1bGF0aW9uU3dhcEV4YWN0QW1vdW50T3V0Ejouc3VucmlzZS5zd2FwLnYxLlF1ZXJ5Q2FsY3VsYXRpb25Td2FwRXhhY3RBbW91bnRPdXRSZXF1ZXN0Gjsuc3VucmlzZS5zd2FwLnYxLlF1ZXJ5Q2FsY3VsYXRpb25Td2FwRXhhY3RBbW91bnRPdXRSZXNwb25zZSI+gtPkkwI4OgEqIjMvc3VucmlzZS9zd2FwL3YxL2NhbGN1bGF0aW9ucy9zd2FwLWV4YWN0LWFtb3VudC1vdXRCrQEKE2NvbS5zdW5yaXNlLnN3YXAudjFCClF1ZXJ5UHJvdG9QAVosZ2l0aHViLmNvbS9zdW5yaXNlbGF5ZXIvc3VucmlzZS94L3N3YXAvdHlwZXOiAgNTU1iqAg9TdW5yaXNlLlN3YXAuVjHKAg9TdW5yaXNlXFN3YXBcVjHiAhtTdW5yaXNlXFN3YXBcVjFcR1BCTWV0YWRhdGHqAhFTdW5yaXNlOjpTd2FwOjpWMWIGcHJvdG8z", [file_cosmos_base_query_v1beta1_pagination, file_cosmos_proto_cosmos, file_gogoproto_gogo, file_google_api_annotations, file_sunrise_swap_v1_in_flight_packet, file_sunrise_swap_v1_params, file_sunrise_swap_v1_route]);

/**
 * QueryParamsRequest is request type for the Query/Params RPC method.
 *
 * @generated from message sunrise.swap.v1.QueryParamsRequest
 */
export type QueryParamsRequest = Message<"sunrise.swap.v1.QueryParamsRequest"> & {
};

/**
 * Describes the message sunrise.swap.v1.QueryParamsRequest.
 * Use `create(QueryParamsRequestSchema)` to create a new message.
 */
export const QueryParamsRequestSchema: GenMessage<QueryParamsRequest> = /*@__PURE__*/
  messageDesc(file_sunrise_swap_v1_query, 0);

/**
 * QueryParamsResponse is response type for the Query/Params RPC method.
 *
 * @generated from message sunrise.swap.v1.QueryParamsResponse
 */
export type QueryParamsResponse = Message<"sunrise.swap.v1.QueryParamsResponse"> & {
  /**
   * params holds all the parameters of this module.
   *
   * @generated from field: sunrise.swap.v1.Params params = 1;
   */
  params?: Params;
};

/**
 * Describes the message sunrise.swap.v1.QueryParamsResponse.
 * Use `create(QueryParamsResponseSchema)` to create a new message.
 */
export const QueryParamsResponseSchema: GenMessage<QueryParamsResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_swap_v1_query, 1);

/**
 * QueryIncomingInFlightPacketRequest
 *
 * @generated from message sunrise.swap.v1.QueryIncomingInFlightPacketRequest
 */
export type QueryIncomingInFlightPacketRequest = Message<"sunrise.swap.v1.QueryIncomingInFlightPacketRequest"> & {
  /**
   * @generated from field: string src_port_id = 1;
   */
  srcPortId: string;

  /**
   * @generated from field: string src_channel_id = 2;
   */
  srcChannelId: string;

  /**
   * @generated from field: uint64 sequence = 3;
   */
  sequence: bigint;
};

/**
 * Describes the message sunrise.swap.v1.QueryIncomingInFlightPacketRequest.
 * Use `create(QueryIncomingInFlightPacketRequestSchema)` to create a new message.
 */
export const QueryIncomingInFlightPacketRequestSchema: GenMessage<QueryIncomingInFlightPacketRequest> = /*@__PURE__*/
  messageDesc(file_sunrise_swap_v1_query, 2);

/**
 * QueryIncomingInFlightPacketResponse
 *
 * @generated from message sunrise.swap.v1.QueryIncomingInFlightPacketResponse
 */
export type QueryIncomingInFlightPacketResponse = Message<"sunrise.swap.v1.QueryIncomingInFlightPacketResponse"> & {
  /**
   * @generated from field: sunrise.swap.v1.IncomingInFlightPacket packet = 1;
   */
  packet?: IncomingInFlightPacket;
};

/**
 * Describes the message sunrise.swap.v1.QueryIncomingInFlightPacketResponse.
 * Use `create(QueryIncomingInFlightPacketResponseSchema)` to create a new message.
 */
export const QueryIncomingInFlightPacketResponseSchema: GenMessage<QueryIncomingInFlightPacketResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_swap_v1_query, 3);

/**
 * QueryIncomingInFlightPacketsRequest
 *
 * @generated from message sunrise.swap.v1.QueryIncomingInFlightPacketsRequest
 */
export type QueryIncomingInFlightPacketsRequest = Message<"sunrise.swap.v1.QueryIncomingInFlightPacketsRequest"> & {
  /**
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
   */
  pagination?: PageRequest;
};

/**
 * Describes the message sunrise.swap.v1.QueryIncomingInFlightPacketsRequest.
 * Use `create(QueryIncomingInFlightPacketsRequestSchema)` to create a new message.
 */
export const QueryIncomingInFlightPacketsRequestSchema: GenMessage<QueryIncomingInFlightPacketsRequest> = /*@__PURE__*/
  messageDesc(file_sunrise_swap_v1_query, 4);

/**
 * QueryIncomingInFlightPacketsResponse
 *
 * @generated from message sunrise.swap.v1.QueryIncomingInFlightPacketsResponse
 */
export type QueryIncomingInFlightPacketsResponse = Message<"sunrise.swap.v1.QueryIncomingInFlightPacketsResponse"> & {
  /**
   * @generated from field: repeated sunrise.swap.v1.IncomingInFlightPacket packets = 1;
   */
  packets: IncomingInFlightPacket[];

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;
};

/**
 * Describes the message sunrise.swap.v1.QueryIncomingInFlightPacketsResponse.
 * Use `create(QueryIncomingInFlightPacketsResponseSchema)` to create a new message.
 */
export const QueryIncomingInFlightPacketsResponseSchema: GenMessage<QueryIncomingInFlightPacketsResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_swap_v1_query, 5);

/**
 * QueryOutgoingInFlightPacketRequest
 *
 * @generated from message sunrise.swap.v1.QueryOutgoingInFlightPacketRequest
 */
export type QueryOutgoingInFlightPacketRequest = Message<"sunrise.swap.v1.QueryOutgoingInFlightPacketRequest"> & {
  /**
   * @generated from field: string src_port_id = 1;
   */
  srcPortId: string;

  /**
   * @generated from field: string src_channel_id = 2;
   */
  srcChannelId: string;

  /**
   * @generated from field: uint64 sequence = 3;
   */
  sequence: bigint;
};

/**
 * Describes the message sunrise.swap.v1.QueryOutgoingInFlightPacketRequest.
 * Use `create(QueryOutgoingInFlightPacketRequestSchema)` to create a new message.
 */
export const QueryOutgoingInFlightPacketRequestSchema: GenMessage<QueryOutgoingInFlightPacketRequest> = /*@__PURE__*/
  messageDesc(file_sunrise_swap_v1_query, 6);

/**
 * QueryOutgoingInFlightPacketResponse
 *
 * @generated from message sunrise.swap.v1.QueryOutgoingInFlightPacketResponse
 */
export type QueryOutgoingInFlightPacketResponse = Message<"sunrise.swap.v1.QueryOutgoingInFlightPacketResponse"> & {
  /**
   * @generated from field: sunrise.swap.v1.OutgoingInFlightPacket packet = 1;
   */
  packet?: OutgoingInFlightPacket;
};

/**
 * Describes the message sunrise.swap.v1.QueryOutgoingInFlightPacketResponse.
 * Use `create(QueryOutgoingInFlightPacketResponseSchema)` to create a new message.
 */
export const QueryOutgoingInFlightPacketResponseSchema: GenMessage<QueryOutgoingInFlightPacketResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_swap_v1_query, 7);

/**
 * QueryOutgoingInFlightPacketsRequest
 *
 * @generated from message sunrise.swap.v1.QueryOutgoingInFlightPacketsRequest
 */
export type QueryOutgoingInFlightPacketsRequest = Message<"sunrise.swap.v1.QueryOutgoingInFlightPacketsRequest"> & {
  /**
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
   */
  pagination?: PageRequest;
};

/**
 * Describes the message sunrise.swap.v1.QueryOutgoingInFlightPacketsRequest.
 * Use `create(QueryOutgoingInFlightPacketsRequestSchema)` to create a new message.
 */
export const QueryOutgoingInFlightPacketsRequestSchema: GenMessage<QueryOutgoingInFlightPacketsRequest> = /*@__PURE__*/
  messageDesc(file_sunrise_swap_v1_query, 8);

/**
 * QueryOutgoingInFlightPacketsResponse
 *
 * @generated from message sunrise.swap.v1.QueryOutgoingInFlightPacketsResponse
 */
export type QueryOutgoingInFlightPacketsResponse = Message<"sunrise.swap.v1.QueryOutgoingInFlightPacketsResponse"> & {
  /**
   * @generated from field: repeated sunrise.swap.v1.OutgoingInFlightPacket packets = 1;
   */
  packets: OutgoingInFlightPacket[];

  /**
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;
};

/**
 * Describes the message sunrise.swap.v1.QueryOutgoingInFlightPacketsResponse.
 * Use `create(QueryOutgoingInFlightPacketsResponseSchema)` to create a new message.
 */
export const QueryOutgoingInFlightPacketsResponseSchema: GenMessage<QueryOutgoingInFlightPacketsResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_swap_v1_query, 9);

/**
 * QueryCalculationSwapExactAmountInRequest
 *
 * @generated from message sunrise.swap.v1.QueryCalculationSwapExactAmountInRequest
 */
export type QueryCalculationSwapExactAmountInRequest = Message<"sunrise.swap.v1.QueryCalculationSwapExactAmountInRequest"> & {
  /**
   * @generated from field: bool has_interface_fee = 1;
   */
  hasInterfaceFee: boolean;

  /**
   * @generated from field: sunrise.swap.v1.Route route = 2;
   */
  route?: Route;

  /**
   * @generated from field: string amount_in = 3;
   */
  amountIn: string;
};

/**
 * Describes the message sunrise.swap.v1.QueryCalculationSwapExactAmountInRequest.
 * Use `create(QueryCalculationSwapExactAmountInRequestSchema)` to create a new message.
 */
export const QueryCalculationSwapExactAmountInRequestSchema: GenMessage<QueryCalculationSwapExactAmountInRequest> = /*@__PURE__*/
  messageDesc(file_sunrise_swap_v1_query, 10);

/**
 * QueryCalculationSwapExactAmountInResponse
 *
 * @generated from message sunrise.swap.v1.QueryCalculationSwapExactAmountInResponse
 */
export type QueryCalculationSwapExactAmountInResponse = Message<"sunrise.swap.v1.QueryCalculationSwapExactAmountInResponse"> & {
  /**
   * @generated from field: sunrise.swap.v1.RouteResult result = 1;
   */
  result?: RouteResult;

  /**
   * @generated from field: string interface_provider_fee = 2;
   */
  interfaceProviderFee: string;

  /**
   * @generated from field: string amount_out = 3;
   */
  amountOut: string;
};

/**
 * Describes the message sunrise.swap.v1.QueryCalculationSwapExactAmountInResponse.
 * Use `create(QueryCalculationSwapExactAmountInResponseSchema)` to create a new message.
 */
export const QueryCalculationSwapExactAmountInResponseSchema: GenMessage<QueryCalculationSwapExactAmountInResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_swap_v1_query, 11);

/**
 * QueryCalculationSwapExactAmountOutRequest
 *
 * @generated from message sunrise.swap.v1.QueryCalculationSwapExactAmountOutRequest
 */
export type QueryCalculationSwapExactAmountOutRequest = Message<"sunrise.swap.v1.QueryCalculationSwapExactAmountOutRequest"> & {
  /**
   * @generated from field: bool has_interface_fee = 1;
   */
  hasInterfaceFee: boolean;

  /**
   * @generated from field: sunrise.swap.v1.Route route = 2;
   */
  route?: Route;

  /**
   * @generated from field: string amount_out = 3;
   */
  amountOut: string;
};

/**
 * Describes the message sunrise.swap.v1.QueryCalculationSwapExactAmountOutRequest.
 * Use `create(QueryCalculationSwapExactAmountOutRequestSchema)` to create a new message.
 */
export const QueryCalculationSwapExactAmountOutRequestSchema: GenMessage<QueryCalculationSwapExactAmountOutRequest> = /*@__PURE__*/
  messageDesc(file_sunrise_swap_v1_query, 12);

/**
 * QueryCalculationSwapExactAmountOutResponse
 *
 * @generated from message sunrise.swap.v1.QueryCalculationSwapExactAmountOutResponse
 */
export type QueryCalculationSwapExactAmountOutResponse = Message<"sunrise.swap.v1.QueryCalculationSwapExactAmountOutResponse"> & {
  /**
   * @generated from field: sunrise.swap.v1.RouteResult result = 1;
   */
  result?: RouteResult;

  /**
   * @generated from field: string interface_provider_fee = 2;
   */
  interfaceProviderFee: string;

  /**
   * @generated from field: string amount_in = 3;
   */
  amountIn: string;
};

/**
 * Describes the message sunrise.swap.v1.QueryCalculationSwapExactAmountOutResponse.
 * Use `create(QueryCalculationSwapExactAmountOutResponseSchema)` to create a new message.
 */
export const QueryCalculationSwapExactAmountOutResponseSchema: GenMessage<QueryCalculationSwapExactAmountOutResponse> = /*@__PURE__*/
  messageDesc(file_sunrise_swap_v1_query, 13);

/**
 * Query defines the gRPC querier service.
 *
 * @generated from service sunrise.swap.v1.Query
 */
export const Query: GenService<{
  /**
   * Parameters queries the parameters of the module.
   *
   * @generated from rpc sunrise.swap.v1.Query.Params
   */
  params: {
    methodKind: "unary";
    input: typeof QueryParamsRequestSchema;
    output: typeof QueryParamsResponseSchema;
  },
  /**
   * IncomingInFlightPacket
   *
   * @generated from rpc sunrise.swap.v1.Query.IncomingInFlightPacket
   */
  incomingInFlightPacket: {
    methodKind: "unary";
    input: typeof QueryIncomingInFlightPacketRequestSchema;
    output: typeof QueryIncomingInFlightPacketResponseSchema;
  },
  /**
   * IncomingInFlightPackets
   *
   * @generated from rpc sunrise.swap.v1.Query.IncomingInFlightPackets
   */
  incomingInFlightPackets: {
    methodKind: "unary";
    input: typeof QueryIncomingInFlightPacketsRequestSchema;
    output: typeof QueryIncomingInFlightPacketsResponseSchema;
  },
  /**
   * OutgoingInFlightPacket
   *
   * @generated from rpc sunrise.swap.v1.Query.OutgoingInFlightPacket
   */
  outgoingInFlightPacket: {
    methodKind: "unary";
    input: typeof QueryOutgoingInFlightPacketRequestSchema;
    output: typeof QueryOutgoingInFlightPacketResponseSchema;
  },
  /**
   * OutgoingInFlightPackets
   *
   * @generated from rpc sunrise.swap.v1.Query.OutgoingInFlightPackets
   */
  outgoingInFlightPackets: {
    methodKind: "unary";
    input: typeof QueryOutgoingInFlightPacketsRequestSchema;
    output: typeof QueryOutgoingInFlightPacketsResponseSchema;
  },
  /**
   * CalculationSwapExactAmountIn
   *
   * @generated from rpc sunrise.swap.v1.Query.CalculationSwapExactAmountIn
   */
  calculationSwapExactAmountIn: {
    methodKind: "unary";
    input: typeof QueryCalculationSwapExactAmountInRequestSchema;
    output: typeof QueryCalculationSwapExactAmountInResponseSchema;
  },
  /**
   * CalculationSwapExactAmountOut
   *
   * @generated from rpc sunrise.swap.v1.Query.CalculationSwapExactAmountOut
   */
  calculationSwapExactAmountOut: {
    methodKind: "unary";
    input: typeof QueryCalculationSwapExactAmountOutRequestSchema;
    output: typeof QueryCalculationSwapExactAmountOutResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_sunrise_swap_v1_query, 0);

