// @generated by protoc-gen-es v2.2.2 with parameter "target=ts"
// @generated from file cometbft/types/v2/validator.proto (package cometbft.types.v2, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { PublicKey } from "../../crypto/v1/keys_pb";
import { file_cometbft_crypto_v1_keys } from "../../crypto/v1/keys_pb";
import { file_gogoproto_gogo } from "../../../gogoproto/gogo_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file cometbft/types/v2/validator.proto.
 */
export const file_cometbft_types_v2_validator: GenFile = /*@__PURE__*/
  fileDesc("CiFjb21ldGJmdC90eXBlcy92Mi92YWxpZGF0b3IucHJvdG8SEWNvbWV0YmZ0LnR5cGVzLnYyIowBCgxWYWxpZGF0b3JTZXQSMAoKdmFsaWRhdG9ycxgBIAMoCzIcLmNvbWV0YmZ0LnR5cGVzLnYyLlZhbGlkYXRvchIuCghwcm9wb3NlchgCIAEoCzIcLmNvbWV0YmZ0LnR5cGVzLnYyLlZhbGlkYXRvchIaChJ0b3RhbF92b3RpbmdfcG93ZXIYAyABKAMirgEKCVZhbGlkYXRvchIPCgdhZGRyZXNzGAEgASgMEjIKB3B1Yl9rZXkYAiABKAsyHS5jb21ldGJmdC5jcnlwdG8udjEuUHVibGljS2V5QgIYARIUCgx2b3RpbmdfcG93ZXIYAyABKAMSGQoRcHJvcG9zZXJfcHJpb3JpdHkYBCABKAMSFQoNcHViX2tleV9ieXRlcxgFIAEoDBIUCgxwdWJfa2V5X3R5cGUYBiABKAkiVwoPU2ltcGxlVmFsaWRhdG9yEi4KB3B1Yl9rZXkYASABKAsyHS5jb21ldGJmdC5jcnlwdG8udjEuUHVibGljS2V5EhQKDHZvdGluZ19wb3dlchgCIAEoAyrXAQoLQmxvY2tJREZsYWcSMQoVQkxPQ0tfSURfRkxBR19VTktOT1dOEAAaFoqdIBJCbG9ja0lERmxhZ1Vua25vd24SLwoUQkxPQ0tfSURfRkxBR19BQlNFTlQQARoVip0gEUJsb2NrSURGbGFnQWJzZW50Ei8KFEJMT0NLX0lEX0ZMQUdfQ09NTUlUEAIaFYqdIBFCbG9ja0lERmxhZ0NvbW1pdBIpChFCTE9DS19JRF9GTEFHX05JTBADGhKKnSAOQmxvY2tJREZsYWdOaWwaCIijHgCopB4BQsEBChVjb20uY29tZXRiZnQudHlwZXMudjJCDlZhbGlkYXRvclByb3RvUAFaMmdpdGh1Yi5jb20vY29tZXRiZnQvY29tZXRiZnQvYXBpL2NvbWV0YmZ0L3R5cGVzL3YyogIDQ1RYqgIRQ29tZXRiZnQuVHlwZXMuVjLKAhFDb21ldGJmdFxUeXBlc1xWMuICHUNvbWV0YmZ0XFR5cGVzXFYyXEdQQk1ldGFkYXRh6gITQ29tZXRiZnQ6OlR5cGVzOjpWMmIGcHJvdG8z", [file_cometbft_crypto_v1_keys, file_gogoproto_gogo]);

/**
 * ValidatorSet defines a set of validators.
 *
 * @generated from message cometbft.types.v2.ValidatorSet
 */
export type ValidatorSet = Message<"cometbft.types.v2.ValidatorSet"> & {
  /**
   * @generated from field: repeated cometbft.types.v2.Validator validators = 1;
   */
  validators: Validator[];

  /**
   * @generated from field: cometbft.types.v2.Validator proposer = 2;
   */
  proposer?: Validator;

  /**
   * @generated from field: int64 total_voting_power = 3;
   */
  totalVotingPower: bigint;
};

/**
 * Describes the message cometbft.types.v2.ValidatorSet.
 * Use `create(ValidatorSetSchema)` to create a new message.
 */
export const ValidatorSetSchema: GenMessage<ValidatorSet> = /*@__PURE__*/
  messageDesc(file_cometbft_types_v2_validator, 0);

/**
 * Validator represents a node participating in the consensus protocol.
 *
 * @generated from message cometbft.types.v2.Validator
 */
export type Validator = Message<"cometbft.types.v2.Validator"> & {
  /**
   * @generated from field: bytes address = 1;
   */
  address: Uint8Array;

  /**
   * @generated from field: cometbft.crypto.v1.PublicKey pub_key = 2 [deprecated = true];
   * @deprecated
   */
  pubKey?: PublicKey;

  /**
   * @generated from field: int64 voting_power = 3;
   */
  votingPower: bigint;

  /**
   * @generated from field: int64 proposer_priority = 4;
   */
  proposerPriority: bigint;

  /**
   * @generated from field: bytes pub_key_bytes = 5;
   */
  pubKeyBytes: Uint8Array;

  /**
   * @generated from field: string pub_key_type = 6;
   */
  pubKeyType: string;
};

/**
 * Describes the message cometbft.types.v2.Validator.
 * Use `create(ValidatorSchema)` to create a new message.
 */
export const ValidatorSchema: GenMessage<Validator> = /*@__PURE__*/
  messageDesc(file_cometbft_types_v2_validator, 1);

/**
 * SimpleValidator is a Validator, which is serialized and hashed in consensus.
 * Address is removed because it's redundant with the pubkey.
 * Proposer priority is removed because it changes every round.
 *
 * @generated from message cometbft.types.v2.SimpleValidator
 */
export type SimpleValidator = Message<"cometbft.types.v2.SimpleValidator"> & {
  /**
   * @generated from field: cometbft.crypto.v1.PublicKey pub_key = 1;
   */
  pubKey?: PublicKey;

  /**
   * @generated from field: int64 voting_power = 2;
   */
  votingPower: bigint;
};

/**
 * Describes the message cometbft.types.v2.SimpleValidator.
 * Use `create(SimpleValidatorSchema)` to create a new message.
 */
export const SimpleValidatorSchema: GenMessage<SimpleValidator> = /*@__PURE__*/
  messageDesc(file_cometbft_types_v2_validator, 2);

/**
 * BlockIdFlag indicates which BlockID the signature is for
 *
 * @generated from enum cometbft.types.v2.BlockIDFlag
 */
export enum BlockIDFlag {
  /**
   * Indicates an error condition
   *
   * @generated from enum value: BLOCK_ID_FLAG_UNKNOWN = 0;
   */
  BLOCK_ID_FLAG_UNKNOWN = 0,

  /**
   * The vote was not received
   *
   * @generated from enum value: BLOCK_ID_FLAG_ABSENT = 1;
   */
  BLOCK_ID_FLAG_ABSENT = 1,

  /**
   * Voted for the block that received the majority
   *
   * @generated from enum value: BLOCK_ID_FLAG_COMMIT = 2;
   */
  BLOCK_ID_FLAG_COMMIT = 2,

  /**
   * Voted for nil
   *
   * @generated from enum value: BLOCK_ID_FLAG_NIL = 3;
   */
  BLOCK_ID_FLAG_NIL = 3,
}

/**
 * Describes the enum cometbft.types.v2.BlockIDFlag.
 */
export const BlockIDFlagSchema: GenEnum<BlockIDFlag> = /*@__PURE__*/
  enumDesc(file_cometbft_types_v2_validator, 0);

