// @generated by protoc-gen-es v2.2.2 with parameter "target=ts"
// @generated from file cosmos/bank/v1beta1/query.proto (package cosmos.bank.v1beta1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { PageRequest, PageResponse } from "../../base/query/v1beta1/pagination_pb";
import { file_cosmos_base_query_v1beta1_pagination } from "../../base/query/v1beta1/pagination_pb";
import { file_gogoproto_gogo } from "../../../gogoproto/gogo_pb";
import { file_google_api_annotations } from "../../../google/api/annotations_pb";
import type { Coin } from "../../base/v1beta1/coin_pb";
import { file_cosmos_base_v1beta1_coin } from "../../base/v1beta1/coin_pb";
import type { Metadata, Params, SendEnabled } from "./bank_pb";
import { file_cosmos_bank_v1beta1_bank } from "./bank_pb";
import { file_cosmos_proto_cosmos } from "../../../cosmos_proto/cosmos_pb";
import { file_cosmos_query_v1_query } from "../../query/v1/query_pb";
import { file_amino_amino } from "../../../amino/amino_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file cosmos/bank/v1beta1/query.proto.
 */
export const file_cosmos_bank_v1beta1_query: GenFile = /*@__PURE__*/
  fileDesc("Ch9jb3Ntb3MvYmFuay92MWJldGExL3F1ZXJ5LnByb3RvEhNjb3Ntb3MuYmFuay52MWJldGExIlkKE1F1ZXJ5QmFsYW5jZVJlcXVlc3QSKQoHYWRkcmVzcxgBIAEoCUIY0rQtFGNvc21vcy5BZGRyZXNzU3RyaW5nEg0KBWRlbm9tGAIgASgJOgiIoB8A6KAfACJCChRRdWVyeUJhbGFuY2VSZXNwb25zZRIqCgdiYWxhbmNlGAEgASgLMhkuY29zbW9zLmJhc2UudjFiZXRhMS5Db2luIrgBChdRdWVyeUFsbEJhbGFuY2VzUmVxdWVzdBIpCgdhZGRyZXNzGAEgASgJQhjStC0UY29zbW9zLkFkZHJlc3NTdHJpbmcSOgoKcGFnaW5hdGlvbhgCIAEoCzImLmNvc21vcy5iYXNlLnF1ZXJ5LnYxYmV0YTEuUGFnZVJlcXVlc3QSLAoNcmVzb2x2ZV9kZW5vbRgDIAEoCEIV2rQtEWNvc21vcy1zZGsgMC41MC4wOgiIoB8A6KAfACLMAQoYUXVlcnlBbGxCYWxhbmNlc1Jlc3BvbnNlEnMKCGJhbGFuY2VzGAEgAygLMhkuY29zbW9zLmJhc2UudjFiZXRhMS5Db2luQkbI3h8Aqt8fKGdpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsvdHlwZXMuQ29pbnOa57AqDGxlZ2FjeV9jb2luc6jnsCoBEjsKCnBhZ2luYXRpb24YAiABKAsyJy5jb3Ntb3MuYmFzZS5xdWVyeS52MWJldGExLlBhZ2VSZXNwb25zZSKjAQodUXVlcnlTcGVuZGFibGVCYWxhbmNlc1JlcXVlc3QSKQoHYWRkcmVzcxgBIAEoCUIY0rQtFGNvc21vcy5BZGRyZXNzU3RyaW5nEjoKCnBhZ2luYXRpb24YAiABKAsyJi5jb3Ntb3MuYmFzZS5xdWVyeS52MWJldGExLlBhZ2VSZXF1ZXN0OhuIoB8A6KAfANK0LQ9jb3Ntb3Mtc2RrIDAuNDYi5wEKHlF1ZXJ5U3BlbmRhYmxlQmFsYW5jZXNSZXNwb25zZRJzCghiYWxhbmNlcxgBIAMoCzIZLmNvc21vcy5iYXNlLnYxYmV0YTEuQ29pbkJGyN4fAKrfHyhnaXRodWIuY29tL2Nvc21vcy9jb3Ntb3Mtc2RrL3R5cGVzLkNvaW5zmuewKgxsZWdhY3lfY29pbnOo57AqARI7CgpwYWdpbmF0aW9uGAIgASgLMicuY29zbW9zLmJhc2UucXVlcnkudjFiZXRhMS5QYWdlUmVzcG9uc2U6E9K0LQ9jb3Ntb3Mtc2RrIDAuNDYifAojUXVlcnlTcGVuZGFibGVCYWxhbmNlQnlEZW5vbVJlcXVlc3QSKQoHYWRkcmVzcxgBIAEoCUIY0rQtFGNvc21vcy5BZGRyZXNzU3RyaW5nEg0KBWRlbm9tGAIgASgJOhuIoB8A6KAfANK0LQ9jb3Ntb3Mtc2RrIDAuNDciZwokUXVlcnlTcGVuZGFibGVCYWxhbmNlQnlEZW5vbVJlc3BvbnNlEioKB2JhbGFuY2UYASABKAsyGS5jb3Ntb3MuYmFzZS52MWJldGExLkNvaW46E9K0LQ9jb3Ntb3Mtc2RrIDAuNDcidAoXUXVlcnlUb3RhbFN1cHBseVJlcXVlc3QSTwoKcGFnaW5hdGlvbhgBIAEoCzImLmNvc21vcy5iYXNlLnF1ZXJ5LnYxYmV0YTEuUGFnZVJlcXVlc3RCE9q0LQ9jb3Ntb3Mtc2RrIDAuNDM6CIigHwDooB8AIt8BChhRdWVyeVRvdGFsU3VwcGx5UmVzcG9uc2UScQoGc3VwcGx5GAEgAygLMhkuY29zbW9zLmJhc2UudjFiZXRhMS5Db2luQkbI3h8Aqt8fKGdpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsvdHlwZXMuQ29pbnOa57AqDGxlZ2FjeV9jb2luc6jnsCoBElAKCnBhZ2luYXRpb24YAiABKAsyJy5jb3Ntb3MuYmFzZS5xdWVyeS52MWJldGExLlBhZ2VSZXNwb25zZUIT2rQtD2Nvc21vcy1zZGsgMC40MyIlChRRdWVyeVN1cHBseU9mUmVxdWVzdBINCgVkZW5vbRgBIAEoCSJNChVRdWVyeVN1cHBseU9mUmVzcG9uc2USNAoGYW1vdW50GAEgASgLMhkuY29zbW9zLmJhc2UudjFiZXRhMS5Db2luQgnI3h8AqOewKgEiFAoSUXVlcnlQYXJhbXNSZXF1ZXN0Ik0KE1F1ZXJ5UGFyYW1zUmVzcG9uc2USNgoGcGFyYW1zGAEgASgLMhsuY29zbW9zLmJhbmsudjFiZXRhMS5QYXJhbXNCCcjeHwCo57AqASJYChpRdWVyeURlbm9tc01ldGFkYXRhUmVxdWVzdBI6CgpwYWdpbmF0aW9uGAEgASgLMiYuY29zbW9zLmJhc2UucXVlcnkudjFiZXRhMS5QYWdlUmVxdWVzdCKXAQobUXVlcnlEZW5vbXNNZXRhZGF0YVJlc3BvbnNlEjsKCW1ldGFkYXRhcxgBIAMoCzIdLmNvc21vcy5iYW5rLnYxYmV0YTEuTWV0YWRhdGFCCcjeHwCo57AqARI7CgpwYWdpbmF0aW9uGAIgASgLMicuY29zbW9zLmJhc2UucXVlcnkudjFiZXRhMS5QYWdlUmVzcG9uc2UiKgoZUXVlcnlEZW5vbU1ldGFkYXRhUmVxdWVzdBINCgVkZW5vbRgBIAEoCSJYChpRdWVyeURlbm9tTWV0YWRhdGFSZXNwb25zZRI6CghtZXRhZGF0YRgBIAEoCzIdLmNvc21vcy5iYW5rLnYxYmV0YTEuTWV0YWRhdGFCCcjeHwCo57AqASI3CiZRdWVyeURlbm9tTWV0YWRhdGFCeVF1ZXJ5U3RyaW5nUmVxdWVzdBINCgVkZW5vbRgBIAEoCSJlCidRdWVyeURlbm9tTWV0YWRhdGFCeVF1ZXJ5U3RyaW5nUmVzcG9uc2USOgoIbWV0YWRhdGEYASABKAsyHS5jb3Ntb3MuYmFuay52MWJldGExLk1ldGFkYXRhQgnI3h8AqOewKgEiZAoXUXVlcnlEZW5vbU93bmVyc1JlcXVlc3QSDQoFZGVub20YASABKAkSOgoKcGFnaW5hdGlvbhgCIAEoCzImLmNvc21vcy5iYXNlLnF1ZXJ5LnYxYmV0YTEuUGFnZVJlcXVlc3QigwEKCkRlbm9tT3duZXISKQoHYWRkcmVzcxgBIAEoCUIY0rQtFGNvc21vcy5BZGRyZXNzU3RyaW5nEjUKB2JhbGFuY2UYAiABKAsyGS5jb3Ntb3MuYmFzZS52MWJldGExLkNvaW5CCcjeHwCo57AqAToT0rQtD2Nvc21vcy1zZGsgMC40NiKjAQoYUXVlcnlEZW5vbU93bmVyc1Jlc3BvbnNlEjUKDGRlbm9tX293bmVycxgBIAMoCzIfLmNvc21vcy5iYW5rLnYxYmV0YTEuRGVub21Pd25lchI7CgpwYWdpbmF0aW9uGAIgASgLMicuY29zbW9zLmJhc2UucXVlcnkudjFiZXRhMS5QYWdlUmVzcG9uc2U6E9K0LQ9jb3Ntb3Mtc2RrIDAuNDYiggEKHlF1ZXJ5RGVub21Pd25lcnNCeVF1ZXJ5UmVxdWVzdBINCgVkZW5vbRgBIAEoCRI6CgpwYWdpbmF0aW9uGAIgASgLMiYuY29zbW9zLmJhc2UucXVlcnkudjFiZXRhMS5QYWdlUmVxdWVzdDoV0rQtEWNvc21vcy1zZGsgMC41MC4zIqwBCh9RdWVyeURlbm9tT3duZXJzQnlRdWVyeVJlc3BvbnNlEjUKDGRlbm9tX293bmVycxgBIAMoCzIfLmNvc21vcy5iYW5rLnYxYmV0YTEuRGVub21Pd25lchI7CgpwYWdpbmF0aW9uGAIgASgLMicuY29zbW9zLmJhc2UucXVlcnkudjFiZXRhMS5QYWdlUmVzcG9uc2U6FdK0LRFjb3Ntb3Mtc2RrIDAuNTAuMyJ6ChdRdWVyeVNlbmRFbmFibGVkUmVxdWVzdBIOCgZkZW5vbXMYASADKAkSOgoKcGFnaW5hdGlvbhhjIAEoCzImLmNvc21vcy5iYXNlLnF1ZXJ5LnYxYmV0YTEuUGFnZVJlcXVlc3Q6E9K0LQ9jb3Ntb3Mtc2RrIDAuNDcipAEKGFF1ZXJ5U2VuZEVuYWJsZWRSZXNwb25zZRI2CgxzZW5kX2VuYWJsZWQYASADKAsyIC5jb3Ntb3MuYmFuay52MWJldGExLlNlbmRFbmFibGVkEjsKCnBhZ2luYXRpb24YYyABKAsyJy5jb3Ntb3MuYmFzZS5xdWVyeS52MWJldGExLlBhZ2VSZXNwb25zZToT0rQtD2Nvc21vcy1zZGsgMC40NzKxEgoFUXVlcnkSnQEKB0JhbGFuY2USKC5jb3Ntb3MuYmFuay52MWJldGExLlF1ZXJ5QmFsYW5jZVJlcXVlc3QaKS5jb3Ntb3MuYmFuay52MWJldGExLlF1ZXJ5QmFsYW5jZVJlc3BvbnNlIj2I57AqAYLT5JMCMhIwL2Nvc21vcy9iYW5rL3YxYmV0YTEvYmFsYW5jZXMve2FkZHJlc3N9L2J5X2Rlbm9tEqABCgtBbGxCYWxhbmNlcxIsLmNvc21vcy5iYW5rLnYxYmV0YTEuUXVlcnlBbGxCYWxhbmNlc1JlcXVlc3QaLS5jb3Ntb3MuYmFuay52MWJldGExLlF1ZXJ5QWxsQmFsYW5jZXNSZXNwb25zZSI0iOewKgGC0+STAikSJy9jb3Ntb3MvYmFuay92MWJldGExL2JhbGFuY2VzL3thZGRyZXNzfRLPAQoRU3BlbmRhYmxlQmFsYW5jZXMSMi5jb3Ntb3MuYmFuay52MWJldGExLlF1ZXJ5U3BlbmRhYmxlQmFsYW5jZXNSZXF1ZXN0GjMuY29zbW9zLmJhbmsudjFiZXRhMS5RdWVyeVNwZW5kYWJsZUJhbGFuY2VzUmVzcG9uc2UiUcq0LQ9jb3Ntb3Mtc2RrIDAuNDaI57AqAYLT5JMCMxIxL2Nvc21vcy9iYW5rL3YxYmV0YTEvc3BlbmRhYmxlX2JhbGFuY2VzL3thZGRyZXNzfRLqAQoXU3BlbmRhYmxlQmFsYW5jZUJ5RGVub20SOC5jb3Ntb3MuYmFuay52MWJldGExLlF1ZXJ5U3BlbmRhYmxlQmFsYW5jZUJ5RGVub21SZXF1ZXN0GjkuY29zbW9zLmJhbmsudjFiZXRhMS5RdWVyeVNwZW5kYWJsZUJhbGFuY2VCeURlbm9tUmVzcG9uc2UiWsq0LQ9jb3Ntb3Mtc2RrIDAuNDeI57AqAYLT5JMCPBI6L2Nvc21vcy9iYW5rL3YxYmV0YTEvc3BlbmRhYmxlX2JhbGFuY2VzL3thZGRyZXNzfS9ieV9kZW5vbRKUAQoLVG90YWxTdXBwbHkSLC5jb3Ntb3MuYmFuay52MWJldGExLlF1ZXJ5VG90YWxTdXBwbHlSZXF1ZXN0Gi0uY29zbW9zLmJhbmsudjFiZXRhMS5RdWVyeVRvdGFsU3VwcGx5UmVzcG9uc2UiKIjnsCoBgtPkkwIdEhsvY29zbW9zL2JhbmsvdjFiZXRhMS9zdXBwbHkSlAEKCFN1cHBseU9mEikuY29zbW9zLmJhbmsudjFiZXRhMS5RdWVyeVN1cHBseU9mUmVxdWVzdBoqLmNvc21vcy5iYW5rLnYxYmV0YTEuUXVlcnlTdXBwbHlPZlJlc3BvbnNlIjGI57AqAYLT5JMCJhIkL2Nvc21vcy9iYW5rL3YxYmV0YTEvc3VwcGx5L2J5X2Rlbm9tEoUBCgZQYXJhbXMSJy5jb3Ntb3MuYmFuay52MWJldGExLlF1ZXJ5UGFyYW1zUmVxdWVzdBooLmNvc21vcy5iYW5rLnYxYmV0YTEuUXVlcnlQYXJhbXNSZXNwb25zZSIoiOewKgGC0+STAh0SGy9jb3Ntb3MvYmFuay92MWJldGExL3BhcmFtcxKmAQoORGVub21zTWV0YWRhdGESLy5jb3Ntb3MuYmFuay52MWJldGExLlF1ZXJ5RGVub21zTWV0YWRhdGFSZXF1ZXN0GjAuY29zbW9zLmJhbmsudjFiZXRhMS5RdWVyeURlbm9tc01ldGFkYXRhUmVzcG9uc2UiMYjnsCoBgtPkkwImEiQvY29zbW9zL2JhbmsvdjFiZXRhMS9kZW5vbXNfbWV0YWRhdGESrgEKDURlbm9tTWV0YWRhdGESLi5jb3Ntb3MuYmFuay52MWJldGExLlF1ZXJ5RGVub21NZXRhZGF0YVJlcXVlc3QaLy5jb3Ntb3MuYmFuay52MWJldGExLlF1ZXJ5RGVub21NZXRhZGF0YVJlc3BvbnNlIjyI57AqAYLT5JMCMRIvL2Nvc21vcy9iYW5rL3YxYmV0YTEvZGVub21zX21ldGFkYXRhL3tkZW5vbT0qKn0S2gEKGkRlbm9tTWV0YWRhdGFCeVF1ZXJ5U3RyaW5nEjsuY29zbW9zLmJhbmsudjFiZXRhMS5RdWVyeURlbm9tTWV0YWRhdGFCeVF1ZXJ5U3RyaW5nUmVxdWVzdBo8LmNvc21vcy5iYW5rLnYxYmV0YTEuUXVlcnlEZW5vbU1ldGFkYXRhQnlRdWVyeVN0cmluZ1Jlc3BvbnNlIkGI57AqAYLT5JMCNhI0L2Nvc21vcy9iYW5rL3YxYmV0YTEvZGVub21zX21ldGFkYXRhX2J5X3F1ZXJ5X3N0cmluZxK4AQoLRGVub21Pd25lcnMSLC5jb3Ntb3MuYmFuay52MWJldGExLlF1ZXJ5RGVub21Pd25lcnNSZXF1ZXN0Gi0uY29zbW9zLmJhbmsudjFiZXRhMS5RdWVyeURlbm9tT3duZXJzUmVzcG9uc2UiTMq0LQ9jb3Ntb3Mtc2RrIDAuNDaI57AqAYLT5JMCLhIsL2Nvc21vcy9iYW5rL3YxYmV0YTEvZGVub21fb3duZXJzL3tkZW5vbT0qKn0SzQEKEkRlbm9tT3duZXJzQnlRdWVyeRIzLmNvc21vcy5iYW5rLnYxYmV0YTEuUXVlcnlEZW5vbU93bmVyc0J5UXVlcnlSZXF1ZXN0GjQuY29zbW9zLmJhbmsudjFiZXRhMS5RdWVyeURlbm9tT3duZXJzQnlRdWVyeVJlc3BvbnNlIkzKtC0RY29zbW9zLXNkayAwLjUwLjOI57AqAYLT5JMCLBIqL2Nvc21vcy9iYW5rL3YxYmV0YTEvZGVub21fb3duZXJzX2J5X3F1ZXJ5Eq0BCgtTZW5kRW5hYmxlZBIsLmNvc21vcy5iYW5rLnYxYmV0YTEuUXVlcnlTZW5kRW5hYmxlZFJlcXVlc3QaLS5jb3Ntb3MuYmFuay52MWJldGExLlF1ZXJ5U2VuZEVuYWJsZWRSZXNwb25zZSJByrQtD2Nvc21vcy1zZGsgMC40N4jnsCoBgtPkkwIjEiEvY29zbW9zL2JhbmsvdjFiZXRhMS9zZW5kX2VuYWJsZWRCvgEKF2NvbS5jb3Ntb3MuYmFuay52MWJldGExQgpRdWVyeVByb3RvUAFaKWdpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsveC9iYW5rL3R5cGVzogIDQ0JYqgITQ29zbW9zLkJhbmsuVjFiZXRhMcoCE0Nvc21vc1xCYW5rXFYxYmV0YTHiAh9Db3Ntb3NcQmFua1xWMWJldGExXEdQQk1ldGFkYXRh6gIVQ29zbW9zOjpCYW5rOjpWMWJldGExYgZwcm90bzM", [file_cosmos_base_query_v1beta1_pagination, file_gogoproto_gogo, file_google_api_annotations, file_cosmos_base_v1beta1_coin, file_cosmos_bank_v1beta1_bank, file_cosmos_proto_cosmos, file_cosmos_query_v1_query, file_amino_amino]);

/**
 * QueryBalanceRequest is the request type for the Query/Balance RPC method.
 *
 * @generated from message cosmos.bank.v1beta1.QueryBalanceRequest
 */
export type QueryBalanceRequest = Message<"cosmos.bank.v1beta1.QueryBalanceRequest"> & {
  /**
   * address is the address to query balances for.
   *
   * @generated from field: string address = 1;
   */
  address: string;

  /**
   * denom is the coin denom to query balances for.
   *
   * @generated from field: string denom = 2;
   */
  denom: string;
};

/**
 * Describes the message cosmos.bank.v1beta1.QueryBalanceRequest.
 * Use `create(QueryBalanceRequestSchema)` to create a new message.
 */
export const QueryBalanceRequestSchema: GenMessage<QueryBalanceRequest> = /*@__PURE__*/
  messageDesc(file_cosmos_bank_v1beta1_query, 0);

/**
 * QueryBalanceResponse is the response type for the Query/Balance RPC method.
 *
 * @generated from message cosmos.bank.v1beta1.QueryBalanceResponse
 */
export type QueryBalanceResponse = Message<"cosmos.bank.v1beta1.QueryBalanceResponse"> & {
  /**
   * balance is the balance of the coin.
   *
   * @generated from field: cosmos.base.v1beta1.Coin balance = 1;
   */
  balance?: Coin;
};

/**
 * Describes the message cosmos.bank.v1beta1.QueryBalanceResponse.
 * Use `create(QueryBalanceResponseSchema)` to create a new message.
 */
export const QueryBalanceResponseSchema: GenMessage<QueryBalanceResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_bank_v1beta1_query, 1);

/**
 * QueryBalanceRequest is the request type for the Query/AllBalances RPC method.
 *
 * @generated from message cosmos.bank.v1beta1.QueryAllBalancesRequest
 */
export type QueryAllBalancesRequest = Message<"cosmos.bank.v1beta1.QueryAllBalancesRequest"> & {
  /**
   * address is the address to query balances for.
   *
   * @generated from field: string address = 1;
   */
  address: string;

  /**
   * pagination defines an optional pagination for the request.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 2;
   */
  pagination?: PageRequest;

  /**
   * resolve_denom is the flag to resolve the denom into a human-readable form from the metadata.
   *
   * @generated from field: bool resolve_denom = 3;
   */
  resolveDenom: boolean;
};

/**
 * Describes the message cosmos.bank.v1beta1.QueryAllBalancesRequest.
 * Use `create(QueryAllBalancesRequestSchema)` to create a new message.
 */
export const QueryAllBalancesRequestSchema: GenMessage<QueryAllBalancesRequest> = /*@__PURE__*/
  messageDesc(file_cosmos_bank_v1beta1_query, 2);

/**
 * QueryAllBalancesResponse is the response type for the Query/AllBalances RPC
 * method.
 *
 * @generated from message cosmos.bank.v1beta1.QueryAllBalancesResponse
 */
export type QueryAllBalancesResponse = Message<"cosmos.bank.v1beta1.QueryAllBalancesResponse"> & {
  /**
   * balances is the balances of all the coins.
   *
   * @generated from field: repeated cosmos.base.v1beta1.Coin balances = 1;
   */
  balances: Coin[];

  /**
   * pagination defines the pagination in the response.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;
};

/**
 * Describes the message cosmos.bank.v1beta1.QueryAllBalancesResponse.
 * Use `create(QueryAllBalancesResponseSchema)` to create a new message.
 */
export const QueryAllBalancesResponseSchema: GenMessage<QueryAllBalancesResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_bank_v1beta1_query, 3);

/**
 * QuerySpendableBalancesRequest defines the gRPC request structure for querying
 * an account's spendable balances.
 *
 * @generated from message cosmos.bank.v1beta1.QuerySpendableBalancesRequest
 */
export type QuerySpendableBalancesRequest = Message<"cosmos.bank.v1beta1.QuerySpendableBalancesRequest"> & {
  /**
   * address is the address to query spendable balances for.
   *
   * @generated from field: string address = 1;
   */
  address: string;

  /**
   * pagination defines an optional pagination for the request.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 2;
   */
  pagination?: PageRequest;
};

/**
 * Describes the message cosmos.bank.v1beta1.QuerySpendableBalancesRequest.
 * Use `create(QuerySpendableBalancesRequestSchema)` to create a new message.
 */
export const QuerySpendableBalancesRequestSchema: GenMessage<QuerySpendableBalancesRequest> = /*@__PURE__*/
  messageDesc(file_cosmos_bank_v1beta1_query, 4);

/**
 * QuerySpendableBalancesResponse defines the gRPC response structure for querying
 * an account's spendable balances.
 *
 * @generated from message cosmos.bank.v1beta1.QuerySpendableBalancesResponse
 */
export type QuerySpendableBalancesResponse = Message<"cosmos.bank.v1beta1.QuerySpendableBalancesResponse"> & {
  /**
   * balances is the spendable balances of all the coins.
   *
   * @generated from field: repeated cosmos.base.v1beta1.Coin balances = 1;
   */
  balances: Coin[];

  /**
   * pagination defines the pagination in the response.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;
};

/**
 * Describes the message cosmos.bank.v1beta1.QuerySpendableBalancesResponse.
 * Use `create(QuerySpendableBalancesResponseSchema)` to create a new message.
 */
export const QuerySpendableBalancesResponseSchema: GenMessage<QuerySpendableBalancesResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_bank_v1beta1_query, 5);

/**
 * QuerySpendableBalanceByDenomRequest defines the gRPC request structure for
 * querying an account's spendable balance for a specific denom.
 *
 * @generated from message cosmos.bank.v1beta1.QuerySpendableBalanceByDenomRequest
 */
export type QuerySpendableBalanceByDenomRequest = Message<"cosmos.bank.v1beta1.QuerySpendableBalanceByDenomRequest"> & {
  /**
   * address is the address to query balances for.
   *
   * @generated from field: string address = 1;
   */
  address: string;

  /**
   * denom is the coin denom to query balances for.
   *
   * @generated from field: string denom = 2;
   */
  denom: string;
};

/**
 * Describes the message cosmos.bank.v1beta1.QuerySpendableBalanceByDenomRequest.
 * Use `create(QuerySpendableBalanceByDenomRequestSchema)` to create a new message.
 */
export const QuerySpendableBalanceByDenomRequestSchema: GenMessage<QuerySpendableBalanceByDenomRequest> = /*@__PURE__*/
  messageDesc(file_cosmos_bank_v1beta1_query, 6);

/**
 * QuerySpendableBalanceByDenomResponse defines the gRPC response structure for
 * querying an account's spendable balance for a specific denom.
 *
 * @generated from message cosmos.bank.v1beta1.QuerySpendableBalanceByDenomResponse
 */
export type QuerySpendableBalanceByDenomResponse = Message<"cosmos.bank.v1beta1.QuerySpendableBalanceByDenomResponse"> & {
  /**
   * balance is the balance of the coin.
   *
   * @generated from field: cosmos.base.v1beta1.Coin balance = 1;
   */
  balance?: Coin;
};

/**
 * Describes the message cosmos.bank.v1beta1.QuerySpendableBalanceByDenomResponse.
 * Use `create(QuerySpendableBalanceByDenomResponseSchema)` to create a new message.
 */
export const QuerySpendableBalanceByDenomResponseSchema: GenMessage<QuerySpendableBalanceByDenomResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_bank_v1beta1_query, 7);

/**
 * QueryTotalSupplyRequest is the request type for the Query/TotalSupply RPC
 * method.
 *
 * @generated from message cosmos.bank.v1beta1.QueryTotalSupplyRequest
 */
export type QueryTotalSupplyRequest = Message<"cosmos.bank.v1beta1.QueryTotalSupplyRequest"> & {
  /**
   * pagination defines an optional pagination for the request.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
   */
  pagination?: PageRequest;
};

/**
 * Describes the message cosmos.bank.v1beta1.QueryTotalSupplyRequest.
 * Use `create(QueryTotalSupplyRequestSchema)` to create a new message.
 */
export const QueryTotalSupplyRequestSchema: GenMessage<QueryTotalSupplyRequest> = /*@__PURE__*/
  messageDesc(file_cosmos_bank_v1beta1_query, 8);

/**
 * QueryTotalSupplyResponse is the response type for the Query/TotalSupply RPC
 * method
 *
 * @generated from message cosmos.bank.v1beta1.QueryTotalSupplyResponse
 */
export type QueryTotalSupplyResponse = Message<"cosmos.bank.v1beta1.QueryTotalSupplyResponse"> & {
  /**
   * supply is the supply of the coins
   *
   * @generated from field: repeated cosmos.base.v1beta1.Coin supply = 1;
   */
  supply: Coin[];

  /**
   * pagination defines the pagination in the response.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;
};

/**
 * Describes the message cosmos.bank.v1beta1.QueryTotalSupplyResponse.
 * Use `create(QueryTotalSupplyResponseSchema)` to create a new message.
 */
export const QueryTotalSupplyResponseSchema: GenMessage<QueryTotalSupplyResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_bank_v1beta1_query, 9);

/**
 * QuerySupplyOfRequest is the request type for the Query/SupplyOf RPC method.
 *
 * @generated from message cosmos.bank.v1beta1.QuerySupplyOfRequest
 */
export type QuerySupplyOfRequest = Message<"cosmos.bank.v1beta1.QuerySupplyOfRequest"> & {
  /**
   * denom is the coin denom to query balances for.
   *
   * @generated from field: string denom = 1;
   */
  denom: string;
};

/**
 * Describes the message cosmos.bank.v1beta1.QuerySupplyOfRequest.
 * Use `create(QuerySupplyOfRequestSchema)` to create a new message.
 */
export const QuerySupplyOfRequestSchema: GenMessage<QuerySupplyOfRequest> = /*@__PURE__*/
  messageDesc(file_cosmos_bank_v1beta1_query, 10);

/**
 * QuerySupplyOfResponse is the response type for the Query/SupplyOf RPC method.
 *
 * @generated from message cosmos.bank.v1beta1.QuerySupplyOfResponse
 */
export type QuerySupplyOfResponse = Message<"cosmos.bank.v1beta1.QuerySupplyOfResponse"> & {
  /**
   * amount is the supply of the coin.
   *
   * @generated from field: cosmos.base.v1beta1.Coin amount = 1;
   */
  amount?: Coin;
};

/**
 * Describes the message cosmos.bank.v1beta1.QuerySupplyOfResponse.
 * Use `create(QuerySupplyOfResponseSchema)` to create a new message.
 */
export const QuerySupplyOfResponseSchema: GenMessage<QuerySupplyOfResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_bank_v1beta1_query, 11);

/**
 * QueryParamsRequest defines the request type for querying x/bank parameters.
 *
 * @generated from message cosmos.bank.v1beta1.QueryParamsRequest
 */
export type QueryParamsRequest = Message<"cosmos.bank.v1beta1.QueryParamsRequest"> & {
};

/**
 * Describes the message cosmos.bank.v1beta1.QueryParamsRequest.
 * Use `create(QueryParamsRequestSchema)` to create a new message.
 */
export const QueryParamsRequestSchema: GenMessage<QueryParamsRequest> = /*@__PURE__*/
  messageDesc(file_cosmos_bank_v1beta1_query, 12);

/**
 * QueryParamsResponse defines the response type for querying x/bank parameters.
 *
 * @generated from message cosmos.bank.v1beta1.QueryParamsResponse
 */
export type QueryParamsResponse = Message<"cosmos.bank.v1beta1.QueryParamsResponse"> & {
  /**
   * params provides the parameters of the bank module.
   *
   * @generated from field: cosmos.bank.v1beta1.Params params = 1;
   */
  params?: Params;
};

/**
 * Describes the message cosmos.bank.v1beta1.QueryParamsResponse.
 * Use `create(QueryParamsResponseSchema)` to create a new message.
 */
export const QueryParamsResponseSchema: GenMessage<QueryParamsResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_bank_v1beta1_query, 13);

/**
 * QueryDenomsMetadataRequest is the request type for the Query/DenomsMetadata RPC method.
 *
 * @generated from message cosmos.bank.v1beta1.QueryDenomsMetadataRequest
 */
export type QueryDenomsMetadataRequest = Message<"cosmos.bank.v1beta1.QueryDenomsMetadataRequest"> & {
  /**
   * pagination defines an optional pagination for the request.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
   */
  pagination?: PageRequest;
};

/**
 * Describes the message cosmos.bank.v1beta1.QueryDenomsMetadataRequest.
 * Use `create(QueryDenomsMetadataRequestSchema)` to create a new message.
 */
export const QueryDenomsMetadataRequestSchema: GenMessage<QueryDenomsMetadataRequest> = /*@__PURE__*/
  messageDesc(file_cosmos_bank_v1beta1_query, 14);

/**
 * QueryDenomsMetadataResponse is the response type for the Query/DenomsMetadata RPC
 * method.
 *
 * @generated from message cosmos.bank.v1beta1.QueryDenomsMetadataResponse
 */
export type QueryDenomsMetadataResponse = Message<"cosmos.bank.v1beta1.QueryDenomsMetadataResponse"> & {
  /**
   * metadata provides the client information for all the registered tokens.
   *
   * @generated from field: repeated cosmos.bank.v1beta1.Metadata metadatas = 1;
   */
  metadatas: Metadata[];

  /**
   * pagination defines the pagination in the response.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;
};

/**
 * Describes the message cosmos.bank.v1beta1.QueryDenomsMetadataResponse.
 * Use `create(QueryDenomsMetadataResponseSchema)` to create a new message.
 */
export const QueryDenomsMetadataResponseSchema: GenMessage<QueryDenomsMetadataResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_bank_v1beta1_query, 15);

/**
 * QueryDenomMetadataRequest is the request type for the Query/DenomMetadata RPC method.
 *
 * @generated from message cosmos.bank.v1beta1.QueryDenomMetadataRequest
 */
export type QueryDenomMetadataRequest = Message<"cosmos.bank.v1beta1.QueryDenomMetadataRequest"> & {
  /**
   * denom is the coin denom to query the metadata for.
   *
   * @generated from field: string denom = 1;
   */
  denom: string;
};

/**
 * Describes the message cosmos.bank.v1beta1.QueryDenomMetadataRequest.
 * Use `create(QueryDenomMetadataRequestSchema)` to create a new message.
 */
export const QueryDenomMetadataRequestSchema: GenMessage<QueryDenomMetadataRequest> = /*@__PURE__*/
  messageDesc(file_cosmos_bank_v1beta1_query, 16);

/**
 * QueryDenomMetadataResponse is the response type for the Query/DenomMetadata RPC
 * method.
 *
 * @generated from message cosmos.bank.v1beta1.QueryDenomMetadataResponse
 */
export type QueryDenomMetadataResponse = Message<"cosmos.bank.v1beta1.QueryDenomMetadataResponse"> & {
  /**
   * metadata describes and provides all the client information for the requested token.
   *
   * @generated from field: cosmos.bank.v1beta1.Metadata metadata = 1;
   */
  metadata?: Metadata;
};

/**
 * Describes the message cosmos.bank.v1beta1.QueryDenomMetadataResponse.
 * Use `create(QueryDenomMetadataResponseSchema)` to create a new message.
 */
export const QueryDenomMetadataResponseSchema: GenMessage<QueryDenomMetadataResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_bank_v1beta1_query, 17);

/**
 * QueryDenomMetadataByQueryStringRequest is the request type for the Query/DenomMetadata RPC method.
 * Identical with QueryDenomMetadataRequest but receives denom as query string.
 *
 * @generated from message cosmos.bank.v1beta1.QueryDenomMetadataByQueryStringRequest
 */
export type QueryDenomMetadataByQueryStringRequest = Message<"cosmos.bank.v1beta1.QueryDenomMetadataByQueryStringRequest"> & {
  /**
   * denom is the coin denom to query the metadata for.
   *
   * @generated from field: string denom = 1;
   */
  denom: string;
};

/**
 * Describes the message cosmos.bank.v1beta1.QueryDenomMetadataByQueryStringRequest.
 * Use `create(QueryDenomMetadataByQueryStringRequestSchema)` to create a new message.
 */
export const QueryDenomMetadataByQueryStringRequestSchema: GenMessage<QueryDenomMetadataByQueryStringRequest> = /*@__PURE__*/
  messageDesc(file_cosmos_bank_v1beta1_query, 18);

/**
 * QueryDenomMetadataByQueryStringResponse is the response type for the Query/DenomMetadata RPC
 * method. Identical with QueryDenomMetadataResponse but receives denom as query string in request.
 *
 * @generated from message cosmos.bank.v1beta1.QueryDenomMetadataByQueryStringResponse
 */
export type QueryDenomMetadataByQueryStringResponse = Message<"cosmos.bank.v1beta1.QueryDenomMetadataByQueryStringResponse"> & {
  /**
   * metadata describes and provides all the client information for the requested token.
   *
   * @generated from field: cosmos.bank.v1beta1.Metadata metadata = 1;
   */
  metadata?: Metadata;
};

/**
 * Describes the message cosmos.bank.v1beta1.QueryDenomMetadataByQueryStringResponse.
 * Use `create(QueryDenomMetadataByQueryStringResponseSchema)` to create a new message.
 */
export const QueryDenomMetadataByQueryStringResponseSchema: GenMessage<QueryDenomMetadataByQueryStringResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_bank_v1beta1_query, 19);

/**
 * QueryDenomOwnersRequest defines the request type for the DenomOwners RPC query,
 * which queries for a paginated set of all account holders of a particular
 * denomination.
 *
 * @generated from message cosmos.bank.v1beta1.QueryDenomOwnersRequest
 */
export type QueryDenomOwnersRequest = Message<"cosmos.bank.v1beta1.QueryDenomOwnersRequest"> & {
  /**
   * denom defines the coin denomination to query all account holders for.
   *
   * @generated from field: string denom = 1;
   */
  denom: string;

  /**
   * pagination defines an optional pagination for the request.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 2;
   */
  pagination?: PageRequest;
};

/**
 * Describes the message cosmos.bank.v1beta1.QueryDenomOwnersRequest.
 * Use `create(QueryDenomOwnersRequestSchema)` to create a new message.
 */
export const QueryDenomOwnersRequestSchema: GenMessage<QueryDenomOwnersRequest> = /*@__PURE__*/
  messageDesc(file_cosmos_bank_v1beta1_query, 20);

/**
 * DenomOwner defines structure representing an account that owns or holds a
 * particular denominated token. It contains the account address and account
 * balance of the denominated token.
 *
 * @generated from message cosmos.bank.v1beta1.DenomOwner
 */
export type DenomOwner = Message<"cosmos.bank.v1beta1.DenomOwner"> & {
  /**
   * address defines the address that owns a particular denomination.
   *
   * @generated from field: string address = 1;
   */
  address: string;

  /**
   * balance is the balance of the denominated coin for an account.
   *
   * @generated from field: cosmos.base.v1beta1.Coin balance = 2;
   */
  balance?: Coin;
};

/**
 * Describes the message cosmos.bank.v1beta1.DenomOwner.
 * Use `create(DenomOwnerSchema)` to create a new message.
 */
export const DenomOwnerSchema: GenMessage<DenomOwner> = /*@__PURE__*/
  messageDesc(file_cosmos_bank_v1beta1_query, 21);

/**
 * QueryDenomOwnersResponse defines the RPC response of a DenomOwners RPC query.
 *
 * @generated from message cosmos.bank.v1beta1.QueryDenomOwnersResponse
 */
export type QueryDenomOwnersResponse = Message<"cosmos.bank.v1beta1.QueryDenomOwnersResponse"> & {
  /**
   * @generated from field: repeated cosmos.bank.v1beta1.DenomOwner denom_owners = 1;
   */
  denomOwners: DenomOwner[];

  /**
   * pagination defines the pagination in the response.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;
};

/**
 * Describes the message cosmos.bank.v1beta1.QueryDenomOwnersResponse.
 * Use `create(QueryDenomOwnersResponseSchema)` to create a new message.
 */
export const QueryDenomOwnersResponseSchema: GenMessage<QueryDenomOwnersResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_bank_v1beta1_query, 22);

/**
 * QueryDenomOwnersByQueryRequest defines the request type for the DenomOwnersByQuery RPC query,
 * which queries for a paginated set of all account holders of a particular
 * denomination.
 *
 * @generated from message cosmos.bank.v1beta1.QueryDenomOwnersByQueryRequest
 */
export type QueryDenomOwnersByQueryRequest = Message<"cosmos.bank.v1beta1.QueryDenomOwnersByQueryRequest"> & {
  /**
   * denom defines the coin denomination to query all account holders for.
   *
   * @generated from field: string denom = 1;
   */
  denom: string;

  /**
   * pagination defines an optional pagination for the request.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 2;
   */
  pagination?: PageRequest;
};

/**
 * Describes the message cosmos.bank.v1beta1.QueryDenomOwnersByQueryRequest.
 * Use `create(QueryDenomOwnersByQueryRequestSchema)` to create a new message.
 */
export const QueryDenomOwnersByQueryRequestSchema: GenMessage<QueryDenomOwnersByQueryRequest> = /*@__PURE__*/
  messageDesc(file_cosmos_bank_v1beta1_query, 23);

/**
 * QueryDenomOwnersByQueryResponse defines the RPC response of a DenomOwnersByQuery RPC query.
 *
 * @generated from message cosmos.bank.v1beta1.QueryDenomOwnersByQueryResponse
 */
export type QueryDenomOwnersByQueryResponse = Message<"cosmos.bank.v1beta1.QueryDenomOwnersByQueryResponse"> & {
  /**
   * @generated from field: repeated cosmos.bank.v1beta1.DenomOwner denom_owners = 1;
   */
  denomOwners: DenomOwner[];

  /**
   * pagination defines the pagination in the response.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;
};

/**
 * Describes the message cosmos.bank.v1beta1.QueryDenomOwnersByQueryResponse.
 * Use `create(QueryDenomOwnersByQueryResponseSchema)` to create a new message.
 */
export const QueryDenomOwnersByQueryResponseSchema: GenMessage<QueryDenomOwnersByQueryResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_bank_v1beta1_query, 24);

/**
 * QuerySendEnabledRequest defines the RPC request for looking up SendEnabled entries.
 *
 * @generated from message cosmos.bank.v1beta1.QuerySendEnabledRequest
 */
export type QuerySendEnabledRequest = Message<"cosmos.bank.v1beta1.QuerySendEnabledRequest"> & {
  /**
   * denoms is the specific denoms you want look up. Leave empty to get all entries.
   *
   * @generated from field: repeated string denoms = 1;
   */
  denoms: string[];

  /**
   * pagination defines an optional pagination for the request. This field is
   * only read if the denoms field is empty.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 99;
   */
  pagination?: PageRequest;
};

/**
 * Describes the message cosmos.bank.v1beta1.QuerySendEnabledRequest.
 * Use `create(QuerySendEnabledRequestSchema)` to create a new message.
 */
export const QuerySendEnabledRequestSchema: GenMessage<QuerySendEnabledRequest> = /*@__PURE__*/
  messageDesc(file_cosmos_bank_v1beta1_query, 25);

/**
 * QuerySendEnabledResponse defines the RPC response of a SendEnable query.
 *
 * @generated from message cosmos.bank.v1beta1.QuerySendEnabledResponse
 */
export type QuerySendEnabledResponse = Message<"cosmos.bank.v1beta1.QuerySendEnabledResponse"> & {
  /**
   * @generated from field: repeated cosmos.bank.v1beta1.SendEnabled send_enabled = 1;
   */
  sendEnabled: SendEnabled[];

  /**
   * pagination defines the pagination in the response. This field is only
   * populated if the denoms field in the request is empty.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 99;
   */
  pagination?: PageResponse;
};

/**
 * Describes the message cosmos.bank.v1beta1.QuerySendEnabledResponse.
 * Use `create(QuerySendEnabledResponseSchema)` to create a new message.
 */
export const QuerySendEnabledResponseSchema: GenMessage<QuerySendEnabledResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_bank_v1beta1_query, 26);

/**
 * Query defines the gRPC querier service.
 *
 * @generated from service cosmos.bank.v1beta1.Query
 */
export const Query: GenService<{
  /**
   * Balance queries the balance of a single coin for a single account.
   *
   * @generated from rpc cosmos.bank.v1beta1.Query.Balance
   */
  balance: {
    methodKind: "unary";
    input: typeof QueryBalanceRequestSchema;
    output: typeof QueryBalanceResponseSchema;
  },
  /**
   * AllBalances queries the balance of all coins for a single account.
   *
   * When called from another module, this query might consume a high amount of
   * gas if the pagination field is incorrectly set.
   *
   * @generated from rpc cosmos.bank.v1beta1.Query.AllBalances
   */
  allBalances: {
    methodKind: "unary";
    input: typeof QueryAllBalancesRequestSchema;
    output: typeof QueryAllBalancesResponseSchema;
  },
  /**
   * SpendableBalances queries the spendable balance of all coins for a single
   * account.
   *
   * When called from another module, this query might consume a high amount of
   * gas if the pagination field is incorrectly set.
   *
   * @generated from rpc cosmos.bank.v1beta1.Query.SpendableBalances
   */
  spendableBalances: {
    methodKind: "unary";
    input: typeof QuerySpendableBalancesRequestSchema;
    output: typeof QuerySpendableBalancesResponseSchema;
  },
  /**
   * SpendableBalanceByDenom queries the spendable balance of a single denom for
   * a single account.
   *
   * When called from another module, this query might consume a high amount of
   * gas if the pagination field is incorrectly set.
   *
   * @generated from rpc cosmos.bank.v1beta1.Query.SpendableBalanceByDenom
   */
  spendableBalanceByDenom: {
    methodKind: "unary";
    input: typeof QuerySpendableBalanceByDenomRequestSchema;
    output: typeof QuerySpendableBalanceByDenomResponseSchema;
  },
  /**
   * TotalSupply queries the total supply of all coins.
   *
   * When called from another module, this query might consume a high amount of
   * gas if the pagination field is incorrectly set.
   *
   * @generated from rpc cosmos.bank.v1beta1.Query.TotalSupply
   */
  totalSupply: {
    methodKind: "unary";
    input: typeof QueryTotalSupplyRequestSchema;
    output: typeof QueryTotalSupplyResponseSchema;
  },
  /**
   * SupplyOf queries the supply of a single coin.
   *
   * When called from another module, this query might consume a high amount of
   * gas if the pagination field is incorrectly set.
   *
   * @generated from rpc cosmos.bank.v1beta1.Query.SupplyOf
   */
  supplyOf: {
    methodKind: "unary";
    input: typeof QuerySupplyOfRequestSchema;
    output: typeof QuerySupplyOfResponseSchema;
  },
  /**
   * Params queries the parameters of x/bank module.
   *
   * @generated from rpc cosmos.bank.v1beta1.Query.Params
   */
  params: {
    methodKind: "unary";
    input: typeof QueryParamsRequestSchema;
    output: typeof QueryParamsResponseSchema;
  },
  /**
   * DenomsMetadata queries the client metadata for all registered coin
   * denominations.
   *
   * @generated from rpc cosmos.bank.v1beta1.Query.DenomsMetadata
   */
  denomsMetadata: {
    methodKind: "unary";
    input: typeof QueryDenomsMetadataRequestSchema;
    output: typeof QueryDenomsMetadataResponseSchema;
  },
  /**
   * DenomMetadata queries the client metadata of a given coin denomination.
   *
   * @generated from rpc cosmos.bank.v1beta1.Query.DenomMetadata
   */
  denomMetadata: {
    methodKind: "unary";
    input: typeof QueryDenomMetadataRequestSchema;
    output: typeof QueryDenomMetadataResponseSchema;
  },
  /**
   * DenomMetadataByQueryString queries the client metadata of a given coin denomination.
   *
   * @generated from rpc cosmos.bank.v1beta1.Query.DenomMetadataByQueryString
   */
  denomMetadataByQueryString: {
    methodKind: "unary";
    input: typeof QueryDenomMetadataByQueryStringRequestSchema;
    output: typeof QueryDenomMetadataByQueryStringResponseSchema;
  },
  /**
   * DenomOwners queries for all account addresses that own a particular token
   * denomination.
   *
   * When called from another module, this query might consume a high amount of
   * gas if the pagination field is incorrectly set.
   *
   * @generated from rpc cosmos.bank.v1beta1.Query.DenomOwners
   */
  denomOwners: {
    methodKind: "unary";
    input: typeof QueryDenomOwnersRequestSchema;
    output: typeof QueryDenomOwnersResponseSchema;
  },
  /**
   * DenomOwnersByQuery queries for all account addresses that own a particular token
   * denomination.
   *
   * @generated from rpc cosmos.bank.v1beta1.Query.DenomOwnersByQuery
   */
  denomOwnersByQuery: {
    methodKind: "unary";
    input: typeof QueryDenomOwnersByQueryRequestSchema;
    output: typeof QueryDenomOwnersByQueryResponseSchema;
  },
  /**
   * SendEnabled queries for SendEnabled entries.
   *
   * This query only returns denominations that have specific SendEnabled settings.
   * Any denomination that does not have a specific setting will use the default
   * params.default_send_enabled, and will not be returned by this query.
   *
   * @generated from rpc cosmos.bank.v1beta1.Query.SendEnabled
   */
  sendEnabled: {
    methodKind: "unary";
    input: typeof QuerySendEnabledRequestSchema;
    output: typeof QuerySendEnabledResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_cosmos_bank_v1beta1_query, 0);

