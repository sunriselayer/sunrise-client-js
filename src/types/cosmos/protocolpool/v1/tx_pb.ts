// @generated by protoc-gen-es v2.2.2 with parameter "target=ts"
// @generated from file cosmos/protocolpool/v1/tx.proto (package cosmos.protocolpool.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { Params } from "./types_pb";
import { file_cosmos_protocolpool_v1_types } from "./types_pb";
import { file_gogoproto_gogo } from "../../../gogoproto/gogo_pb";
import type { Coin } from "../../base/v1beta1/coin_pb";
import { file_cosmos_base_v1beta1_coin } from "../../base/v1beta1/coin_pb";
import { file_cosmos_proto_cosmos } from "../../../cosmos_proto/cosmos_pb";
import { file_cosmos_msg_v1_msg } from "../../msg/v1/msg_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file cosmos/protocolpool/v1/tx.proto.
 */
export const file_cosmos_protocolpool_v1_tx: GenFile = /*@__PURE__*/
  fileDesc("Ch9jb3Ntb3MvcHJvdG9jb2xwb29sL3YxL3R4LnByb3RvEhZjb3Ntb3MucHJvdG9jb2xwb29sLnYxIrgBChRNc2dGdW5kQ29tbXVuaXR5UG9vbBIrCglkZXBvc2l0b3IYASABKAlCGNK0LRRjb3Ntb3MuQWRkcmVzc1N0cmluZxJbCgZhbW91bnQYAiADKAsyGS5jb3Ntb3MuYmFzZS52MWJldGExLkNvaW5CMMjeHwCq3x8oZ2l0aHViLmNvbS9jb3Ntb3MvY29zbW9zLXNkay90eXBlcy5Db2luczoWiKAfAOigHwCC57AqCWRlcG9zaXRvciIeChxNc2dGdW5kQ29tbXVuaXR5UG9vbFJlc3BvbnNlIsQBChVNc2dDb21tdW5pdHlQb29sU3BlbmQSKwoJYXV0aG9yaXR5GAEgASgJQhjStC0UY29zbW9zLkFkZHJlc3NTdHJpbmcSEQoJcmVjaXBpZW50GAIgASgJElsKBmFtb3VudBgDIAMoCzIZLmNvc21vcy5iYXNlLnYxYmV0YTEuQ29pbkIwyN4fAKrfHyhnaXRodWIuY29tL2Nvc21vcy9jb3Ntb3Mtc2RrL3R5cGVzLkNvaW5zOg6C57AqCWF1dGhvcml0eSIfCh1Nc2dDb21tdW5pdHlQb29sU3BlbmRSZXNwb25zZSL8AQoXTXNnQ3JlYXRlQ29udGludW91c0Z1bmQSKwoJYXV0aG9yaXR5GAEgASgJQhjStC0UY29zbW9zLkFkZHJlc3NTdHJpbmcSKwoJcmVjaXBpZW50GAIgASgJQhjStC0UY29zbW9zLkFkZHJlc3NTdHJpbmcSRQoKcGVyY2VudGFnZRgDIAEoCUIxyN4fANreHxtjb3Ntb3NzZGsuaW8vbWF0aC5MZWdhY3lEZWPStC0KY29zbW9zLkRlYxIwCgZleHBpcnkYBCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQgSQ3x8BOg6C57AqCWF1dGhvcml0eSIhCh9Nc2dDcmVhdGVDb250aW51b3VzRnVuZFJlc3BvbnNlIoMBChdNc2dDYW5jZWxDb250aW51b3VzRnVuZBIrCglhdXRob3JpdHkYASABKAlCGNK0LRRjb3Ntb3MuQWRkcmVzc1N0cmluZxIrCglyZWNpcGllbnQYAiABKAlCGNK0LRRjb3Ntb3MuQWRkcmVzc1N0cmluZzoOguewKglhdXRob3JpdHkipAEKH01zZ0NhbmNlbENvbnRpbnVvdXNGdW5kUmVzcG9uc2USOwoNY2FuY2VsZWRfdGltZRgBIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCCMjeHwCQ3x8BEhcKD2NhbmNlbGVkX2hlaWdodBgCIAEoBBIrCglyZWNpcGllbnQYAyABKAlCGNK0LRRjb3Ntb3MuQWRkcmVzc1N0cmluZyKEAQoPTXNnVXBkYXRlUGFyYW1zEisKCWF1dGhvcml0eRgBIAEoCUIY0rQtFGNvc21vcy5BZGRyZXNzU3RyaW5nEjQKBnBhcmFtcxgCIAEoCzIeLmNvc21vcy5wcm90b2NvbHBvb2wudjEuUGFyYW1zQgTI3h8AOg6C57AqCWF1dGhvcml0eSIZChdNc2dVcGRhdGVQYXJhbXNSZXNwb25zZTLxBAoDTXNnEncKEUZ1bmRDb21tdW5pdHlQb29sEiwuY29zbW9zLnByb3RvY29scG9vbC52MS5Nc2dGdW5kQ29tbXVuaXR5UG9vbBo0LmNvc21vcy5wcm90b2NvbHBvb2wudjEuTXNnRnVuZENvbW11bml0eVBvb2xSZXNwb25zZRJ6ChJDb21tdW5pdHlQb29sU3BlbmQSLS5jb3Ntb3MucHJvdG9jb2xwb29sLnYxLk1zZ0NvbW11bml0eVBvb2xTcGVuZBo1LmNvc21vcy5wcm90b2NvbHBvb2wudjEuTXNnQ29tbXVuaXR5UG9vbFNwZW5kUmVzcG9uc2USgAEKFENyZWF0ZUNvbnRpbnVvdXNGdW5kEi8uY29zbW9zLnByb3RvY29scG9vbC52MS5Nc2dDcmVhdGVDb250aW51b3VzRnVuZBo3LmNvc21vcy5wcm90b2NvbHBvb2wudjEuTXNnQ3JlYXRlQ29udGludW91c0Z1bmRSZXNwb25zZRKAAQoUQ2FuY2VsQ29udGludW91c0Z1bmQSLy5jb3Ntb3MucHJvdG9jb2xwb29sLnYxLk1zZ0NhbmNlbENvbnRpbnVvdXNGdW5kGjcuY29zbW9zLnByb3RvY29scG9vbC52MS5Nc2dDYW5jZWxDb250aW51b3VzRnVuZFJlc3BvbnNlEmgKDFVwZGF0ZVBhcmFtcxInLmNvc21vcy5wcm90b2NvbHBvb2wudjEuTXNnVXBkYXRlUGFyYW1zGi8uY29zbW9zLnByb3RvY29scG9vbC52MS5Nc2dVcGRhdGVQYXJhbXNSZXNwb25zZRoFgOewKgFC0gEKGmNvbS5jb3Ntb3MucHJvdG9jb2xwb29sLnYxQgdUeFByb3RvUAFaMWdpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsveC9wcm90b2NvbHBvb2wvdHlwZXOiAgNDUFiqAhZDb3Ntb3MuUHJvdG9jb2xwb29sLlYxygIWQ29zbW9zXFByb3RvY29scG9vbFxWMeICIkNvc21vc1xQcm90b2NvbHBvb2xcVjFcR1BCTWV0YWRhdGHqAhhDb3Ntb3M6OlByb3RvY29scG9vbDo6VjFiBnByb3RvMw", [file_cosmos_protocolpool_v1_types, file_gogoproto_gogo, file_cosmos_base_v1beta1_coin, file_cosmos_proto_cosmos, file_cosmos_msg_v1_msg, file_google_protobuf_timestamp]);

/**
 * MsgFundCommunityPool allows an account to directly
 * fund the community pool.
 *
 * @generated from message cosmos.protocolpool.v1.MsgFundCommunityPool
 */
export type MsgFundCommunityPool = Message<"cosmos.protocolpool.v1.MsgFundCommunityPool"> & {
  /**
   * @generated from field: string depositor = 1;
   */
  depositor: string;

  /**
   * @generated from field: repeated cosmos.base.v1beta1.Coin amount = 2;
   */
  amount: Coin[];
};

/**
 * Describes the message cosmos.protocolpool.v1.MsgFundCommunityPool.
 * Use `create(MsgFundCommunityPoolSchema)` to create a new message.
 */
export const MsgFundCommunityPoolSchema: GenMessage<MsgFundCommunityPool> = /*@__PURE__*/
  messageDesc(file_cosmos_protocolpool_v1_tx, 0);

/**
 * MsgFundCommunityPoolResponse defines the Msg/FundCommunityPool response type.
 *
 * @generated from message cosmos.protocolpool.v1.MsgFundCommunityPoolResponse
 */
export type MsgFundCommunityPoolResponse = Message<"cosmos.protocolpool.v1.MsgFundCommunityPoolResponse"> & {
};

/**
 * Describes the message cosmos.protocolpool.v1.MsgFundCommunityPoolResponse.
 * Use `create(MsgFundCommunityPoolResponseSchema)` to create a new message.
 */
export const MsgFundCommunityPoolResponseSchema: GenMessage<MsgFundCommunityPoolResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_protocolpool_v1_tx, 1);

/**
 * MsgCommunityPoolSpend defines a message for sending tokens from the community
 * pool to another account. This message is typically executed via a governance
 * proposal with the governance module being the executing authority.
 *
 * @generated from message cosmos.protocolpool.v1.MsgCommunityPoolSpend
 */
export type MsgCommunityPoolSpend = Message<"cosmos.protocolpool.v1.MsgCommunityPoolSpend"> & {
  /**
   * Authority is the address that controls the module (defaults to x/gov unless overwritten).
   *
   * @generated from field: string authority = 1;
   */
  authority: string;

  /**
   * @generated from field: string recipient = 2;
   */
  recipient: string;

  /**
   * @generated from field: repeated cosmos.base.v1beta1.Coin amount = 3;
   */
  amount: Coin[];
};

/**
 * Describes the message cosmos.protocolpool.v1.MsgCommunityPoolSpend.
 * Use `create(MsgCommunityPoolSpendSchema)` to create a new message.
 */
export const MsgCommunityPoolSpendSchema: GenMessage<MsgCommunityPoolSpend> = /*@__PURE__*/
  messageDesc(file_cosmos_protocolpool_v1_tx, 2);

/**
 * MsgCommunityPoolSpendResponse defines the response to executing a
 * MsgCommunityPoolSpend message.
 *
 * @generated from message cosmos.protocolpool.v1.MsgCommunityPoolSpendResponse
 */
export type MsgCommunityPoolSpendResponse = Message<"cosmos.protocolpool.v1.MsgCommunityPoolSpendResponse"> & {
};

/**
 * Describes the message cosmos.protocolpool.v1.MsgCommunityPoolSpendResponse.
 * Use `create(MsgCommunityPoolSpendResponseSchema)` to create a new message.
 */
export const MsgCommunityPoolSpendResponseSchema: GenMessage<MsgCommunityPoolSpendResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_protocolpool_v1_tx, 3);

/**
 * MsgCreateContinuousFund defines a message for adding continuous funds.
 *
 * @generated from message cosmos.protocolpool.v1.MsgCreateContinuousFund
 */
export type MsgCreateContinuousFund = Message<"cosmos.protocolpool.v1.MsgCreateContinuousFund"> & {
  /**
   * Authority is the address that controls the module (defaults to x/gov unless overwritten).
   *
   * @generated from field: string authority = 1;
   */
  authority: string;

  /**
   * Recipient address of the account receiving funds.
   *
   * @generated from field: string recipient = 2;
   */
  recipient: string;

  /**
   * Percentage is the percentage of funds to be allocated from Community pool.
   *
   * @generated from field: string percentage = 3;
   */
  percentage: string;

  /**
   * Optional, if expiry is set, removes the state object when expired.
   *
   * @generated from field: google.protobuf.Timestamp expiry = 4;
   */
  expiry?: Timestamp;
};

/**
 * Describes the message cosmos.protocolpool.v1.MsgCreateContinuousFund.
 * Use `create(MsgCreateContinuousFundSchema)` to create a new message.
 */
export const MsgCreateContinuousFundSchema: GenMessage<MsgCreateContinuousFund> = /*@__PURE__*/
  messageDesc(file_cosmos_protocolpool_v1_tx, 4);

/**
 * MsgCreateContinuousFundResponse defines the response to executing a
 * MsgCreateContinuousFund message.
 *
 * @generated from message cosmos.protocolpool.v1.MsgCreateContinuousFundResponse
 */
export type MsgCreateContinuousFundResponse = Message<"cosmos.protocolpool.v1.MsgCreateContinuousFundResponse"> & {
};

/**
 * Describes the message cosmos.protocolpool.v1.MsgCreateContinuousFundResponse.
 * Use `create(MsgCreateContinuousFundResponseSchema)` to create a new message.
 */
export const MsgCreateContinuousFundResponseSchema: GenMessage<MsgCreateContinuousFundResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_protocolpool_v1_tx, 5);

/**
 * MsgCancelContinuousFund defines a message to cancel continuous funds for a specific recipient.
 *
 * @generated from message cosmos.protocolpool.v1.MsgCancelContinuousFund
 */
export type MsgCancelContinuousFund = Message<"cosmos.protocolpool.v1.MsgCancelContinuousFund"> & {
  /**
   * Authority is the account address of authority.
   *
   * @generated from field: string authority = 1;
   */
  authority: string;

  /**
   * Recipient is the account address string of the recipient whose funds are to be cancelled.
   *
   * @generated from field: string recipient = 2;
   */
  recipient: string;
};

/**
 * Describes the message cosmos.protocolpool.v1.MsgCancelContinuousFund.
 * Use `create(MsgCancelContinuousFundSchema)` to create a new message.
 */
export const MsgCancelContinuousFundSchema: GenMessage<MsgCancelContinuousFund> = /*@__PURE__*/
  messageDesc(file_cosmos_protocolpool_v1_tx, 6);

/**
 * MsgCancelContinuousFundResponse defines the response to executing a
 * MsgCancelContinuousFund message.
 *
 * @generated from message cosmos.protocolpool.v1.MsgCancelContinuousFundResponse
 */
export type MsgCancelContinuousFundResponse = Message<"cosmos.protocolpool.v1.MsgCancelContinuousFundResponse"> & {
  /**
   * CanceledTime is the canceled time.
   *
   * @generated from field: google.protobuf.Timestamp canceled_time = 1;
   */
  canceledTime?: Timestamp;

  /**
   * CanceledHeight defines the canceled block height.
   *
   * @generated from field: uint64 canceled_height = 2;
   */
  canceledHeight: bigint;

  /**
   * Recipient is the account address string of the recipient whose funds are cancelled.
   *
   * @generated from field: string recipient = 3;
   */
  recipient: string;
};

/**
 * Describes the message cosmos.protocolpool.v1.MsgCancelContinuousFundResponse.
 * Use `create(MsgCancelContinuousFundResponseSchema)` to create a new message.
 */
export const MsgCancelContinuousFundResponseSchema: GenMessage<MsgCancelContinuousFundResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_protocolpool_v1_tx, 7);

/**
 * MsgUpdateParams is the Msg/UpdateParams request type.
 *
 * @generated from message cosmos.protocolpool.v1.MsgUpdateParams
 */
export type MsgUpdateParams = Message<"cosmos.protocolpool.v1.MsgUpdateParams"> & {
  /**
   * authority is the address that controls the module (defaults to x/gov unless overwritten).
   *
   * @generated from field: string authority = 1;
   */
  authority: string;

  /**
   * params defines the x/protocolpool parameters to update.
   *
   * NOTE: All parameters must be supplied.
   *
   * @generated from field: cosmos.protocolpool.v1.Params params = 2;
   */
  params?: Params;
};

/**
 * Describes the message cosmos.protocolpool.v1.MsgUpdateParams.
 * Use `create(MsgUpdateParamsSchema)` to create a new message.
 */
export const MsgUpdateParamsSchema: GenMessage<MsgUpdateParams> = /*@__PURE__*/
  messageDesc(file_cosmos_protocolpool_v1_tx, 8);

/**
 * MsgUpdateParamsResponse defines the response structure for executing a
 * MsgUpdateParams message.
 *
 * @generated from message cosmos.protocolpool.v1.MsgUpdateParamsResponse
 */
export type MsgUpdateParamsResponse = Message<"cosmos.protocolpool.v1.MsgUpdateParamsResponse"> & {
};

/**
 * Describes the message cosmos.protocolpool.v1.MsgUpdateParamsResponse.
 * Use `create(MsgUpdateParamsResponseSchema)` to create a new message.
 */
export const MsgUpdateParamsResponseSchema: GenMessage<MsgUpdateParamsResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_protocolpool_v1_tx, 9);

/**
 * Msg defines the pool Msg service.
 *
 * @generated from service cosmos.protocolpool.v1.Msg
 */
export const Msg: GenService<{
  /**
   * FundCommunityPool defines a method to allow an account to directly
   * fund the community pool.
   *
   * @generated from rpc cosmos.protocolpool.v1.Msg.FundCommunityPool
   */
  fundCommunityPool: {
    methodKind: "unary";
    input: typeof MsgFundCommunityPoolSchema;
    output: typeof MsgFundCommunityPoolResponseSchema;
  },
  /**
   * CommunityPoolSpend defines a governance operation for sending tokens from
   * the community pool in the x/protocolpool module to another account, which
   * could be the governance module itself. The authority is defined in the
   * keeper.
   *
   * @generated from rpc cosmos.protocolpool.v1.Msg.CommunityPoolSpend
   */
  communityPoolSpend: {
    methodKind: "unary";
    input: typeof MsgCommunityPoolSpendSchema;
    output: typeof MsgCommunityPoolSpendResponseSchema;
  },
  /**
   * CreateContinuousFund defines a method to distribute a percentage of funds to an address continuously.
   * This ContinuousFund can be indefinite or run until a given expiry time.
   * Funds come from validator block rewards from x/distribution, but may also come from
   * any user who funds the ProtocolPoolEscrow module account directly through x/bank.
   *
   * @generated from rpc cosmos.protocolpool.v1.Msg.CreateContinuousFund
   */
  createContinuousFund: {
    methodKind: "unary";
    input: typeof MsgCreateContinuousFundSchema;
    output: typeof MsgCreateContinuousFundResponseSchema;
  },
  /**
   * CancelContinuousFund defines a method for cancelling continuous fund.
   *
   * @generated from rpc cosmos.protocolpool.v1.Msg.CancelContinuousFund
   */
  cancelContinuousFund: {
    methodKind: "unary";
    input: typeof MsgCancelContinuousFundSchema;
    output: typeof MsgCancelContinuousFundResponseSchema;
  },
  /**
   * UpdateParams defines a governance operation for updating the x/protocolpool module parameters.
   * The authority is defined in the keeper.
   *
   * @generated from rpc cosmos.protocolpool.v1.Msg.UpdateParams
   */
  updateParams: {
    methodKind: "unary";
    input: typeof MsgUpdateParamsSchema;
    output: typeof MsgUpdateParamsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_cosmos_protocolpool_v1_tx, 0);

