// @generated by protoc-gen-es v2.2.2 with parameter "target=ts"
// @generated from file cosmos/accounts/v1/query.proto (package cosmos.accounts.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { Any } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_any } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file cosmos/accounts/v1/query.proto.
 */
export const file_cosmos_accounts_v1_query: GenFile = /*@__PURE__*/
  fileDesc("Ch5jb3Ntb3MvYWNjb3VudHMvdjEvcXVlcnkucHJvdG8SEmNvc21vcy5hY2NvdW50cy52MSJMChNBY2NvdW50UXVlcnlSZXF1ZXN0Eg4KBnRhcmdldBgBIAEoCRIlCgdyZXF1ZXN0GAIgASgLMhQuZ29vZ2xlLnByb3RvYnVmLkFueSI+ChRBY2NvdW50UXVlcnlSZXNwb25zZRImCghyZXNwb25zZRgBIAEoCzIULmdvb2dsZS5wcm90b2J1Zi5BbnkiJQoNU2NoZW1hUmVxdWVzdBIUCgxhY2NvdW50X3R5cGUYASABKAkiiQIKDlNjaGVtYVJlc3BvbnNlEj8KC2luaXRfc2NoZW1hGAEgASgLMiouY29zbW9zLmFjY291bnRzLnYxLlNjaGVtYVJlc3BvbnNlLkhhbmRsZXISRAoQZXhlY3V0ZV9oYW5kbGVycxgCIAMoCzIqLmNvc21vcy5hY2NvdW50cy52MS5TY2hlbWFSZXNwb25zZS5IYW5kbGVyEkIKDnF1ZXJ5X2hhbmRsZXJzGAMgAygLMiouY29zbW9zLmFjY291bnRzLnYxLlNjaGVtYVJlc3BvbnNlLkhhbmRsZXIaLAoHSGFuZGxlchIPCgdyZXF1ZXN0GAEgASgJEhAKCHJlc3BvbnNlGAIgASgJIiUKEkFjY291bnRUeXBlUmVxdWVzdBIPCgdhZGRyZXNzGAEgASgJIisKE0FjY291bnRUeXBlUmVzcG9uc2USFAoMYWNjb3VudF90eXBlGAEgASgJIicKFEFjY291bnROdW1iZXJSZXF1ZXN0Eg8KB2FkZHJlc3MYASABKAkiJwoVQWNjb3VudE51bWJlclJlc3BvbnNlEg4KBm51bWJlchgBIAEoBDKJAwoFUXVlcnkSYwoMQWNjb3VudFF1ZXJ5EicuY29zbW9zLmFjY291bnRzLnYxLkFjY291bnRRdWVyeVJlcXVlc3QaKC5jb3Ntb3MuYWNjb3VudHMudjEuQWNjb3VudFF1ZXJ5UmVzcG9uc2UiABJRCgZTY2hlbWESIS5jb3Ntb3MuYWNjb3VudHMudjEuU2NoZW1hUmVxdWVzdBoiLmNvc21vcy5hY2NvdW50cy52MS5TY2hlbWFSZXNwb25zZSIAEmAKC0FjY291bnRUeXBlEiYuY29zbW9zLmFjY291bnRzLnYxLkFjY291bnRUeXBlUmVxdWVzdBonLmNvc21vcy5hY2NvdW50cy52MS5BY2NvdW50VHlwZVJlc3BvbnNlIgASZgoNQWNjb3VudE51bWJlchIoLmNvc21vcy5hY2NvdW50cy52MS5BY2NvdW50TnVtYmVyUmVxdWVzdBopLmNvc21vcy5hY2NvdW50cy52MS5BY2NvdW50TnVtYmVyUmVzcG9uc2UiAEKqAQoWY29tLmNvc21vcy5hY2NvdW50cy52MUIKUXVlcnlQcm90b1ABWhpjb3Ntb3NzZGsuaW8veC9hY2NvdW50cy92MaICA0NBWKoCEkNvc21vcy5BY2NvdW50cy5WMcoCEkNvc21vc1xBY2NvdW50c1xWMeICHkNvc21vc1xBY2NvdW50c1xWMVxHUEJNZXRhZGF0YeoCFENvc21vczo6QWNjb3VudHM6OlYxYgZwcm90bzM", [file_google_protobuf_any]);

/**
 * AccountQueryRequest is the request type for the Query/AccountQuery RPC
 *
 * @generated from message cosmos.accounts.v1.AccountQueryRequest
 */
export type AccountQueryRequest = Message<"cosmos.accounts.v1.AccountQueryRequest"> & {
  /**
   * target defines the account to be queried.
   *
   * @generated from field: string target = 1;
   */
  target: string;

  /**
   * request defines the query message being sent to the account.
   *
   * @generated from field: google.protobuf.Any request = 2;
   */
  request?: Any;
};

/**
 * Describes the message cosmos.accounts.v1.AccountQueryRequest.
 * Use `create(AccountQueryRequestSchema)` to create a new message.
 */
export const AccountQueryRequestSchema: GenMessage<AccountQueryRequest> = /*@__PURE__*/
  messageDesc(file_cosmos_accounts_v1_query, 0);

/**
 * AccountQueryResponse is the response type for the Query/AccountQuery RPC method.
 *
 * @generated from message cosmos.accounts.v1.AccountQueryResponse
 */
export type AccountQueryResponse = Message<"cosmos.accounts.v1.AccountQueryResponse"> & {
  /**
   * response defines the query response of the account.
   *
   * @generated from field: google.protobuf.Any response = 1;
   */
  response?: Any;
};

/**
 * Describes the message cosmos.accounts.v1.AccountQueryResponse.
 * Use `create(AccountQueryResponseSchema)` to create a new message.
 */
export const AccountQueryResponseSchema: GenMessage<AccountQueryResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_accounts_v1_query, 1);

/**
 * SchemaRequest is the request type for the Query/Schema RPC method.
 *
 * @generated from message cosmos.accounts.v1.SchemaRequest
 */
export type SchemaRequest = Message<"cosmos.accounts.v1.SchemaRequest"> & {
  /**
   * account_type defines the account type to query the schema for.
   *
   * @generated from field: string account_type = 1;
   */
  accountType: string;
};

/**
 * Describes the message cosmos.accounts.v1.SchemaRequest.
 * Use `create(SchemaRequestSchema)` to create a new message.
 */
export const SchemaRequestSchema: GenMessage<SchemaRequest> = /*@__PURE__*/
  messageDesc(file_cosmos_accounts_v1_query, 2);

/**
 * SchemaResponse is the response type for the Query/Schema RPC method.
 *
 * @generated from message cosmos.accounts.v1.SchemaResponse
 */
export type SchemaResponse = Message<"cosmos.accounts.v1.SchemaResponse"> & {
  /**
   * init_schema defines the schema descriptor for the Init account method.
   *
   * @generated from field: cosmos.accounts.v1.SchemaResponse.Handler init_schema = 1;
   */
  initSchema?: SchemaResponse_Handler;

  /**
   * execute_handlers defines the schema descriptor for the Execute account method.
   *
   * @generated from field: repeated cosmos.accounts.v1.SchemaResponse.Handler execute_handlers = 2;
   */
  executeHandlers: SchemaResponse_Handler[];

  /**
   * query_handlers defines the schema descriptor for the Query account method.
   *
   * @generated from field: repeated cosmos.accounts.v1.SchemaResponse.Handler query_handlers = 3;
   */
  queryHandlers: SchemaResponse_Handler[];
};

/**
 * Describes the message cosmos.accounts.v1.SchemaResponse.
 * Use `create(SchemaResponseSchema)` to create a new message.
 */
export const SchemaResponseSchema: GenMessage<SchemaResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_accounts_v1_query, 3);

/**
 * Handler defines a schema descriptor for a handler.
 * Where request and response are names that can be used to lookup the
 * reflection descriptor.
 *
 * @generated from message cosmos.accounts.v1.SchemaResponse.Handler
 */
export type SchemaResponse_Handler = Message<"cosmos.accounts.v1.SchemaResponse.Handler"> & {
  /**
   * request is the request name
   *
   * @generated from field: string request = 1;
   */
  request: string;

  /**
   * response is the response name
   *
   * @generated from field: string response = 2;
   */
  response: string;
};

/**
 * Describes the message cosmos.accounts.v1.SchemaResponse.Handler.
 * Use `create(SchemaResponse_HandlerSchema)` to create a new message.
 */
export const SchemaResponse_HandlerSchema: GenMessage<SchemaResponse_Handler> = /*@__PURE__*/
  messageDesc(file_cosmos_accounts_v1_query, 3, 0);

/**
 * AccountTypeRequest is the request type for the Query/AccountType RPC method.
 *
 * @generated from message cosmos.accounts.v1.AccountTypeRequest
 */
export type AccountTypeRequest = Message<"cosmos.accounts.v1.AccountTypeRequest"> & {
  /**
   * address defines the address to query the account type for.
   *
   * @generated from field: string address = 1;
   */
  address: string;
};

/**
 * Describes the message cosmos.accounts.v1.AccountTypeRequest.
 * Use `create(AccountTypeRequestSchema)` to create a new message.
 */
export const AccountTypeRequestSchema: GenMessage<AccountTypeRequest> = /*@__PURE__*/
  messageDesc(file_cosmos_accounts_v1_query, 4);

/**
 * AccountTypeResponse is the response type for the Query/AccountType RPC method.
 *
 * @generated from message cosmos.accounts.v1.AccountTypeResponse
 */
export type AccountTypeResponse = Message<"cosmos.accounts.v1.AccountTypeResponse"> & {
  /**
   * account_type defines the account type for the address.
   *
   * @generated from field: string account_type = 1;
   */
  accountType: string;
};

/**
 * Describes the message cosmos.accounts.v1.AccountTypeResponse.
 * Use `create(AccountTypeResponseSchema)` to create a new message.
 */
export const AccountTypeResponseSchema: GenMessage<AccountTypeResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_accounts_v1_query, 5);

/**
 * AccountNumberRequest returns the account number given the address.
 *
 * @generated from message cosmos.accounts.v1.AccountNumberRequest
 */
export type AccountNumberRequest = Message<"cosmos.accounts.v1.AccountNumberRequest"> & {
  /**
   * address is the address of the account we want to know the number of.
   *
   * @generated from field: string address = 1;
   */
  address: string;
};

/**
 * Describes the message cosmos.accounts.v1.AccountNumberRequest.
 * Use `create(AccountNumberRequestSchema)` to create a new message.
 */
export const AccountNumberRequestSchema: GenMessage<AccountNumberRequest> = /*@__PURE__*/
  messageDesc(file_cosmos_accounts_v1_query, 6);

/**
 * AccountNumberResponse is the response returned when querying the
 * account number by address.
 *
 * @generated from message cosmos.accounts.v1.AccountNumberResponse
 */
export type AccountNumberResponse = Message<"cosmos.accounts.v1.AccountNumberResponse"> & {
  /**
   * number is the account number of the provided address.
   *
   * @generated from field: uint64 number = 1;
   */
  number: bigint;
};

/**
 * Describes the message cosmos.accounts.v1.AccountNumberResponse.
 * Use `create(AccountNumberResponseSchema)` to create a new message.
 */
export const AccountNumberResponseSchema: GenMessage<AccountNumberResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_accounts_v1_query, 7);

/**
 * Query defines the Query service for the x/accounts module.
 *
 * @generated from service cosmos.accounts.v1.Query
 */
export const Query: GenService<{
  /**
   * AccountQuery runs an account query.
   *
   * @generated from rpc cosmos.accounts.v1.Query.AccountQuery
   */
  accountQuery: {
    methodKind: "unary";
    input: typeof AccountQueryRequestSchema;
    output: typeof AccountQueryResponseSchema;
  },
  /**
   * Schema returns an x/account schema. Unstable.
   *
   * @generated from rpc cosmos.accounts.v1.Query.Schema
   */
  schema: {
    methodKind: "unary";
    input: typeof SchemaRequestSchema;
    output: typeof SchemaResponseSchema;
  },
  /**
   * AccountType returns the account type for an address.
   *
   * @generated from rpc cosmos.accounts.v1.Query.AccountType
   */
  accountType: {
    methodKind: "unary";
    input: typeof AccountTypeRequestSchema;
    output: typeof AccountTypeResponseSchema;
  },
  /**
   * AccountNumber returns the account number given the account address.
   *
   * @generated from rpc cosmos.accounts.v1.Query.AccountNumber
   */
  accountNumber: {
    methodKind: "unary";
    input: typeof AccountNumberRequestSchema;
    output: typeof AccountNumberResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_cosmos_accounts_v1_query, 0);

