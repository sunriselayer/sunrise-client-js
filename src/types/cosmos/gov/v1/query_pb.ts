// Since: cosmos-sdk 0.46

// @generated by protoc-gen-es v2.2.2 with parameter "target=ts"
// @generated from file cosmos/gov/v1/query.proto (package cosmos.gov.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { PageRequest, PageResponse } from "../../base/query/v1beta1/pagination_pb";
import { file_cosmos_base_query_v1beta1_pagination } from "../../base/query/v1beta1/pagination_pb";
import { file_google_api_annotations } from "../../../google/api/annotations_pb";
import type { Deposit, DepositParams, MessageBasedParams, Params, Proposal, ProposalStatus, ProposalVoteOptions, TallyParams, TallyResult, Vote, VotingParams } from "./gov_pb";
import { file_cosmos_gov_v1_gov } from "./gov_pb";
import { file_cosmos_proto_cosmos } from "../../../cosmos_proto/cosmos_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file cosmos/gov/v1/query.proto.
 */
export const file_cosmos_gov_v1_query: GenFile = /*@__PURE__*/
  fileDesc("Chljb3Ntb3MvZ292L3YxL3F1ZXJ5LnByb3RvEg1jb3Ntb3MuZ292LnYxIhoKGFF1ZXJ5Q29uc3RpdHV0aW9uUmVxdWVzdCIxChlRdWVyeUNvbnN0aXR1dGlvblJlc3BvbnNlEhQKDGNvbnN0aXR1dGlvbhgBIAEoCSIrChRRdWVyeVByb3Bvc2FsUmVxdWVzdBITCgtwcm9wb3NhbF9pZBgBIAEoBCJCChVRdWVyeVByb3Bvc2FsUmVzcG9uc2USKQoIcHJvcG9zYWwYASABKAsyFy5jb3Ntb3MuZ292LnYxLlByb3Bvc2FsIuEBChVRdWVyeVByb3Bvc2Fsc1JlcXVlc3QSNgoPcHJvcG9zYWxfc3RhdHVzGAEgASgOMh0uY29zbW9zLmdvdi52MS5Qcm9wb3NhbFN0YXR1cxInCgV2b3RlchgCIAEoCUIY0rQtFGNvc21vcy5BZGRyZXNzU3RyaW5nEisKCWRlcG9zaXRvchgDIAEoCUIY0rQtFGNvc21vcy5BZGRyZXNzU3RyaW5nEjoKCnBhZ2luYXRpb24YBCABKAsyJi5jb3Ntb3MuYmFzZS5xdWVyeS52MWJldGExLlBhZ2VSZXF1ZXN0IoEBChZRdWVyeVByb3Bvc2Fsc1Jlc3BvbnNlEioKCXByb3Bvc2FscxgBIAMoCzIXLmNvc21vcy5nb3YudjEuUHJvcG9zYWwSOwoKcGFnaW5hdGlvbhgCIAEoCzInLmNvc21vcy5iYXNlLnF1ZXJ5LnYxYmV0YTEuUGFnZVJlc3BvbnNlIlAKEFF1ZXJ5Vm90ZVJlcXVlc3QSEwoLcHJvcG9zYWxfaWQYASABKAQSJwoFdm90ZXIYAiABKAlCGNK0LRRjb3Ntb3MuQWRkcmVzc1N0cmluZyI2ChFRdWVyeVZvdGVSZXNwb25zZRIhCgR2b3RlGAEgASgLMhMuY29zbW9zLmdvdi52MS5Wb3RlImQKEVF1ZXJ5Vm90ZXNSZXF1ZXN0EhMKC3Byb3Bvc2FsX2lkGAEgASgEEjoKCnBhZ2luYXRpb24YAiABKAsyJi5jb3Ntb3MuYmFzZS5xdWVyeS52MWJldGExLlBhZ2VSZXF1ZXN0InUKElF1ZXJ5Vm90ZXNSZXNwb25zZRIiCgV2b3RlcxgBIAMoCzITLmNvc21vcy5nb3YudjEuVm90ZRI7CgpwYWdpbmF0aW9uGAIgASgLMicuY29zbW9zLmJhc2UucXVlcnkudjFiZXRhMS5QYWdlUmVzcG9uc2UiLQoSUXVlcnlQYXJhbXNSZXF1ZXN0EhcKC3BhcmFtc190eXBlGAEgASgJQgIYASL6AQoTUXVlcnlQYXJhbXNSZXNwb25zZRI2Cg12b3RpbmdfcGFyYW1zGAEgASgLMhsuY29zbW9zLmdvdi52MS5Wb3RpbmdQYXJhbXNCAhgBEjgKDmRlcG9zaXRfcGFyYW1zGAIgASgLMhwuY29zbW9zLmdvdi52MS5EZXBvc2l0UGFyYW1zQgIYARI0Cgx0YWxseV9wYXJhbXMYAyABKAsyGi5jb3Ntb3MuZ292LnYxLlRhbGx5UGFyYW1zQgIYARI7CgZwYXJhbXMYBCABKAsyFS5jb3Ntb3MuZ292LnYxLlBhcmFtc0IU2rQtEGNvc21vcy1zZGsgdjAuNDciVwoTUXVlcnlEZXBvc2l0UmVxdWVzdBITCgtwcm9wb3NhbF9pZBgBIAEoBBIrCglkZXBvc2l0b3IYAiABKAlCGNK0LRRjb3Ntb3MuQWRkcmVzc1N0cmluZyI/ChRRdWVyeURlcG9zaXRSZXNwb25zZRInCgdkZXBvc2l0GAEgASgLMhYuY29zbW9zLmdvdi52MS5EZXBvc2l0ImcKFFF1ZXJ5RGVwb3NpdHNSZXF1ZXN0EhMKC3Byb3Bvc2FsX2lkGAEgASgEEjoKCnBhZ2luYXRpb24YAiABKAsyJi5jb3Ntb3MuYmFzZS5xdWVyeS52MWJldGExLlBhZ2VSZXF1ZXN0In4KFVF1ZXJ5RGVwb3NpdHNSZXNwb25zZRIoCghkZXBvc2l0cxgBIAMoCzIWLmNvc21vcy5nb3YudjEuRGVwb3NpdBI7CgpwYWdpbmF0aW9uGAIgASgLMicuY29zbW9zLmJhc2UucXVlcnkudjFiZXRhMS5QYWdlUmVzcG9uc2UiLgoXUXVlcnlUYWxseVJlc3VsdFJlcXVlc3QSEwoLcHJvcG9zYWxfaWQYASABKAQiRQoYUXVlcnlUYWxseVJlc3VsdFJlc3BvbnNlEikKBXRhbGx5GAEgASgLMhouY29zbW9zLmdvdi52MS5UYWxseVJlc3VsdCI2Ch9RdWVyeVByb3Bvc2FsVm90ZU9wdGlvbnNSZXF1ZXN0EhMKC3Byb3Bvc2FsX2lkGAEgASgEIlwKIFF1ZXJ5UHJvcG9zYWxWb3RlT3B0aW9uc1Jlc3BvbnNlEjgKDHZvdGVfb3B0aW9ucxgBIAEoCzIiLmNvc21vcy5nb3YudjEuUHJvcG9zYWxWb3RlT3B0aW9ucyJCCh5RdWVyeU1lc3NhZ2VCYXNlZFBhcmFtc1JlcXVlc3QSIAoHbXNnX3VybBgBIAEoCUIP2rQtC3gvZ292IDEuMC4wImUKH1F1ZXJ5TWVzc2FnZUJhc2VkUGFyYW1zUmVzcG9uc2USQgoGcGFyYW1zGAEgASgLMiEuY29zbW9zLmdvdi52MS5NZXNzYWdlQmFzZWRQYXJhbXNCD9q0LQt4L2dvdiAxLjAuMDLKDAoFUXVlcnkShgEKDENvbnN0aXR1dGlvbhInLmNvc21vcy5nb3YudjEuUXVlcnlDb25zdGl0dXRpb25SZXF1ZXN0GiguY29zbW9zLmdvdi52MS5RdWVyeUNvbnN0aXR1dGlvblJlc3BvbnNlIiOC0+STAh0SGy9jb3Ntb3MvZ292L3YxL2NvbnN0aXR1dGlvbhKFAQoIUHJvcG9zYWwSIy5jb3Ntb3MuZ292LnYxLlF1ZXJ5UHJvcG9zYWxSZXF1ZXN0GiQuY29zbW9zLmdvdi52MS5RdWVyeVByb3Bvc2FsUmVzcG9uc2UiLoLT5JMCKBImL2Nvc21vcy9nb3YvdjEvcHJvcG9zYWxzL3twcm9wb3NhbF9pZH0SegoJUHJvcG9zYWxzEiQuY29zbW9zLmdvdi52MS5RdWVyeVByb3Bvc2Fsc1JlcXVlc3QaJS5jb3Ntb3MuZ292LnYxLlF1ZXJ5UHJvcG9zYWxzUmVzcG9uc2UiIILT5JMCGhIYL2Nvc21vcy9nb3YvdjEvcHJvcG9zYWxzEocBCgRWb3RlEh8uY29zbW9zLmdvdi52MS5RdWVyeVZvdGVSZXF1ZXN0GiAuY29zbW9zLmdvdi52MS5RdWVyeVZvdGVSZXNwb25zZSI8gtPkkwI2EjQvY29zbW9zL2dvdi92MS9wcm9wb3NhbHMve3Byb3Bvc2FsX2lkfS92b3Rlcy97dm90ZXJ9EoIBCgVWb3RlcxIgLmNvc21vcy5nb3YudjEuUXVlcnlWb3Rlc1JlcXVlc3QaIS5jb3Ntb3MuZ292LnYxLlF1ZXJ5Vm90ZXNSZXNwb25zZSI0gtPkkwIuEiwvY29zbW9zL2dvdi92MS9wcm9wb3NhbHMve3Byb3Bvc2FsX2lkfS92b3RlcxJuCgZQYXJhbXMSIS5jb3Ntb3MuZ292LnYxLlF1ZXJ5UGFyYW1zUmVxdWVzdBoiLmNvc21vcy5nb3YudjEuUXVlcnlQYXJhbXNSZXNwb25zZSIdgtPkkwIXEhUvY29zbW9zL2dvdi92MS9wYXJhbXMSlwEKB0RlcG9zaXQSIi5jb3Ntb3MuZ292LnYxLlF1ZXJ5RGVwb3NpdFJlcXVlc3QaIy5jb3Ntb3MuZ292LnYxLlF1ZXJ5RGVwb3NpdFJlc3BvbnNlIkOC0+STAj0SOy9jb3Ntb3MvZ292L3YxL3Byb3Bvc2Fscy97cHJvcG9zYWxfaWR9L2RlcG9zaXRzL3tkZXBvc2l0b3J9Eo4BCghEZXBvc2l0cxIjLmNvc21vcy5nb3YudjEuUXVlcnlEZXBvc2l0c1JlcXVlc3QaJC5jb3Ntb3MuZ292LnYxLlF1ZXJ5RGVwb3NpdHNSZXNwb25zZSI3gtPkkwIxEi8vY29zbW9zL2dvdi92MS9wcm9wb3NhbHMve3Byb3Bvc2FsX2lkfS9kZXBvc2l0cxKUAQoLVGFsbHlSZXN1bHQSJi5jb3Ntb3MuZ292LnYxLlF1ZXJ5VGFsbHlSZXN1bHRSZXF1ZXN0GicuY29zbW9zLmdvdi52MS5RdWVyeVRhbGx5UmVzdWx0UmVzcG9uc2UiNILT5JMCLhIsL2Nvc21vcy9nb3YvdjEvcHJvcG9zYWxzL3twcm9wb3NhbF9pZH0vdGFsbHkSwwEKE1Byb3Bvc2FsVm90ZU9wdGlvbnMSLi5jb3Ntb3MuZ292LnYxLlF1ZXJ5UHJvcG9zYWxWb3RlT3B0aW9uc1JlcXVlc3QaLy5jb3Ntb3MuZ292LnYxLlF1ZXJ5UHJvcG9zYWxWb3RlT3B0aW9uc1Jlc3BvbnNlIkvKtC0MeC9nb3YgdjAuMi4wgtPkkwI1EjMvY29zbW9zL2dvdi92MS9wcm9wb3NhbHMve3Byb3Bvc2FsX2lkfS92b3RlX29wdGlvbnMSrAEKEk1lc3NhZ2VCYXNlZFBhcmFtcxItLmNvc21vcy5nb3YudjEuUXVlcnlNZXNzYWdlQmFzZWRQYXJhbXNSZXF1ZXN0Gi4uY29zbW9zLmdvdi52MS5RdWVyeU1lc3NhZ2VCYXNlZFBhcmFtc1Jlc3BvbnNlIjfKtC0MeC9nb3YgdjAuMi4wgtPkkwIhEh8vY29zbW9zL2dvdi92MS9wYXJhbXMve21zZ191cmx9QpIBChFjb20uY29zbW9zLmdvdi52MUIKUXVlcnlQcm90b1ABWhtjb3Ntb3NzZGsuaW8veC9nb3YvdHlwZXMvdjGiAgNDR1iqAg1Db3Ntb3MuR292LlYxygINQ29zbW9zXEdvdlxWMeICGUNvc21vc1xHb3ZcVjFcR1BCTWV0YWRhdGHqAg9Db3Ntb3M6Okdvdjo6VjFiBnByb3RvMw", [file_cosmos_base_query_v1beta1_pagination, file_google_api_annotations, file_cosmos_gov_v1_gov, file_cosmos_proto_cosmos]);

/**
 * QueryConstitutionRequest is the request type for the Query/Constitution RPC method
 *
 * @generated from message cosmos.gov.v1.QueryConstitutionRequest
 */
export type QueryConstitutionRequest = Message<"cosmos.gov.v1.QueryConstitutionRequest"> & {
};

/**
 * Describes the message cosmos.gov.v1.QueryConstitutionRequest.
 * Use `create(QueryConstitutionRequestSchema)` to create a new message.
 */
export const QueryConstitutionRequestSchema: GenMessage<QueryConstitutionRequest> = /*@__PURE__*/
  messageDesc(file_cosmos_gov_v1_query, 0);

/**
 * QueryConstitutionResponse is the response type for the Query/Constitution RPC method
 *
 * @generated from message cosmos.gov.v1.QueryConstitutionResponse
 */
export type QueryConstitutionResponse = Message<"cosmos.gov.v1.QueryConstitutionResponse"> & {
  /**
   * @generated from field: string constitution = 1;
   */
  constitution: string;
};

/**
 * Describes the message cosmos.gov.v1.QueryConstitutionResponse.
 * Use `create(QueryConstitutionResponseSchema)` to create a new message.
 */
export const QueryConstitutionResponseSchema: GenMessage<QueryConstitutionResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_gov_v1_query, 1);

/**
 * QueryProposalRequest is the request type for the Query/Proposal RPC method.
 *
 * @generated from message cosmos.gov.v1.QueryProposalRequest
 */
export type QueryProposalRequest = Message<"cosmos.gov.v1.QueryProposalRequest"> & {
  /**
   * proposal_id defines the unique id of the proposal.
   *
   * @generated from field: uint64 proposal_id = 1;
   */
  proposalId: bigint;
};

/**
 * Describes the message cosmos.gov.v1.QueryProposalRequest.
 * Use `create(QueryProposalRequestSchema)` to create a new message.
 */
export const QueryProposalRequestSchema: GenMessage<QueryProposalRequest> = /*@__PURE__*/
  messageDesc(file_cosmos_gov_v1_query, 2);

/**
 * QueryProposalResponse is the response type for the Query/Proposal RPC method.
 *
 * @generated from message cosmos.gov.v1.QueryProposalResponse
 */
export type QueryProposalResponse = Message<"cosmos.gov.v1.QueryProposalResponse"> & {
  /**
   * proposal is the requested governance proposal.
   *
   * @generated from field: cosmos.gov.v1.Proposal proposal = 1;
   */
  proposal?: Proposal;
};

/**
 * Describes the message cosmos.gov.v1.QueryProposalResponse.
 * Use `create(QueryProposalResponseSchema)` to create a new message.
 */
export const QueryProposalResponseSchema: GenMessage<QueryProposalResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_gov_v1_query, 3);

/**
 * QueryProposalsRequest is the request type for the Query/Proposals RPC method.
 *
 * @generated from message cosmos.gov.v1.QueryProposalsRequest
 */
export type QueryProposalsRequest = Message<"cosmos.gov.v1.QueryProposalsRequest"> & {
  /**
   * proposal_status defines the status of the proposals.
   *
   * @generated from field: cosmos.gov.v1.ProposalStatus proposal_status = 1;
   */
  proposalStatus: ProposalStatus;

  /**
   * voter defines the voter address for the proposals.
   *
   * @generated from field: string voter = 2;
   */
  voter: string;

  /**
   * depositor defines the deposit addresses from the proposals.
   *
   * @generated from field: string depositor = 3;
   */
  depositor: string;

  /**
   * pagination defines an optional pagination for the request.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 4;
   */
  pagination?: PageRequest;
};

/**
 * Describes the message cosmos.gov.v1.QueryProposalsRequest.
 * Use `create(QueryProposalsRequestSchema)` to create a new message.
 */
export const QueryProposalsRequestSchema: GenMessage<QueryProposalsRequest> = /*@__PURE__*/
  messageDesc(file_cosmos_gov_v1_query, 4);

/**
 * QueryProposalsResponse is the response type for the Query/Proposals RPC
 * method.
 *
 * @generated from message cosmos.gov.v1.QueryProposalsResponse
 */
export type QueryProposalsResponse = Message<"cosmos.gov.v1.QueryProposalsResponse"> & {
  /**
   * proposals defines all the requested governance proposals.
   *
   * @generated from field: repeated cosmos.gov.v1.Proposal proposals = 1;
   */
  proposals: Proposal[];

  /**
   * pagination defines the pagination in the response.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;
};

/**
 * Describes the message cosmos.gov.v1.QueryProposalsResponse.
 * Use `create(QueryProposalsResponseSchema)` to create a new message.
 */
export const QueryProposalsResponseSchema: GenMessage<QueryProposalsResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_gov_v1_query, 5);

/**
 * QueryVoteRequest is the request type for the Query/Vote RPC method.
 *
 * @generated from message cosmos.gov.v1.QueryVoteRequest
 */
export type QueryVoteRequest = Message<"cosmos.gov.v1.QueryVoteRequest"> & {
  /**
   * proposal_id defines the unique id of the proposal.
   *
   * @generated from field: uint64 proposal_id = 1;
   */
  proposalId: bigint;

  /**
   * voter defines the voter address for the proposals.
   *
   * @generated from field: string voter = 2;
   */
  voter: string;
};

/**
 * Describes the message cosmos.gov.v1.QueryVoteRequest.
 * Use `create(QueryVoteRequestSchema)` to create a new message.
 */
export const QueryVoteRequestSchema: GenMessage<QueryVoteRequest> = /*@__PURE__*/
  messageDesc(file_cosmos_gov_v1_query, 6);

/**
 * QueryVoteResponse is the response type for the Query/Vote RPC method.
 *
 * @generated from message cosmos.gov.v1.QueryVoteResponse
 */
export type QueryVoteResponse = Message<"cosmos.gov.v1.QueryVoteResponse"> & {
  /**
   * vote defines the queried vote.
   *
   * @generated from field: cosmos.gov.v1.Vote vote = 1;
   */
  vote?: Vote;
};

/**
 * Describes the message cosmos.gov.v1.QueryVoteResponse.
 * Use `create(QueryVoteResponseSchema)` to create a new message.
 */
export const QueryVoteResponseSchema: GenMessage<QueryVoteResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_gov_v1_query, 7);

/**
 * QueryVotesRequest is the request type for the Query/Votes RPC method.
 *
 * @generated from message cosmos.gov.v1.QueryVotesRequest
 */
export type QueryVotesRequest = Message<"cosmos.gov.v1.QueryVotesRequest"> & {
  /**
   * proposal_id defines the unique id of the proposal.
   *
   * @generated from field: uint64 proposal_id = 1;
   */
  proposalId: bigint;

  /**
   * pagination defines an optional pagination for the request.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 2;
   */
  pagination?: PageRequest;
};

/**
 * Describes the message cosmos.gov.v1.QueryVotesRequest.
 * Use `create(QueryVotesRequestSchema)` to create a new message.
 */
export const QueryVotesRequestSchema: GenMessage<QueryVotesRequest> = /*@__PURE__*/
  messageDesc(file_cosmos_gov_v1_query, 8);

/**
 * QueryVotesResponse is the response type for the Query/Votes RPC method.
 *
 * @generated from message cosmos.gov.v1.QueryVotesResponse
 */
export type QueryVotesResponse = Message<"cosmos.gov.v1.QueryVotesResponse"> & {
  /**
   * votes defines the queried votes.
   *
   * @generated from field: repeated cosmos.gov.v1.Vote votes = 1;
   */
  votes: Vote[];

  /**
   * pagination defines the pagination in the response.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;
};

/**
 * Describes the message cosmos.gov.v1.QueryVotesResponse.
 * Use `create(QueryVotesResponseSchema)` to create a new message.
 */
export const QueryVotesResponseSchema: GenMessage<QueryVotesResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_gov_v1_query, 9);

/**
 * QueryParamsRequest is the request type for the Query/Params RPC method.
 *
 * @generated from message cosmos.gov.v1.QueryParamsRequest
 */
export type QueryParamsRequest = Message<"cosmos.gov.v1.QueryParamsRequest"> & {
  /**
   * params_type defines which parameters to query for, can be one of "voting",
   * "tallying" or "deposit".
   * Deprecated: all params are stored in Params.
   *
   * @generated from field: string params_type = 1 [deprecated = true];
   * @deprecated
   */
  paramsType: string;
};

/**
 * Describes the message cosmos.gov.v1.QueryParamsRequest.
 * Use `create(QueryParamsRequestSchema)` to create a new message.
 */
export const QueryParamsRequestSchema: GenMessage<QueryParamsRequest> = /*@__PURE__*/
  messageDesc(file_cosmos_gov_v1_query, 10);

/**
 * QueryParamsResponse is the response type for the Query/Params RPC method.
 *
 * @generated from message cosmos.gov.v1.QueryParamsResponse
 */
export type QueryParamsResponse = Message<"cosmos.gov.v1.QueryParamsResponse"> & {
  /**
   * Deprecated: Prefer to use `params` instead.
   * voting_params defines the parameters related to voting.
   *
   * @generated from field: cosmos.gov.v1.VotingParams voting_params = 1 [deprecated = true];
   * @deprecated
   */
  votingParams?: VotingParams;

  /**
   * Deprecated: Prefer to use `params` instead.
   * deposit_params defines the parameters related to deposit.
   *
   * @generated from field: cosmos.gov.v1.DepositParams deposit_params = 2 [deprecated = true];
   * @deprecated
   */
  depositParams?: DepositParams;

  /**
   * Deprecated: Prefer to use `params` instead.
   * tally_params defines the parameters related to tally.
   *
   * @generated from field: cosmos.gov.v1.TallyParams tally_params = 3 [deprecated = true];
   * @deprecated
   */
  tallyParams?: TallyParams;

  /**
   * params defines all the parameters of x/gov module.
   *
   * @generated from field: cosmos.gov.v1.Params params = 4;
   */
  params?: Params;
};

/**
 * Describes the message cosmos.gov.v1.QueryParamsResponse.
 * Use `create(QueryParamsResponseSchema)` to create a new message.
 */
export const QueryParamsResponseSchema: GenMessage<QueryParamsResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_gov_v1_query, 11);

/**
 * QueryDepositRequest is the request type for the Query/Deposit RPC method.
 *
 * @generated from message cosmos.gov.v1.QueryDepositRequest
 */
export type QueryDepositRequest = Message<"cosmos.gov.v1.QueryDepositRequest"> & {
  /**
   * proposal_id defines the unique id of the proposal.
   *
   * @generated from field: uint64 proposal_id = 1;
   */
  proposalId: bigint;

  /**
   * depositor defines the deposit addresses from the proposals.
   *
   * @generated from field: string depositor = 2;
   */
  depositor: string;
};

/**
 * Describes the message cosmos.gov.v1.QueryDepositRequest.
 * Use `create(QueryDepositRequestSchema)` to create a new message.
 */
export const QueryDepositRequestSchema: GenMessage<QueryDepositRequest> = /*@__PURE__*/
  messageDesc(file_cosmos_gov_v1_query, 12);

/**
 * QueryDepositResponse is the response type for the Query/Deposit RPC method.
 *
 * @generated from message cosmos.gov.v1.QueryDepositResponse
 */
export type QueryDepositResponse = Message<"cosmos.gov.v1.QueryDepositResponse"> & {
  /**
   * deposit defines the requested deposit.
   *
   * @generated from field: cosmos.gov.v1.Deposit deposit = 1;
   */
  deposit?: Deposit;
};

/**
 * Describes the message cosmos.gov.v1.QueryDepositResponse.
 * Use `create(QueryDepositResponseSchema)` to create a new message.
 */
export const QueryDepositResponseSchema: GenMessage<QueryDepositResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_gov_v1_query, 13);

/**
 * QueryDepositsRequest is the request type for the Query/Deposits RPC method.
 *
 * @generated from message cosmos.gov.v1.QueryDepositsRequest
 */
export type QueryDepositsRequest = Message<"cosmos.gov.v1.QueryDepositsRequest"> & {
  /**
   * proposal_id defines the unique id of the proposal.
   *
   * @generated from field: uint64 proposal_id = 1;
   */
  proposalId: bigint;

  /**
   * pagination defines an optional pagination for the request.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageRequest pagination = 2;
   */
  pagination?: PageRequest;
};

/**
 * Describes the message cosmos.gov.v1.QueryDepositsRequest.
 * Use `create(QueryDepositsRequestSchema)` to create a new message.
 */
export const QueryDepositsRequestSchema: GenMessage<QueryDepositsRequest> = /*@__PURE__*/
  messageDesc(file_cosmos_gov_v1_query, 14);

/**
 * QueryDepositsResponse is the response type for the Query/Deposits RPC method.
 *
 * @generated from message cosmos.gov.v1.QueryDepositsResponse
 */
export type QueryDepositsResponse = Message<"cosmos.gov.v1.QueryDepositsResponse"> & {
  /**
   * deposits defines the requested deposits.
   *
   * @generated from field: repeated cosmos.gov.v1.Deposit deposits = 1;
   */
  deposits: Deposit[];

  /**
   * pagination defines the pagination in the response.
   *
   * @generated from field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
   */
  pagination?: PageResponse;
};

/**
 * Describes the message cosmos.gov.v1.QueryDepositsResponse.
 * Use `create(QueryDepositsResponseSchema)` to create a new message.
 */
export const QueryDepositsResponseSchema: GenMessage<QueryDepositsResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_gov_v1_query, 15);

/**
 * QueryTallyResultRequest is the request type for the Query/Tally RPC method.
 *
 * @generated from message cosmos.gov.v1.QueryTallyResultRequest
 */
export type QueryTallyResultRequest = Message<"cosmos.gov.v1.QueryTallyResultRequest"> & {
  /**
   * proposal_id defines the unique id of the proposal.
   *
   * @generated from field: uint64 proposal_id = 1;
   */
  proposalId: bigint;
};

/**
 * Describes the message cosmos.gov.v1.QueryTallyResultRequest.
 * Use `create(QueryTallyResultRequestSchema)` to create a new message.
 */
export const QueryTallyResultRequestSchema: GenMessage<QueryTallyResultRequest> = /*@__PURE__*/
  messageDesc(file_cosmos_gov_v1_query, 16);

/**
 * QueryTallyResultResponse is the response type for the Query/Tally RPC method.
 *
 * @generated from message cosmos.gov.v1.QueryTallyResultResponse
 */
export type QueryTallyResultResponse = Message<"cosmos.gov.v1.QueryTallyResultResponse"> & {
  /**
   * tally defines the requested tally.
   *
   * @generated from field: cosmos.gov.v1.TallyResult tally = 1;
   */
  tally?: TallyResult;
};

/**
 * Describes the message cosmos.gov.v1.QueryTallyResultResponse.
 * Use `create(QueryTallyResultResponseSchema)` to create a new message.
 */
export const QueryTallyResultResponseSchema: GenMessage<QueryTallyResultResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_gov_v1_query, 17);

/**
 * QueryProposalVoteOptionsRequest is the request type for the Query/ProposalVoteOptions RPC method.
 *
 * @generated from message cosmos.gov.v1.QueryProposalVoteOptionsRequest
 */
export type QueryProposalVoteOptionsRequest = Message<"cosmos.gov.v1.QueryProposalVoteOptionsRequest"> & {
  /**
   * proposal_id defines the unique id of the proposal.
   *
   * @generated from field: uint64 proposal_id = 1;
   */
  proposalId: bigint;
};

/**
 * Describes the message cosmos.gov.v1.QueryProposalVoteOptionsRequest.
 * Use `create(QueryProposalVoteOptionsRequestSchema)` to create a new message.
 */
export const QueryProposalVoteOptionsRequestSchema: GenMessage<QueryProposalVoteOptionsRequest> = /*@__PURE__*/
  messageDesc(file_cosmos_gov_v1_query, 18);

/**
 * QueryProposalVoteOptionsResponse is the response type for the Query/ProposalVoteOptions RPC method.
 *
 * @generated from message cosmos.gov.v1.QueryProposalVoteOptionsResponse
 */
export type QueryProposalVoteOptionsResponse = Message<"cosmos.gov.v1.QueryProposalVoteOptionsResponse"> & {
  /**
   * vote_options defines the valid voting options for a proposal.
   *
   * @generated from field: cosmos.gov.v1.ProposalVoteOptions vote_options = 1;
   */
  voteOptions?: ProposalVoteOptions;
};

/**
 * Describes the message cosmos.gov.v1.QueryProposalVoteOptionsResponse.
 * Use `create(QueryProposalVoteOptionsResponseSchema)` to create a new message.
 */
export const QueryProposalVoteOptionsResponseSchema: GenMessage<QueryProposalVoteOptionsResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_gov_v1_query, 19);

/**
 * QueryMessageBasedParamsRequest is the request type for the Query/MessageBasedParams RPC method.
 *
 * @generated from message cosmos.gov.v1.QueryMessageBasedParamsRequest
 */
export type QueryMessageBasedParamsRequest = Message<"cosmos.gov.v1.QueryMessageBasedParamsRequest"> & {
  /**
   * @generated from field: string msg_url = 1;
   */
  msgUrl: string;
};

/**
 * Describes the message cosmos.gov.v1.QueryMessageBasedParamsRequest.
 * Use `create(QueryMessageBasedParamsRequestSchema)` to create a new message.
 */
export const QueryMessageBasedParamsRequestSchema: GenMessage<QueryMessageBasedParamsRequest> = /*@__PURE__*/
  messageDesc(file_cosmos_gov_v1_query, 20);

/**
 * QueryMessageBasedParamsResponse is the response for the Query/MessageBasedParams RPC method.
 *
 * @generated from message cosmos.gov.v1.QueryMessageBasedParamsResponse
 */
export type QueryMessageBasedParamsResponse = Message<"cosmos.gov.v1.QueryMessageBasedParamsResponse"> & {
  /**
   * @generated from field: cosmos.gov.v1.MessageBasedParams params = 1;
   */
  params?: MessageBasedParams;
};

/**
 * Describes the message cosmos.gov.v1.QueryMessageBasedParamsResponse.
 * Use `create(QueryMessageBasedParamsResponseSchema)` to create a new message.
 */
export const QueryMessageBasedParamsResponseSchema: GenMessage<QueryMessageBasedParamsResponse> = /*@__PURE__*/
  messageDesc(file_cosmos_gov_v1_query, 21);

/**
 * Query defines the gRPC querier service for gov module
 *
 * @generated from service cosmos.gov.v1.Query
 */
export const Query: GenService<{
  /**
   * Constitution queries the chain's constitution.
   *
   * @generated from rpc cosmos.gov.v1.Query.Constitution
   */
  constitution: {
    methodKind: "unary";
    input: typeof QueryConstitutionRequestSchema;
    output: typeof QueryConstitutionResponseSchema;
  },
  /**
   * Proposal queries proposal details based on ProposalID.
   *
   * @generated from rpc cosmos.gov.v1.Query.Proposal
   */
  proposal: {
    methodKind: "unary";
    input: typeof QueryProposalRequestSchema;
    output: typeof QueryProposalResponseSchema;
  },
  /**
   * Proposals queries all proposals based on given status.
   *
   * @generated from rpc cosmos.gov.v1.Query.Proposals
   */
  proposals: {
    methodKind: "unary";
    input: typeof QueryProposalsRequestSchema;
    output: typeof QueryProposalsResponseSchema;
  },
  /**
   * Vote queries voted information based on proposalID, voterAddr.
   *
   * @generated from rpc cosmos.gov.v1.Query.Vote
   */
  vote: {
    methodKind: "unary";
    input: typeof QueryVoteRequestSchema;
    output: typeof QueryVoteResponseSchema;
  },
  /**
   * Votes queries votes of a given proposal.
   *
   * @generated from rpc cosmos.gov.v1.Query.Votes
   */
  votes: {
    methodKind: "unary";
    input: typeof QueryVotesRequestSchema;
    output: typeof QueryVotesResponseSchema;
  },
  /**
   * Params queries all parameters of the gov module.
   *
   * @generated from rpc cosmos.gov.v1.Query.Params
   */
  params: {
    methodKind: "unary";
    input: typeof QueryParamsRequestSchema;
    output: typeof QueryParamsResponseSchema;
  },
  /**
   * Deposit queries single deposit information based on proposalID, depositAddr.
   *
   * @generated from rpc cosmos.gov.v1.Query.Deposit
   */
  deposit: {
    methodKind: "unary";
    input: typeof QueryDepositRequestSchema;
    output: typeof QueryDepositResponseSchema;
  },
  /**
   * Deposits queries all deposits of a single proposal.
   *
   * @generated from rpc cosmos.gov.v1.Query.Deposits
   */
  deposits: {
    methodKind: "unary";
    input: typeof QueryDepositsRequestSchema;
    output: typeof QueryDepositsResponseSchema;
  },
  /**
   * TallyResult queries the tally of a proposal vote.
   *
   * @generated from rpc cosmos.gov.v1.Query.TallyResult
   */
  tallyResult: {
    methodKind: "unary";
    input: typeof QueryTallyResultRequestSchema;
    output: typeof QueryTallyResultResponseSchema;
  },
  /**
   * ProposalVoteOptions queries the valid voting options for a proposal.
   *
   * @generated from rpc cosmos.gov.v1.Query.ProposalVoteOptions
   */
  proposalVoteOptions: {
    methodKind: "unary";
    input: typeof QueryProposalVoteOptionsRequestSchema;
    output: typeof QueryProposalVoteOptionsResponseSchema;
  },
  /**
   * MessageBasedParams queries the message specific governance params based on a msg url.
   *
   * @generated from rpc cosmos.gov.v1.Query.MessageBasedParams
   */
  messageBasedParams: {
    methodKind: "unary";
    input: typeof QueryMessageBasedParamsRequestSchema;
    output: typeof QueryMessageBasedParamsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_cosmos_gov_v1_query, 0);

